CREATE PROCEDURE [dbo].[usp_Schedule_PrimeException_Email] 
(
	@File_Code INT,
	@Channel_Code INT,
	@EmailFor VARCHAR(500) = NULL,
	@ACQ_DEAL_RUN_CODE int,
	@DEAL_MOVIE_CODE int
)
AS
BEGIN
SET NOCOUNT ON;

BEGIN TRY

		IF(@EmailFor IS NULL)
		SET @EmailFor = 'N'
		
	DECLARE @Is_Mail_Send_ScheduleAsRun AS VARCHAR(1);	SET @Is_Mail_Send_ScheduleAsRun = 'Y'
	SELECT @Is_Mail_Send_ScheduleAsRun =   parameter_value FROM system_parameter_new WHERE LTRIM(RTRIM(parameter_name)) = 'Is_Mail_Send_ScheduleAsRun'
	
	
	IF(@Is_Mail_Send_ScheduleAsRun = 'Y')
	BEGIN
		--DECLARE @TitleName NVARCHAR(MAX),
		DECLARE @ChannelName NVARCHAR(MAX)
		--set @TitleName = ''
		set @ChannelName  = ''
		
		--SElect @TitleName = T.Title_Name  from Acq_Deal_Movie ADM 
		--inner join Title T on T.Title_Code = ADM.Acq_Deal_Movie_Code
		--where ADm.Acq_Deal_Movie_Code = @DEAL_MOVIE_CODE
		
		
		select @ChannelName = Channel_Name from Channel where Channel_Code = @ChannelName
		
		
		DECLARE @Exception_Cnt AS INT;	SET @Exception_Cnt = 0
		SELECT @Exception_Cnt = COUNT(*) FROM Email_Notification_Schedule WHERE File_Code = @File_Code AND ISNULL(IsMailSent,'N') = 'N' AND isnull(IsPrimeException,'N') = 'Y'
		Declare @DeletedCnt Int=0
		Select @DeletedCnt = COUNT(*) From Temp_BV_Schedule_DeletedRecords Where File_Code = @File_Code AND ISNULL(IsMailSent,'N') = 'N'
		
		Declare @ToatlException_Cnt Int = @Exception_Cnt + @DeletedCnt
		IF(@ToatlException_Cnt > 0)
		BEGIN
			DECLARE @DefaultSiteUrl VARCHAR(500);	SET @DefaultSiteUrl = ''
			SELECT @DefaultSiteUrl =  DefaultSiteUrl FROM System_Param
		
		
			DECLARE @UserName AS NVARCHAR(250);	SET @UserName = ''
			DECLARE @Emailbody AS NVARCHAR(MAX);	SET @Emailbody = ''
			DECLARE @ScheduleFileName AS NVARCHAR(250);	SET @ScheduleFileName = ''
			SELECT @ScheduleFileName = [File_Name] FROM Upload_Files WHERE File_code = @File_Code
			
			DECLARE @AiringChannelName AS NVARCHAR(250)
			SELECT @AiringChannelName = channel_name FROM Channel WHERE channel_code in
			(
				select top 1 ChannelCode from Upload_Files WHERE File_Code = @File_Code
			)
			
			-----2.1-----
			DECLARE @MailSubjectCr AS NVARCHAR(250)	
			SET @MailSubjectCr = 'Email Alert : Schedule data exception for '+@AiringChannelName+' channel' 
			
			-----2.2-----
			DECLARE @EMailFooter NVARCHAR(200)
			SET @EMailFooter ='&nbsp;</br>&nbsp;</br>
			<FONT SIZE="2" COLOR="gray">This email is generated by RIGHTSU</font>'
			
			-----2.3-----
			DECLARE @DatabaseEmail_Profile varchar(200)	
			SELECT @DatabaseEmail_Profile = parameter_value FROM system_parameter_new WHERE parameter_name = 'DatabaseEmail_Profile'
			
			PRINT '--===============3.5 Other Deal Rights Violation Email --==============='
			
			--Email Heading mentioned here.
			SET @Emailbody= 'The schedule file <b> ' + @ScheduleFileName + '</b> has exception for '+ @AiringChannelName+' channel. 
			<br>Exception details are given below.
			<br><br>For more details please login into the <b>Uto Righs Management System<b>. 
			<br><br><a href='+ @DefaultSiteUrl +' target=''_blank''><b>'+ @DefaultSiteUrl+'</b></a>
			<br><br><table border="1" cellspacing="0" cellpadding="3">'				
			
			--Table Heading mentioned below
			-- Total prime runs
			-- Available Runs
			DECLARE @PRIME_RUNS int ,@PRIME_Consumed_RUNS int ,@PRIME_RUNS_Balance int ,@OFF_PRIME_RUNS int ,@OFF_PRIME_Consumed_RUNS int, @OFF_PRIME_RUNS_Balance int 
			
			select @PRIME_RUNS = Prime_Run
				    ,@PRIME_Consumed_RUNS= Prime_Time_Provisional_Run_Count
				    ,@PRIME_RUNS_Balance = Prime_Time_Balance_Count
				    ,@OFF_PRIME_RUNS = Off_Prime_Run
				    ,@OFF_PRIME_Consumed_RUNS = Off_Prime_Time_Provisional_Run_Count
				    ,@OFF_PRIME_RUNS_Balance = Off_Prime_Time_Balance_Count 
				    
				    from Acq_Deal_Run  where Acq_Deal_Run_Code = @ACQ_DEAL_RUN_CODE
			
			DECLARE @Email_Primebody varchar(max)
			set @Email_Primebody = ''
			SET @Emailbody=@Emailbody + '<tr>
				<td style="color: #ffffff; background-color: #086B10"><b>Exception<b></td>
				<td style="color: #ffffff; background-color: #086B10"><b>Title Name<b></td>'
				
				IF(@EmailFor <> 'Outside Prime Time' AND @EmailFor <> 'Outside Off Prime Time')
				BEGIN
					SET @Emailbody=@Emailbody + '<td style="color: #ffffff; background-color: #086B10"><b>Runs<b></td>
									<td style="color: #ffffff; background-color: #086B10"><b>Consumed<b></td>
									<td style="color: #ffffff; background-color: #086B10"><b>Balance<b></td>'
				END
				
				SET @Emailbody=@Emailbody + '<td style="color: #ffffff; background-color: #F50606"><b>Airing Channel<b></td>
				<td style="color: #ffffff; background-color: #F50606"><b>Date of Schedule<b></td>
				<td style="color: #ffffff; background-color: #F50606"><b>Time of Schedule<b></td>
				</tr>'

			IF(@EmailFor = 'Exceeding Prime Time Runs')
			BEGIN					
					SELECT @Emailbody = @Emailbody +'<tr>
					<td>'+ CAST  (ISNULL(e.Email_Notification_Msg, ' ') AS NVARCHAR(2000)) +'</td>
					<td>'+ CAST  (ISNULL(e.Title_Name,' ')  AS NVARCHAR(2000)) +'</td>'+
					'<td>'+ CAST  (ISNULL(@PRIME_RUNS,' ')  AS NVARCHAR(2000)) +'</td>'+
					'<td>'+ CAST  (ISNULL(@PRIME_Consumed_RUNS, ' ') AS NVARCHAR(2000)) +'</td>'+
					'<td>'+ CAST  (ISNULL(@PRIME_RUNS_Balance, ' ') AS NVARCHAR(2000)) +'</td>'+
					'<td>'+ CAST  (ISNULL(e.Channel_Name, ' ') AS NVARCHAR(2000)) +'</td>
					<td>'+ CAST  (ISNULL(Schedule_Item_Log_Date,' ') AS VARCHAR(2000))  +'</td>
					<td>'+ CAST  (ISNULL(Schedule_Item_Log_Time, ' ') AS VARCHAR(2000)) +'</td>
					</tr>'
					FROM Email_Notification_Schedule e WHERE e.File_Code = @File_Code AND ISNULL(IsMailSent,'N') = 'N'
			END
			ELSE IF(@EmailFor = 'Exceeding OffPrime Time Runs')
			BEGIN	
					SELECT @Emailbody = @Emailbody +'<tr>
					<td>'+ CAST  (ISNULL(e.Email_Notification_Msg, ' ') AS NVARCHAR(2000)) +'</td>
					<td>'+ CAST  (ISNULL(e.Title_Name,' ')  AS NVARCHAR(2000)) +'</td>'+
					'<td>'+ CAST  (ISNULL(@OFF_PRIME_RUNS,' ')  AS VARCHAR(2000)) +'</td>'+
					'<td>'+ CAST  (ISNULL(@OFF_PRIME_Consumed_RUNS, ' ') AS VARCHAR(2000)) +'</td>'+
					'<td>'+ CAST  (ISNULL(@OFF_PRIME_RUNS_Balance, ' ') AS VARCHAR(2000)) +'</td>'+
					'<td>'+ CAST  (ISNULL(e.Count_Of_Schedule, ' ') AS VARCHAR(2000)) +'</td>
					<td>'+ CAST  (ISNULL(e.Channel_Name, ' ') AS NVARCHAR(2000)) +'</td>
					<td>'+ CAST  (ISNULL(Schedule_Item_Log_Date,' ') AS VARCHAR(2000))  +'</td>
					<td>'+ CAST  (ISNULL(Schedule_Item_Log_Time, ' ') AS VARCHAR(2000)) +'</td>
					</tr>'
					FROM Email_Notification_Schedule e WHERE e.File_Code = @File_Code AND ISNULL(IsMailSent,'N') = 'N'
			END
			ELSE IF(@EmailFor = 'Outside Prime Time' OR @EmailFor = 'Outside Off Prime Time')
			BEGIN
					SELECT @Emailbody = @Emailbody +'<tr>
					<td>'+ CAST  (ISNULL(e.Email_Notification_Msg, ' ') AS NVARCHAR(2000)) +'</td>
					<td>'+ CAST  (ISNULL(e.Title_Name,' ')  AS NVARCHAR(2000)) +'</td>'+
					'<td>'+ CAST  (ISNULL(e.Channel_Name, ' ') AS NVARCHAR(2000)) +'</td>
					<td>'+ CAST  (ISNULL(Schedule_Item_Log_Date,' ') AS VARCHAR(2000))  +'</td>
					<td>'+ CAST  (ISNULL(Schedule_Item_Log_Time, ' ') AS VARCHAR(2000)) +'</td>
					</tr>'
					FROM Email_Notification_Schedule e WHERE e.File_Code = @File_Code AND ISNULL(IsMailSent,'N') = 'N'
			END
			
			
			CREATE TABLE #Users_Data
			(
				users_code INT, 
				login_name NVARCHAR(250), 
				first_name NVARCHAR(250), 
				middle_Name NVARCHAR(250),
				last_name NVARCHAR(250),
				email_id NVARCHAR(250),
				security_group_name NVARCHAR(250),
				UserFullName NVARCHAR(250),
			)

			INSERT INTO #Users_Data (users_code, login_name, first_name, middle_Name, last_name, email_id, security_group_name, UserFullName)
			select U.users_code, U.login_name, U.first_name, U.middle_Name, U.last_name,U.email_id ,
			SG.security_group_name,
			ISNULL(U.first_name,'') + ' ' + ISNULL(U.middle_Name,'') + ' ' + ISNULL(U.last_name,'') + '   ('+ ISNULL(SG.security_group_name,'') + ')'
			from BVException bve
			INNER JOIN BVException_Channel bve_c on bve_c.bv_exception_code = bve.bv_exception_code and bve_c.channel_code = @Channel_Code
			INNER JOIN BVException_Users bve_u on bve_u.bv_exception_code = bve.bv_exception_code
			INNER JOIN Users U on U.users_code = bve_u.users_code
			INNER JOIN Security_Group SG ON SG.security_group_code = U.security_group_code
			WHERE bve.bv_exception_type = 'S'

			DECLARE @cur_user_code INT
			DECLARE @cur_login_name NVARCHAR(500)	
			DECLARE @cur_first_name NVARCHAR(500)
			DECLARE @cur_middle_name NVARCHAR(500)	
			DECLARE @cur_last_name NVARCHAR(500)
			DECLARE @cur_email_id NVARCHAR(500) 
			DECLARE @cur_security_group_name NVARCHAR(500) 
			DECLARE @cur_userFullName NVARCHAR(500) 	

			--//---------- CURSOR START ----------//--
			DECLARE cur_on_Users_Data CURSOR
			KEYSET
			FOR SELECT  users_code, login_name, first_name, middle_Name, last_name, email_id, security_group_name, UserFullName
			FROM #Users_Data
			OPEN cur_on_Users_Data
			FETCH NEXT FROM cur_on_Users_Data INTO @cur_user_code, @cur_login_name, @cur_first_name, @cur_middle_name, @cur_last_name,
			@cur_email_id, @cur_security_group_name, @cur_userFullName
			WHILE (@@fetch_status <> -1)
			BEGIN
				IF (@@fetch_status <> -2)
				BEGIN
					PRINT 'IN CURSOR'
					DECLARE @Emailbody_Username NVARCHAR(250);	SET @Emailbody_Username = ''
					SET @Emailbody_Username = 'Dear &nbsp;' + @cur_userFullName + ' ,<br><br>'
					
					SET @Emailbody=@Emailbody+'</table>'				
					SET @Emailbody=@Emailbody_Username + @Emailbody + @EMailFooter

					--PRINT ' @Emailbody_Username ' + cast(@Emailbody_Username  as varchar(2000))
					--PRINT ' DatabaseEmail_Profile ' + cast(@DatabaseEmail_Profile  as varchar(2000))
					--PRINT ' @MailSubjectCr ' + cast(@MailSubjectCr  as varchar(2000))
					--PRINT ' @Emailbody ' + cast(@Emailbody  as varchar(2000))
					
					EXEC msdb.dbo.sp_send_dbmail 
					@profile_name = @DatabaseEmail_Profile,
					@recipients =  @cur_email_id,
					@subject = @MailSubjectCr,
					@body = @Emailbody, 
					@body_format = 'HTML';  
					
					--SELECT @cur_email_id  
					PRINT 'Email sent to ' + @cur_email_id
				END
			FETCH NEXT FROM cur_on_Users_Data INTO @cur_user_code, @cur_login_name, @cur_first_name, @cur_middle_name, @cur_last_name,
			@cur_email_id, @cur_security_group_name, @cur_userFullName
			END
			CLOSE cur_on_Users_Data
			DEALLOCATE cur_on_Users_Data
			--//---------- CURSOR END----------//--
			-------------------------------------------4.0 LOOPING_THROUGH_USERS_DATA -------------------------------------------			
			
			UPDATE Email_Notification_Schedule SET IsMailSent = 'Y' WHERE File_Code = @File_Code				
			UPDATE Temp_BV_Schedule_DeletedRecords SET IsMailSent = 'Y' WHERE File_Code = @File_Code				
				
			------------------------------------------- DELETE TEMP TABLES -------------------------------------------	
			IF OBJECT_ID('tempdb..#Users_Data') IS NOT NULL
			BEGIN
				DROP TABLE #Users_Data
			END
		END
	END
END TRY
BEGIN CATCH
	PRINT 'ERROR'
	
	PRINT ERROR_MESSAGE() 
	CLOSE cur_on_Users_Data
	DEALLOCATE cur_on_Users_Data
	
	INSERT INTO	ERRORON_SENDMAIL_FOR_WORKFLOW 
	SELECT
	ERROR_NUMBER() AS ERRORNUMBER,
	ERROR_SEVERITY() AS ERRORSEVERITY,		
	ERROR_STATE() AS ERRORSTATE,
	ERROR_PROCEDURE() AS ERRORPROCEDURE,
	ERROR_LINE() AS ERRORLINE,
	ERROR_MESSAGE() AS ERRORMESSAGE;
END CATCH
	
END

/*
EXEC dbo.[usp_Schedule_PrimeException_Email]  76,24,'Outside Prime Time',4305,2808
EXEC dbo.[usp_Schedule_PrimeException_Email]  75,	24, 'Exceeding Prime Time Runs', 4305, 2808

*/