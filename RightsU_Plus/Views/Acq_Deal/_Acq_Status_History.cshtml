@model List<RightsU_Entities.USP_List_Status_History_Result>
@{
    RightsU_Entities.Deal_Schema objSchema = new RightsU_Entities.Deal_Schema();
    if (Session[RightsU_Entities.RightsU_Session.ACQ_DEAL_SCHEMA] != null)
    {
        objSchema = (RightsU_Entities.Deal_Schema)Session[RightsU_Entities.RightsU_Session.ACQ_DEAL_SCHEMA];
    }
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}

<script type="text/javascript">

    var recordLockingCode_G = @ViewBag.Record_Locking_Code;
    var dealMode_G = '@objSchema.Mode';

    var URL_Global_Refresh_Lock = '@Url.Action("Refresh_Lock", "Global", null, Request.Url.Scheme)';
    var URL_Global_SetApprovalRemarks = '@Url.Action("SetApprovalRemarks", "Global")';

    $(document).ready(function () {
        debugger;
        showLoading();
        if (recordLockingCode_G > 0)
            Call_RefreshRecordReleaseTime(recordLockingCode_G,URL_Global_Refresh_Lock);

        initializeExpander();
        hideLoading();
        debugger;
        //$("#ancFileName").attr('href','Help/index.html?IntCode=@Session["FileName"]');
        //$('#hdn_curent_TabFor_MultiLang_Acq').val(tabName);
       // $("#ancFileName").attr('href','Help/Masters/Layout.html?acq_StatusHistory');
        //window.open(' ,'_blank');
    });
    function ValidateSave() {
        showLoading();
        var Isvalid = true;
        // Code for Maintaining approval remarks in session
        if (dealMode_G == 'APRV') {
            var approvalremarks = $('#approvalremarks').val();
            $.ajax({
                type: "POST",
                url: URL_Global_SetApprovalRemarks,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                async: true,
                data: JSON.stringify({
                    approvalremarks: $('#approvalremarks').val()
                }),
                success: function (result) {
                    Isvalid = true;
                },
                error: function (result) {
                    Isvalid = false;
                }
            });
        }
        else
            Isvalid = true;

        if(Isvalid)
        {
            hideLoading();
            var tabName = $('#hdnTabName').val();
            BindPartialTabs(tabName);
        }
        hideLoading();
        //Code end for approval
        return Isvalid;

    }
</script>

<div class="grid_area">
    <div class="navigation_tabs">
        <div class="tabbable">
            <div class="tab-content clearfix table-wrapper scale_table_container acq">
                <div class="tab-pane active" id="tabStatHist">
                    <div class="scale_table_block">
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="width: 10%; text-align: center;">@objMessageKey.Version</th>
                                    <th style="width: 20%; text-align: center;">@objMessageKey.Status</th>
                                    <th style="width: 20%; text-align: center;">@objMessageKey.Date</th>
                                    <th style="width: 25%; text-align: center;">@objMessageKey.By</th>
                                    <th style="width: 25%; text-align: center;">@objMessageKey.Remarks</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    foreach (var item in Model)
                                    {

                                        System.Globalization.CultureInfo cultureinfo = new System.Globalization.CultureInfo("ar-AE");

                                        <tr>
                                            @{
                                                if (item.Version != "0001")
                                                {
                                                    if (Convert.ToInt32(item.Version) <= 9)
                                                    {
                                                        item.Version = "000" + item.Version;
                                                    }
                                                    else if (Convert.ToInt32(item.Version) <= 99)
                                                    {
                                                        item.Version = "00" + item.Version;
                                                    }
                                                }
                                            }
                                            <td>@item.Version</td>
                                            <td>@Html.DisplayFor(modalitem => item.Status)</td>
                                            @{
                                                string dt_Arabic = Convert.ToDateTime(item.Date).ToString("dd-MMM-yyyy", cultureinfo);
                                                string dt = Convert.ToDateTime(item.Date).ToString("dd-MMM-yyyy");
                                            }
                                            @if (objMessageKey.LayoutDirection == "RTL")
                                            {
                                                <td>@dt_Arabic</td>
                                            }
                                            else
                                            {
                                                <td>@dt</td>
                                            }
                                            <td>@Html.DisplayFor(modalitem => item.By)</td>
                                            <td>
                                                <div class="expandable">
                                                    @item.Remarks
                                                    <a href="#"><span></span></a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @if (objSchema.Mode == "EWOA")
                {
                    @Html.Partial("_Edit_Without_Approval")
                }
                @if (objSchema.Mode == "APRV")
                {
                    @Html.Partial("_Approved_List")
                }
                else if (objSchema.Mode != "EWOA")
                {
                    <div class="bottom_action">
                        <ul class="form_link_nav clearfix">
                            <li>
                                @if (Convert.ToInt32(ViewBag.prevAcq_Deal) > 0)
                                {
                                    <input type="button" id="btnCancelDeal" class="btn btn-primary" value="@objMessageKey.Cancel"
                                           onclick="location.href='@Url.Action("ButtonEvents", "Acq_List", new { CommandName = "View", Acq_Deal_Code = ViewBag.prevAcq_Deal })'">
                                }
                                else
                                {

                                    <input type="button" id="btnCancelDeal" class="btn btn-primary" value="@objMessageKey.Cancel"
                                           onclick="location.href='@Url.Action("Cancel", "Acq_Status_History")    '">
                                }
                            </li>
                        </ul>
                    </div>
                }
                <input type="hidden" id="hdnTabName" name="hdnTabName" />
            </div>
        </div>
    </div>
</div>