@using UTOFrameWork.FrameworkClasses
@{
    RightsU_Entities.Deal_Schema objSchema = new RightsU_Entities.Deal_Schema();
    if (Session[RightsU_Entities.RightsU_Session.ACQ_DEAL_SCHEMA] != null)
    {
        objSchema = (RightsU_Entities.Deal_Schema)Session[RightsU_Entities.RightsU_Session.ACQ_DEAL_SCHEMA];
    }
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<link type="text/css" rel="stylesheet" href="~/css/ui.fancytree.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<script type="text/javascript" src="~/JS_Core/jquery.fancytree.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<link href="~/CSS/Rights_Tab.css" rel="stylesheet" />
<script>

    var Dealmode_G = '@objSchema.Mode';
    var r = '';
    var URL_BindRightsFilterData = '@Url.Action("BindRightsFilterData","Acq_Rights_List")';
    var URL_BindBulkUpdateList = '@Url.Action("BindBulkUpdateList", "Acq_Rights_List")';

    $(document).ready(function () {
        debugger;
        addNumeric();
        //initializeChosen();
        if ('@ViewBag.TitleCode' != '')
            $('#hdnTitle_Code').val('@ViewBag.TitleCode');
        $('#hdnPalform_Code').val('@ViewBag.PlatformCodes');
        BindChanges();
        var ViewType = $('input[name=optViewType]:checked').val();
        BindGridNew($("#" + ViewType)[0], 'Y');
        //LoadBulkUpdateList();
        BindPlatform();
        BindRightsFilterData();
        $("btnSave").attr("style", "display:none");
        $("btnCancelDeal").attr("style", "display:none");

        $('#Is_Tentative').change(function () {
            OnClickTentative();
        });
        $('#Term_YY,#Term_MM,#Term_DD').change(function () {
            OnFocusLostTerm();
        });
        $('#Start_Date').change(function () {
            SetMinDt();
            AutoPopulateTerm();
        });
        $('#End_Date').change(function () {
            SetMaxDt();
            AutoPopulateTerm();
        });
        $('#txtPerpetuity_Date').change(function () {
            CalculatePerpetuityEndDate();
        });

        //function CalculateTerm(startDate, endDate) {
        //    var val = CalculateMonthBetweenTwoDate(startDate, endDate);
        //    var year = val / 12;
        //    var month = val % 12;
        //    var term = parseInt(year) + '.' + month;
        //    return term;
        //}



        function CalculateTerm(startDate, endDate) {
            debugger;
            var val = CalculateMonthBetweenTwoDate(startDate, endDate);
            var year = val / 12;
            var month = val % 12;

            var day = 0;
            var SDno = startDate.getDate();
            var EDno = endDate.getDate();

            if (EDno > SDno) {
                day = EDno - SDno
            }
            else if (startDate.getMonth() == endDate.getMonth() && startDate.getFullYear() == endDate.getFullYear()) {
                day = CalculateDaysBetweenTwoDates(startDate, endDate);
            }
            else if (SDno == EDno) {
                day = 0;
            }
            else {
                //var m = endDate.getMonth(),
                //    y = endDate.getFullYear();
                //var FirstDay = new Date(y, m, 1);
                //day = CalculateDaysBetweenTwoDates(FirstDay, endDate);

                ////startDate.setMonth(startDate.getMonth() + month);
                ////startDate.setYear(startDate.getYear() + year);

                //m = startDate.getMonth(),
                //    y = startDate.getFullYear();
                //var LastDay = new Date(y, m + 1, 0);
                //day = day + CalculateDaysBetweenTwoDates(startDate, LastDay) + 1;

                var startYear = startDate.getFullYear();
                var startMonth = startDate.getMonth();
                var startDay = startDate.getDate();

                var endYear = endDate.getFullYear();
                var endMonth = endDate.getMonth();
                var endDay = endDate.getDate();

                // We calculate February based on end year as it might be a leep year which might influence the number of days.
                var february = (endYear % 4 == 0 && endYear % 100 != 0) || endYear % 400 == 0 ? 29 : 28;
                var daysOfMonth = [31, february, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

                var startDateNotPassedInEndYear = (endMonth < startMonth) || endMonth == startMonth && endDay < startDay;
                year = endYear - startYear - (startDateNotPassedInEndYear ? 1 : 0);

                month = (12 + endMonth - startMonth - (endDay < startDay ? 1 : 0)) % 12;

                // (12 + ...) % 12 makes sure index is always between 0 and 11
                day = startDay <= endDay ? endDay - startDay : daysOfMonth[(12 + endMonth - 1) % 12] - startDay + endDay;
            }
            var term = parseInt(year) + '.' + month + "." + day;
            return term;
        }function CalculateMonthBetweenTwoDate(startDate, endDate) {
            var months = (endDate.getFullYear() - startDate.getFullYear()) * 12;
            months += endDate.getMonth() - startDate.getMonth();

            if (endDate.getDate() < startDate.getDate())
                months--;
            return months;
        }

        function CalculateDaysBetweenTwoDates(startDate, endDate) {
            var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
            var diffDays = Math.round(Math.abs((startDate.getTime() - endDate.getTime()) / (oneDay)))
            return diffDays;
        }

        function AutoPopulateTerm() {
            debugger;
            var txtStartDate = $('#Start_Date');
            var txtEndDate = $('#End_Date');
            var rightSD = new Date(MakeDateFormate(txtStartDate.val()));
            var rightED = new Date(MakeDateFormate(txtEndDate.val()));

            if (!isNaN(rightSD) && !isNaN(rightED)) {
                rightED.setDate(rightED.getDate() + 1);
                var term = CalculateTerm(rightSD, rightED);
                var arr = term.split('.');
                $('#Term_YY').val(arr[0]);
                $('#Term_MM').val(arr[1]);
                $('#Term_DD').val(arr[2]);
            }
        }
        $("#Term_YY,#Term_MM,#Term_DD").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            maxPreDecimalPlaces: 2,
            maxDecimalPlaces: 0
        });
    });

    function addNumeric() {
        $(".pagingSize").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 99,
            min: 1
        });
    }

    function BindRightsFilterData() {
        $.ajax({
            type: "POST",
            url: URL_BindRightsFilterData,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            async: false,
            data: JSON.stringify({
                callFor: 'BLK'
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#divRightsFilterBLK').empty();
                    $('#divRightsFilterBLK').html(result);
                    initializeExpander();
                    initializeTooltip();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

    function CalculatePerpetuityEndDate() {
        var strSD = $('#txtPerpetuity_Date').val();
        if (strSD != '') {
            var startDate = new Date(MakeDateFormate(strSD));
            if (!isNaN(startDate)) {
                var year = $('#hdnTerm_Perputity').val();
                var endDate = CalculateEndDate(startDate, year, 0, 0);
                $('#txtPerpetuity_EndDate').val(endDate);
            }
        }
    }

    function PageSize_OnChange() {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        var IsValid = ValidatePageSize();
        var ViewType = $('input[name=optViewType]:checked').val();

        if (IsValid)
            BindGridNew($("#" + ViewType)[0], 'Y');
            //LoadBulkUpdateList();
        else
            return false;
    }

    function SetMinDt() {
        setMinMaxDates('End_Date', $('#Start_Date').val(), '');
    }
    function SetMaxDt() {
        setMinMaxDates('Start_Date', '', $('#End_Date').val());
    }
    function OnClickTentative(control) {
        var IsTentative = false;
        if ($('#Is_Tentative').prop('checked'))
            IsTentative = true
        if (IsTentative) {
            $('#End_Date').prop("disabled", true);
            $('#End_Date').val('');
        }
        else {
            $('#End_Date').prop("disabled", false);
            OnFocusLostTerm();
        }
    }
    function MakeDateFormate(dateInString) {
        if (dateInString != null || dateInString != "") {
            var array = dateInString.split('/');
            var month = parseFloat(array[1]);
            switch (month) {
                case 1:
                    //  array[1] = "Jan";
                    array[1] = "01";
                    break;

                case 2:
                    // array[1] = "Feb";
                    array[1] = "02";
                    break;

                case 3:
                    // array[1] = "Mar";
                    array[1] = "03";
                    break;

                case 4:
                    //array[1] = "Apr";
                    array[1] = "04";
                    break;

                case 5:
                    //array[1] = "May";
                    array[1] = "05";
                    break;

                case 6:
                    //array[1] = "Jun";
                    array[1] = "06";
                    break;

                case 7:
                    //array[1] = "Jul";
                    array[1] = "07";
                    break;

                case 8:
                    //array[1] = "Aug";
                    array[1] = "08";
                    break;

                case 9:
                    //array[1] = "Sep";
                    array[1] = "09";
                    break;

                case 10:
                    //array[1] = "Oct";
                    array[1] = "10";
                    break;

                case 11:
                    //array[1] = "Nov";
                    array[1] = "11";
                    break;

                case 12:
                    //array[1] = "Dec";
                    array[1] = "12";
                    break;
            }

            //var format = array[0] + "-" + array[1] + "-" + array[2];
            var format = array[2] + "-" + array[1] + "-" + array[0];
            return format;
        }
        return "";
    }

    function OnFocusLostTerm() {
        debugger;
        var canAssign = true;
        if ($('#Is_Tentative').prop('checked'))
            canAssign = false

        var txtStartDate = $('#Start_Date');
        var txtEndDate = $('#End_Date');
        var txtTermYear = $('#Term_YY');
        var txtTermMonth = $('#Term_MM');
        var txtTermDay = $('#Term_DD');

        if (txtTermYear.val() == '' || isNaN(txtTermYear.val()))
            txtTermYear.val('0');
        if (txtTermMonth.val() == '' || isNaN(txtTermMonth.val()))
            txtTermMonth.val('0');
        if (txtTermDay.val() == '' || isNaN(txtTermDay.val()))
            txtTermDay.val('0');

        if (txtStartDate.val() != "") {
            var rightSD = new Date(MakeDateFormate(txtStartDate.val()));
            if (!isNaN(rightSD)) {

                var year = 0;
                var month = 0;
                var day = 0;

                if (txtTermYear.val() != '')
                    year = parseInt(txtTermYear.val());
                if (txtTermMonth.val() != '')
                    month = parseInt(txtTermMonth.val());
                if (txtTermDay.val() != '')
                    day = parseInt(txtTermDay.val());

                if (year > 0 || month > 0) {
                    var newDate = CalculateEndDate(rightSD, year, month, day);
                    if (canAssign) {
                        txtEndDate.val(newDate);
                    }
                    else {
                        txtEndDate.val('');
                    }
                }
                else {
                    txtEndDate.val('');
                }
            }
        }
        else if (txtEndDate.val() != "") {
            var rightED = new Date(MakeDateFormate(txtEndDate.val()));
            if (!isNaN(rightED)) {

                var year = 0;
                var month = 0;
                var day = 0;

                if (txtTermYear.val() != '')
                    year = parseInt(txtTermYear.val());
                if (txtTermMonth.val() != '')
                    month = parseInt(txtTermMonth.val());
                if (txtTermDay.val() != '')
                    day = parseInt(txtTermDay.val());

                if (year > 0 || month > 0 || day > 0) {
                    var newDate = CalculateStartDate(rightED, year, month, day);
                    txtStartDate.val(newDate);
                }
                else {
                    txtStartDate.val('');
                }
            }
        }
        else {
            txtTermYear.val('0');
            txtTermMonth.val('0');
            txtTermDay.val('0');
        }
        //CalculateROFRDate();
    }
    function BindPlatform() {
        var selectedTitles = '';
        if ($("#hdnTitle_Code").val() != null)
            selectedTitles = $('#hdnTitle_Code').val();
        $.ajax({
            type: "POST",
            url: '@Url.Action("BindPlatformTreeView", "Acq_Rights")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                strPlatform: '',
                strTitles: selectedTitles,
                IsBulk: 'Y'
            }),
            async: true,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                $('#tree').html(result);
            },
            error: function (result) { }
        });
    }

    function CalculateEndDate(startDate, year, month, days) {
        var yearToMonth = 12 * year;
        month = month + yearToMonth;
        startDate.setMonth(startDate.getMonth() + month);
        startDate.setDate(startDate.getDate() + days);
        startDate.setDate(startDate.getDate() - 1);
        var newDateStr = ConvertDateToCurrentFormat(startDate);
        return newDateStr;
    }
    function CalculateStartDate(startDate, year, month) {
        var yearToMonth = 12 * year;
        month = month + yearToMonth;
        startDate.setMonth(startDate.getMonth() - month);
        startDate.setDate(startDate.getDate() - days);
        startDate.setDate(startDate.getDate() + 1);
        var newDateStr = ConvertDateToCurrentFormat(startDate);
        return newDateStr;
    }
    function ConvertDateToCurrentFormat(objDate) {
        var dd = objDate.getDate();
        var mm = objDate.getMonth() + 1; //January is 0!
        var yyyy = objDate.getFullYear();

        if (dd < 10)
            dd = '0' + dd

        if (mm < 10)
            mm = '0' + mm

        var newDate = dd + '/' + mm + '/' + yyyy;
        return newDate;
    }

    function CalculateMonthBetweenTwoDate(startDate, endDate) {
        var months = (endDate.getFullYear() - startDate.getFullYear()) * 12;
        months += endDate.getMonth() - startDate.getMonth();

        // Subtract one month if b's date is less that a's.
        if (endDate.getDate() < startDate.getDate())
            months--;
        return months;
    }

    function BindChanges() {
        debugger;
        $.ajax({
            type: "POST",
            url: '@Url.Action("BindChangeDropdown", "Acq_Rights_List")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $("#ddlChange").empty();
                $.each(result, function () {
                    if (this.Selected == true)
                        $("#ddlChange").append($("<option />").val(this.Value).text(this.Text).attr("selected", "selected"));
                    else
                        $("#ddlChange").append($("<option />").val(this.Value).text(this.Text));
                });
                $("#ddlChange").trigger("chosen:updated");
                initializeChosen();
            },
            error: function (result) { }
        });
    }

    function Search_BulkUpdate(key) {
        var isValid = tree;
        if (key == "S") {
            if ($.trim($('#SearchRights').val()) == "") {
                $('#SearchRights').val('').attr('required', true);
                isValid = false;
            }
        }
        else {
            $('#SearchRights').val('').attr('required', false);
        }
        var ViewType = $('input[name=optViewType]:checked').val();
        if (isValid) {
            BindGridNew($("#" + ViewType)[0], 'Y');
            //LoadBulkUpdateList();
        }
    }

    function LoadBulkUpdateList() {
        var pageNo = '1';
        if ($("#hdnPageIndex") != undefined && $("#hdnPageIndex").val() != "")
             pageNo = $("#hdnPageIndex").val();

        var searchText = $.trim($('#SearchRights').val());
        $.ajax({
            type: "POST",
            url: URL_BindBulkUpdateList,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                searchText: searchText,
                pageSize: $('#txtPageSize').val(),
                pageNo: pageNo
            }),
            async: false,
            success: function (result) {
                if (result == "true")
                    redirectToLogin();
                else {
                    $("#div_BindGrid").html(result);
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

    function changediv() {
        debugger;
        $('#divRightsPeriod,#divPlatform,#divCountry,#divTerritory,#divSubLan,#divSubLanGrp,#divDubLan,#divDubLanGrp,#divExclusive,.divSublicensing,#divTitleLanguage,#ActionDiv').attr("style", "display:none");
        var ddlchange = $('#ddlChange').val();
        BindDropdown(ddlchange);
        if (ddlchange == 'RP') {
            $('#divRightsPeriod').attr("style", "display:block");
            $('#ActionDiv').attr("style", "display:none");
            if ($('#hdnRights_Type').val() == '')
                $('#hdnRights_Type').val('Y');
        }
        else if (ddlchange == 'P') {
            $('#divPlatform').attr("style", "display:block");
            $('#ActionDiv').attr("style", "display:block");
        }
        else if (ddlchange == 'T' || ddlchange == 'I') {
            $('#divTerritory').attr("style", "display:block");
            $('#ActionDiv').attr("style", "display:block");
        }
        else if (ddlchange == 'SL' || ddlchange == 'SG') {
            $('#divSubLan').attr("style", "display:block");
            $('#ActionDiv').attr("style", "display:block");
        }
        else if (ddlchange == 'DL' || ddlchange == 'DG') {
            $('#divDubLan').attr("style", "display:block");
            $('#ActionDiv').attr("style", "display:block");
        }
        else if (ddlchange == 'E') {
            $('#divExclusive').attr("style", "display:block");
            $('#ActionDiv').attr("style", "display:none");
        }
        else if (ddlchange == 'S') {
            $('.divSublicensing').attr("style", "display:block");
            $("#SubLicensingY").prop("checked", true);
            $('#Sub_License_Code').val('').trigger("chosen:updated");
            $('#ActionDiv').attr("style", "display:none");
        }
        else if (ddlchange == 'TL') {
            $('#divTitleLanguage').attr("style", "display:block");
            $('#ActionDiv').attr("style", "display:none");
        }
        $('.checkbox').prop('checked', false);
    }
    function BindDropdown(SelectedType) {
        debugger;

        var selectedTitles = '';
        if ($("#hdnTitle_Code").val() != null)
            selectedTitles = $('#hdnTitle_Code').val();
        var platformCodes = $('#hdnPalform_Code').val();
        var region_type = 'G';
        var SL_Type = 'G';
        var DL_Type = 'G';
        if (SelectedType == 'I' || SelectedType == 'SL' || SelectedType == 'DL') {
            region_type = 'I';
            SL_Type = 'L';
            DL_Type = 'L';
        }

        var selectedId = '';
        if (SelectedType == "I" || SelectedType == "T") {
            selectedId = 'lbTerritory';
        }
        else if (SelectedType == "DL" || SelectedType == "DG") {
            selectedId = 'lbDub_Language';
        }
        else if (SelectedType == "SL" || SelectedType == "SG") {
            selectedId = 'lbSub_Language';
        }
        if (SelectedType == 'S')
            SelectedType = 'SBL';
        var selectedCodes = '';
        var selected_Territory = '';
        var selected_Sub_Lang = '';
        var selected_Dub_Lang = '';

        $.ajax({
            type: "POST",
            url: '@Url.Action("Bind_JSON_ListBox", "Acq_Rights_List")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            async: true,
            data: JSON.stringify({
                str_Type: SelectedType,
                Is_Thetrical: 'N'
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                if (result == 'Holdback is already added.') {
                    showAlert('E', result);
                }
                else {

                    $("#lbTerritory,#lbSub_Language,#lbDub_Language,#Sub_License_Code,#ddlMilestone_Type_Code,#ddlMilestone_Unit_Type").empty();
                    debugger;

                    if (SelectedType == 'RP') {
                        $(result.Milestone_Type_List).each(function (index, item) {
                            $("#ddlMilestone_Type_Code").append($("<option />").val(this.Value).text(this.Text));
                        });
                        $("#ddlMilestone_Type_Code").val(result.Milestone_Type_Code)

                        $(result.Milestone_Unit_Type_List).each(function (index, item) {
                            $("#ddlMilestone_Unit_Type").append($("<option />").val(this.Value).text(this.Text));
                        });
                        $("#ddlMilestone_Unit_Type").val(result.Milestone_Unit_Type)
                        $("#ddlMilestone_Type_Code").val(selected_Territory).trigger("chosen:updated");
                        $("#ddlMilestone_Unit_Type").val(selected_Territory).trigger("chosen:updated");
                    }
                    else {
                        $(result).each(function (index, item) {


                            if (SelectedType == "I" || SelectedType == "T")
                                $("#lbTerritory").append($("<option>").val(this.Value).text(this.Text));
                            else if (SelectedType == "SL" || SelectedType == "SG")
                                $("#lbSub_Language").append($("<option>").val(this.Value).text(this.Text));
                            else if (SelectedType == "DL" || SelectedType == "DG")
                                $("#lbDub_Language").append($("<option>").val(this.Value).text(this.Text));
                            if (SelectedType == 'SBL') {
                                $("#Sub_License_Code").append($("<option>").val(this.Value).text(this.Text));
                            }
                        });
                    }
                    //if (SelectedType == 'A') {
                    $("#lbTerritory").val(selected_Territory);
                    $("#lbSub_Language").val(selected_Sub_Lang);
                    $("#lbDub_Language").val(selected_Dub_Lang);
                    $("#Sub_License_Code").val(selected_Dub_Lang).trigger("chosen:updated");
                    $('#lbTerritory,#lbSub_Language,#lbDub_Language').SumoSelect();
                    $('#lbTerritory,#lbSub_Language,#lbDub_Language').each(function () {
                        $(this)[0].sumo.reload();
                    });
                    //setTimeout(function () {
                    //    $('#lbTerritory,#lbSub_Language,#lbDub_Language').each(function () {
                    //        $(this)[0].sumo.reload();
                    //    });
                    //},2000);
                    debugger;
                    $("#" + selectedId).val(selectedCodes).trigger("chosen:updated");
                }
            }
            , error: function (result) {
                showAlert('E', 'Error: ' + result.responseText);
            }
        });
    }


    function ValidateBulkApply() {
        debugger;
        var Lcount = parseInt($('#hdnCount').val());
        var RightCodes = '';
        var TitleCodes = '';
        var TitleNames = '';
        var Is_Syn_Acq_Mapp = '';
        var Eps_Frm_To = '';
        var IsValidSave = true;
        var Rights_Type = '';
        var isTentative = 'false';
        var txtStartDate = '';
        var txtEndDate = '';
        var Action_For = '';
        Rights_Type = $('#hdnRights_Type').val();
        var changeType = $('#ddlChange').val();
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        var i = 1;
        for (i = 1; i <= Lcount; i++) {
            if ($('#' + i + "_chkRecord").prop('checked')) {
                RightCodes += ',' + $('#' + i + "_hdnRightCode").val();
                TitleCodes += ',' + $('#' + i + "_hdnTitleCode").val();
                TitleNames += ',' + $('#' + i + "_hdnTitleName").val();
                Is_Syn_Acq_Mapp += ',' + $('#' + i + "_hdnIs_Syn_Acq_Mapp").val();
                Eps_Frm_To += ',' + $('#' + i + "_hdnEps_Frm_To").val();
            }
        }
        var hdnRegion_Code = $("#hdnRegion_Code");
        var hdnDub_Code = $("#hdnDub_Code");
        var hdnSub_Code = $("#hdnSub_Code");

        //hdnTitle_Code.val('');
        hdnRegion_Code.val('');
        hdnDub_Code.val('');
        hdnSub_Code.val('');

        //------------------ PLATFORM
        if (changeType == 'P')
            if ($("#hdnTVCodes").val() == '') {
                IsValidSave = false;
                $("#tree").attr('required', true);
                $("#tree").addClass('required');
                showAlert('E', '@objMessageKey.PleaseSelectAtLeastOnePlatform');
            }

        //------------------ END

        //------------------ COUNTRY
        if (changeType == 'I' || changeType == 'T') {
            var regionType = changeType;
            $("#hdnRegion_Type").val(regionType);

            var selectedRegion = '';
            if ($("#lbTerritory option:selected").length > 0) {
                $("#lbTerritory option:selected").each(function () {
                    if (selectedRegion == '')
                        selectedRegion = $(this).val();
                    else
                        selectedRegion = selectedRegion + ',' + $(this).val();
                });
            }
            else {
                if (changeType == 'I')
                    showAlert('E', '@objMessageKey.PleaseSelectAtLeastOneCountry');
                else
                    showAlert('E', '@objMessageKey.PleaseSelectAtLeastOneTerritory');
                return false;
            }
            hdnRegion_Code.val(selectedRegion);

            if (selectedRegion == '') {
                IsValidSave = false;
                $("#lbTerritory").attr('required', true);
            }
        }
        //------------------ END

        var ErrorMsg = '';

        //------------------ PERIOD
        if (changeType == 'RP') {
            debugger;
            var Term = $('#hdnRights_Type').val();
            Action_For = 'A';

            txtStartDate = $('#Start_Date').val();
            txtEndDate = $('#End_Date').val();
            if (Term == 'Y') {
                if ($('#Is_Tentative').prop('checked'))
                    isTentative = 'true';

                if (txtStartDate == "") {
                    IsValidSave = false;
                    showAlert("E", "@objMessageKey.PleaseenterStartDate");
                    $("#Start_Date").attr('required', true);
                    return false;
                }

                if (txtEndDate == "" && isTentative == 'false') {
                    IsValidSave = false;
                    showAlert("E", "@objMessageKey.PleaseenterEndDate");
                    $("#End_Date").attr('required', true);
                    return false;
                }

                if (txtStartDate != "" && txtEndDate != "" && compareDates_DMY(txtStartDate, txtEndDate) < 0) {
                    IsValidSave = false;
                    $("#Start_Date").attr('required', true);
                    $("#End_Date").attr('required', true);
                    txtROFRDays.val('');
                    ErrorMsg = '@objMessageKey.Startdateshouldbelessthanenddate.';
                }

                var txtYear = $('#Term_YY').val();
                var txtMonth = $('#Term_MM').val();
                var txtDay = $('#Term_DD').val();
                if (isTentative == 'true' && (txtYear == null || txtYear == '0' || txtYear == undefined || txtYear == '') && (txtMonth == null || txtMonth == '0' || txtMonth == undefined || txtMonth == '') && (txtYear == null || txtYear == '0' || txtYear == undefined || txtYear == '')) {
                    IsValidSave = false;
                    showAlert("E", "@objMessageKey.PleaseentervalidTerm");
                }
            }
            else if (Term == 'U') {
                txtStartDate = $('#txtPerpetuity_Date').val();
                if ($('#txtPerpetuity_EndDate').val() != undefined && $('#txtPerpetuity_EndDate').val() != "")
                    txtEndDate = $('#txtPerpetuity_EndDate').val()
                if ($('#txtPerpetuity_Date').val() == "" || $('#txtPerpetuity_Date').val() == "DD/MM/YYYY") {
                    IsValidSave = false;
                    $("#txtPerpetuity_Date").attr('required', true);
                }
            }
            else if (Term == 'M') {
                if ($("#Milestone_Start_Date").val() == "") {
                    IsValidSave = false;
                    $("#Milestone_Start_Date").attr('required', true);
                }

                if ($("#ddlMilestone_Type_Code").val() == null) {
                    IsValidSave = false;
                    $("#ddlMilestone_Type_Code").attr('required', true);
                }

                if ($("#txtMilestone_No_Of_Unit").val() == "") {
                    IsValidSave = false;
                    $("#txtMilestone_No_Of_Unit").attr('required', true);
                }

                if ($("#ddlMilestone_Unit_Type").val() == null) {
                    IsValidSave = false;
                    $("#ddlMilestone_Unit_Type").attr('required', true);
                }
                txtStartDate = $("#Milestone_Start_Date").val();
                txtEndDate = $("#Milestone_End_Date").val();
            }
        }
        //------------------ END

        //------------------ DUBBING
        if (changeType == 'DL' || changeType == 'DG') {
            var dubbingType = changeType;
            $("#hdnDub_Type").val(dubbingType);

            var selectedDub = '';

            if ($("#lbDub_Language option:selected").length > 0) {
                $("#lbDub_Language option:selected").each(function () {
                    if (selectedDub == '')
                        selectedDub = $(this).val();
                    else
                        selectedDub = selectedDub + ',' + $(this).val();
                });
            }
            else {
                if (changeType == 'DL')
                    showAlert('E', '@objMessageKey.PleaseselectatleastoneLanguage ');
                else
                    showAlert('E', '@objMessageKey.PleaseSelectAtLeastOneLanguageGroup');
                return false;
            }
            hdnDub_Code.val(selectedDub);
        }
        //------------------ END

        //------------------ SUBTITLING
        if (changeType == 'SL' || changeType == 'SG') {
            var subType = changeType;
            $("#hdnSub_Type").val(subType);

            var selectedSub = '';

            if ($("#lbSub_Language option:selected").length > 0) {
                $("#lbSub_Language option:selected").each(function () {
                    if (selectedSub == '')
                        selectedSub = $(this).val();
                    else
                        selectedSub = selectedSub + ',' + $(this).val();
                });
            }
            else {
                if (changeType == 'SL')
                    showAlert('E', '@objMessageKey.PleaseselectatleastoneLanguage');
                else
                    showAlert('E', '@objMessageKey.PleaseSelectAtLeastOneLanguageGroup');
                return false;
            }

            hdnSub_Code.val(selectedSub);
        }
        //------------------ END

        //if ($("#Is_Title_Language_Right").prop('checked') == false && selectedSub == '' && selectedDub == '') {
        //    IsValidSave = false;
        //    $("#lbTerritory").attr('required', true);
        //    if (ErrorMsg != '')
        //        ErrorMsg = ErrorMsg + '</br>'

        //    ErrorMsg = ErrorMsg + 'Please select atleast one language.';
        //}
        if ($('#TitleY').prop('checked')) {
            $('#hdnTitle_Language').val('Y');
        }
        if ($('#TitleN').prop('checked')) {
            $('#hdnTitle_Language').val('N');
        }
        if ($('#ExclusiveY').prop('checked')) {
            $('#hdnIs_Exclusive').val('Y');
        }
        if ($('#ExclusiveN').prop('checked')) {
            $('#hdnIs_Exclusive').val('N');
        }
        if ($('#SubLicensingY').prop('checked')) {
            $('#hdnSubLicensing').val('Y');
        }
        if ($('#SubLicensingN').prop('checked')) {
            $('#hdnSubLicensing').val('N');
        }
        if (!IsValidSave && $.trim(ErrorMsg) != '') {
            showAlert('E', ErrorMsg);
        }

        if (IsValidSave) {
            var ValidationMessage = '';
            if (regionType == "T" || dubbingType == "DG" || subType == "SG") {
                var groupOfRegions = selectedRegion;
                if (regionType != "T")
                    groupOfRegions = "";

                var groupOfDubs = selectedDub;
                if (dubbingType != "DG")
                    groupOfDubs = "";

                var groupOfSubs = selectedSub;
                if (subType != "SG")
                    groupOfSubs = "";

                var msg = ValidateGroups(groupOfRegions, groupOfDubs, groupOfSubs)
                if (msg != '') {
                    IsValidSave = false;
                    showAlert('E', msg);
                    return false;
                }
            }
        }
        //msgSyn = Validate_Acq_Right_Title_Platform($("#hdnTVCodes").val(), selectedTitles, Term, isTentative,
        //                                           $('#Start_Date').val(), $('#End_Date').val())
        //if (msgSyn != '') {
        //    showAlert('E', msgSyn);
        //    return false;
        //}
        if ($('#rbtndelete').prop('checked')) {
            Action_For = 'D';
        }
        else {
            Action_For = 'A';
        }
        if (changeType == 'E' || changeType == 'S' || changeType == 'TL')
            Action_For = 'A'

        if (RightCodes == '') {
            IsValidSave = false;
            showAlert('E', '@objMessageKey.PleaseSelectAnyRight');
        }
        if (changeType == '0' || changeType == '') {
            IsValidSave = false;
            showAlert('E', '@objMessageKey.PleaseSelectAnyChange');
        }
        if (Action_For == '') {
            IsValidSave = false;
            showAlert('E', '@objMessageKey.PleaseSelectAddOrDelete');
        }
        debugger;
        if (changeType == 'S' && $('input[name=optSubLicensing]:checked').val() == "true" && ($("#Sub_License_Code").val() == "" || $("#Sub_License_Code").val() == null)) {
            IsValidSave = false;
            showAlert('E', '@objMessageKey.PleaseSelectSubLicensing');
        }
        debugger;
        //var r = '';
        if (IsValidSave) {
            var codes = '';
            //var Change_For = $('#hdnChangeType').val();
            var Change_For = $('#ddlChange').val();
            if (Change_For == 'T' || Change_For == 'I')
            { codes = $("#hdnRegion_Code").val(); }
            else if (Change_For == 'SL' || Change_For == 'SG')
            { codes = $("#hdnSub_Code").val(); }
            else if (Change_For == 'DL' || Change_For == 'DG')
            { codes = $("#hdnDub_Code").val(); }
            else if (Change_For == 'P')
            { codes = $("#hdnTVCodes").val(); }
            else if (Change_For == 'S')
            { codes = $("#Sub_License_Code").val(); }
            $.ajax({
                type: "POST",
                url: '@Url.Action("BulkSave", "Acq_Rights_List")',
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                async: false,
                data: JSON.stringify({
                    SelectedRightCodes: RightCodes,
                    SelectedTitleCodes: TitleCodes,
                    SelectedTitleNames: TitleNames,
                    Is_Syn_Acq_Mapp: Is_Syn_Acq_Mapp,
                    Eps_Frm_To: Eps_Frm_To,
                    ChangeFor: changeType,
                    SelectedCodes: codes,
                    SelectedStartDate: txtStartDate,
                    SelectedEndDate: txtEndDate,
                    IsExclusive: $('#hdnIs_Exclusive').val(),
                    IsSubLicensing: $('#hdnSubLicensing').val(),
                    IsTitleLanguage: $('#hdnTitle_Language').val(),
                    RightsType: $('#hdnRights_Type').val(),
                    ActionFor: Action_For,
                    IsTentative: isTentative,
                    Term_YY: $('#Term_YY').val(),
                    Term_MM: $('#Term_MM').val(),
                    Term_DD: $('#Term_DD').val(),
                    Milestone_Type_Code: $("#ddlMilestone_Type_Code").val(),
                    Milestone_No_Of_Unit: $("#txtMilestone_No_Of_Unit").val(),
                    Milestone_Unit_Type: $("#ddlMilestone_Unit_Type").val(),
                    pageView: $('input[name=optViewType]:checked').val()
                }),
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        initializeChosen();
                        BindChanges();
                        BindPlatform();
                        var ViewType = $('input[name=optViewType]:checked').val();
                        BindGridNew($("#" + ViewType)[0], 'Y');
                        //LoadBulkUpdateList();

                       /* if (result.message == "ERROR") {
                            Show_Validation_Popup("", 5, 0, true);
                        }
                        else*/
                            if (result.message != "") {
                            showAlert('S', result.message);
                        }
                        $('#divRightsPeriod,#divPlatform,#divCountry,#divTerritory,#divSubLan,#divSubLanGrp,#divDubLan,#divDubLanGrp,#divExclusive,.divSublicensing,#divTitleLanguage,#ActionDiv').attr("style", "display:none");
                        //BindPartialTabs('@GlobalParams.Page_From_Rights');
                    }
                },
                error: function (result) {
                }
            });
        }
    }
    function Show_Validation_Popup(search_Titles, Page_Size, Page_No, IsFirst, RightCode) {
        debugger;
        var selectedErrorType = '';
        if (IsFirst != true)
             selectedErrorType = $("#ddlErrorType").val();
        //$("#hdnSynDealCode").val(Syn_Deal_Code);
        $.ajax({
            type: "POST",
            url: '@Url.Action("BulkSaveError", "Acq_Rights_List")',
            traditional: true,
            async: false,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                searchForTitles: search_Titles,
                PageSize: Page_Size,
                PageNo: Page_No,
                ErrorMsg: selectedErrorType,
                RightCode: RightCode
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                $("#BindValidationPopup").html(result);
            },
            error: function (x, e) {
            }
        });
        $('#popupValidationError').modal();
        initializeChosen();
        setChosenWidth('#lbTitle_ErrorPopup', '500px');
        //initializeExpander();
    }
    function ValidateGroups(RegionCodes, DubbingCodes, SubtitlingCodes) {
        var msg = '';
        $.ajax({
            type: "POST",
            url: '@Url.Action("Validate_Groups", "Acq_Rights")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            async: false,
            data: JSON.stringify({
                Region_Codes: RegionCodes,
                Dubbing_Codes: DubbingCodes,
                Subtitling_Codes: SubtitlingCodes
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                msg = result;
            },
            error: function (result) {
            }
        });
        return msg;
    }

    function Validate_Acq_Right_Title_Platform(hdnPlatform, hdnMMovies, Right_Type, Is_Tentative, Start_Date, End_Date) {
        var msg = '';
        $.ajax({
            type: "POST",
            url: URL_Validate_Acq_Right_Title_Platform,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            async: false,
            data: JSON.stringify({
                hdnPlatform: hdnPlatform,
                hdnMMovies: hdnMMovies,
                Right_Type: Right_Type,
                Is_Tentative: Is_Tentative,
                Start_Date: Start_Date,
                End_Date: End_Date
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                msg = result;
            },
            error: function (result) {
            }
        });
        return msg;
    }

    function chkBxEnableOrDisable(idthis) {

        debugger;
        var chkid = idthis.id;
        var count = chkid.split('_')[0];
        var rightcode = $('#' + count + '_hdnRightCode').val()
        var changefor = $('#ddlChange').val();
        var IsValid = ValidateRightsTitleWithAcq(rightcode, '0', '0', '0');
        if (IsValid) {
            if ($('#' + chkid).prop('checked')) {
                //alert('a')
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("ChkBxEnableOrDisable", "Acq_Rights_List")',
                    traditional: true,
                    enctype: 'multipart/form-data',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({
                        Right_Code: rightcode,
                        Change_For: changefor
                    }),
                    success: function (result) {
                        if (result == "true") {
                            redirectToLogin();
                        }
                        if (result.flag == 'true')
                            $('#' + chkid).prop('checked', true)
                        else {
                            showAlert('e', result.Message);
                            $('#' + chkid).prop('checked', false)
                        }
                    },
                    error: function (result) {
                    }
                });
            }
        }
        else
            $('#' + chkid).prop('checked', false)
    }
    function SetRightPeriod(rightType) {
        debugger;
        $('#hdnRights_Type').val(rightType)
        if (rightType == 'Y' && $('#tabValidity a[href="#tabCal"]').prop("disabled")) {
            return false;
        }
        else if (rightType == 'U' && $('#tabValidity a[href="#tabPerp"]').prop("disabled")) {
            return false;
        }
        else if (rightType == 'M' && $('#tabValidity a[href="#tabMile"]').prop("disabled")) {
            return false;
        }
    }
    @*function LoadTab(tabName, IsActive) {
        debugger
        var dealModeServer = '@objSchema.Mode';
        //if ($.trim(tabName) != CurrentTab) {
        clickedOnTab = true;
        $('#hdnTabName').val($.trim(tabName));
        if (dealModeServer != dealMode_View && dealModeServer != dealMode_Approve) {
            if (CurrentTab == pageGeneral) {
                $('#btnSaveDeal').click();
            }
            else if (CurrentTab == pageRights_List) {
                $('#btnSaveDeal').click();
            }
            else if (CurrentTab == pageRightsDetailAddEdit) {
                $('#btnSaveDeal').click();
            }
            else if (CurrentTab == pageRunDetailAddEdit) {
                $('#btnSaveRun').click();
            }
            else if (CurrentTab == pagePaymentTerm) {
                $('#btnSaveDeal').click();
            }
            else if (CurrentTab == pageCost) {
                var isDirectCostGrid = GetCostTabConfigFromServer();
                if (isDirectCostGrid != "Y") {
                    $('#btnSaveDeal').click();
                }
            }
            else {
                if (ValidateSave()) {
                    return true;
                }
            }
        }
        else {
            if (ValidateSave()) {
                return true;
            }
        }

        //}
        //return false;
    }*@
    function Show_Error_Popup_Bulk(search_Titles, Page_No, Rights_Code, Message) {
        $("#hdnAcqDealCode").val(Rights_Code);

        $.ajax({
            type: "POST",
            url: '@Url.Action("BulkSaveError", "Acq_Rights_List")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                RightCodes: Rights_Code,
                PageNo: Page_No,
                msg: Message
            }),
            async: false,
            success: function (result) {
                if (result == "true")
                    redirectToLogin();
                else {
                    $("#BindErrorPopup").html(result);
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });

        $('#popupShowError').modal();
        //initializeExpander();
        initializeChosen();
        setChosenWidth('#lbTitle_ErrorPopup', '85%');
        hideLoading();
    }

    function ValidateRightsTitleWithAcq(RCode, TCode, Episode_From, Episode_To) {
        //  showLoading();
        var Isvalid = true;
        $.ajax({
            type: "POST",
            url: '@Url.Action("ValidateRightsTitleWithAcq", "Acq_Rights_List")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            async: false,
            data: JSON.stringify({
                RCode: RCode,
                TCode: TCode,
                Episode_From: Episode_From,
                Episode_To: Episode_To
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }

                if (result == "VALID") {
                    Isvalid = true;
                }
                else {
                    hideLoading();
                    showAlert('E', '@objMessageKey.CannoteditRightsascorrespondingAcquisitionDealisinAmendmentstate')
                    Isvalid = false;
                }
                //hideLoading();
            },
            error: function (result) {
                Isvalid = false;
            }
        });

        return Isvalid;
    }
    function ValidateSave() {
        showLoading();
        if (!clickedOnTab) {
            if ($(event.target).val().toUpperCase() == "SAVE & APPROVE") {
                $('input[name=hdnReopenMode]').val('RO');
            }
            else {
                $('input[name=hdnReopenMode]').val('E');
            }
        }
        else {
            $('input[name=hdnReopenMode]').val('E');
        }
        var Isvalid = true;

        if (ValidatePageSize() && Dealmode_G == 'APRV') {
            // Code for Maintaining approval remarks in session
            if (SaveApprovalRemarks())
                Isvalid = true
            else
                Isvalid = false;
        }

        if (Isvalid && (Dealmode_G == dealMode_View)) {
            hideLoading();
            var tabName = $('#hdnTabName').val();
            BindPartialTabs(tabName);
        }
        hideLoading();
        return Isvalid;
    }
    function ValidatePageSize() {
        var recordPerPage = $('#txtPageSize').val();

        if ($.trim(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);

            if (pageSize > 0)
                return true;
        }

        $('#txtPageSize').addClass("required");
        return false;
    }
    function CalculateMilestoneEndDate() {
        debugger
        var strSD = $('#Milestone_Start_Date').val();
        var strNo = $('#txtMilestone_No_Of_Unit').val();

        if (strSD != '' && strNo != '') {
            var startDate = new Date(MakeDateFormate(strSD));
            if (!isNaN(startDate)) {
                var unit = $('#ddlMilestone_Unit_Type').val();
                if (unit != null) {
                    var day = 0, month = 0, year = 0;
                    switch (unit) {
                        case "1":
                            day = parseInt(strNo);
                            break;

                        case "2":
                            day = parseInt(strNo) * 7;
                            break;
                        case "3":
                            month = parseInt(strNo);
                            break;

                        case "4":
                            year = parseInt(strNo);
                            break;
                    }
                    var endDate = CalculateEndDate(startDate, year, month, day);
                    $('#Milestone_End_Date').val(endDate);
                }
            }
        }
    }

    function SublicensingChange(e) {
        debugger;
        $('#Sub_License_Code').val('').trigger("chosen:updated");
        if (e.value == "true") {
            $('#ddlSub_License_Code').css("display", "block");
        }
        else if (e.value == "false") {
            $('#ddlSub_License_Code').css("display", "none");
        }
        return true;
    }

    function BindGridNew(obj, IsCallFromPaging, ShowAll) {
        debugger;
        showLoading();
        var regionCode = "";
        var exclusiveRights = "";
        var ViewType = "";
        var TitleCode = "";
        var isValid = true;
        if ($('#ddlRegionn').val() == null)
            regionCode = "";
        else
            regionCode = $('#ddlRegionn').val().join(',');

        exclusiveRights = $('#lstReleaseUnit').val();
        var platformcode = $('#hdnTVCode').val();
        if (ShowAll == "N") {
            if ($("#ddlTitleCode").val() == null && $('#ddlRegionn').val() == null && $('#hdnTVCode').val() == "" && $('#lstReleaseUnit').val() == "B") {
                //MsgForSearch = Please select at least one criteria to view.
                showAlert('E', ShowMessage.MsgForSearch, "ddlTitleCode");
                hideLoading();
                isValid = false;
            }
        }
        $('#divddlTitleCode').removeClass("required");
        if (isValid) {
            if (ValidatePageSize()) {
                if ($("#ddlTitleCode").val() != undefined && $("#ddlTitleCode").val() != null)
                    TitleCode = $("#ddlTitleCode").val().join(',');
                else
                    TitleCode = "";
                if (obj == null)
                    ViewType = "G";
                else
                    ViewType = $('input[name=optViewType]:checked').val();

                //var Rights_PageNo = 1;
                //var page_Index = 0;

                //if ($('#hdnCurrentPageNo').val() != undefined && $('#hdnCurrentPageNo').val() != '')
                //    Rights_PageNo = $('#hdnCurrentPageNo').val();
                //page_Index = parseInt(Rights_PageNo) - 1;


                var page_Index = '1';
                if ($("#hdnPageIndex") != undefined && $("#hdnPageIndex").val() != "")
                    page_Index = $("#hdnPageIndex").val();



                var txtpageSize = $("#txtPageSize").val();
                $.ajax({
                    type: "POST",
                    url: URL_BindBulkUpdateList,
                    traditional: true,
                    enctype: 'multipart/form-data',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({
                        Selected_Title_Code: TitleCode,
                        txtpageSize: txtpageSize,
                        page_index: page_Index,
                        IsCallFromPaging: IsCallFromPaging,
                        RegionCode: regionCode,
                        PlatformCode: platformcode,
                        ExclusiveRight: exclusiveRights,
                        view_Type: ViewType
                    }),
                    success: function (result) {
                        if (result == "true") {
                            redirectToLogin();
                        }
                        $("#div_BindGrid").empty();
                        $("#div_BindGrid").html(result);

                        SetPaging($('#txtPageSize').val());
                        initializeExpander();
                        hideLoading();
                    },
                    error: function (result) {
                        hideLoading();
                    }
                });
            }
        }
        else {
            if (rightsView_G != null)
                $('#' + rightsView_G)[0].checked = true;
        }
    }
</script>

<style>
    #ddlChange_chosen {
        width: 60% !important;
    }

    .chosen-container-multi {
        width: 60% !important;
    }

    #Tree_Filter_Rights_Platform {
        width: 1100px;
        padding-left: 3px;
        position: relative !important;
    }

    #Rights_Platform {
        margin: 0px 0px 0px 0px !important;
    }
</style>
@using (Ajax.BeginForm("ChangeTab", "Acq_Rights_List", new AjaxOptions { OnSuccess = "Save_Success" }))
{
    <div class="grid_area">
        <div class="navigation_tabs">
            <div class="tabbable">
                <div class="tab-content clearfix table-wrapper scale_table_container">
                    <div class="tab-pane active" id="tabRights" style="height:800px">
                        <div class="scale_table_block">
                            <div id="divRightsFilterBLK">

                            </div>
                            @Html.Hidden("hdnPageIndex")
                            @Html.Hidden("hdnTitle_Code")
                            @Html.Hidden("hdnPalform_Code")
                            @Html.Hidden("hdnChangeType")
                            @Html.Hidden("hdnRights_Type")
                            @Html.Hidden("hdnAcqDealCode")
                            <input type="hidden" id="hdnTabName" name="hdnTabName" />
                            <input type="hidden" id="hdnTabCurrent" name="hdnTabCurrent" value="BLK" />
                            <!--table class="table">
                                <tr>
                                    <td style="width: 25%;">
                                        <span class="bold">@objMessageKey.BulkUpdate:</span>&nbsp;&nbsp;
                                        <input id="SearchRights" class="search" placeholder="@objMessageKey.SearchbyTitle, @objMessageKey.Platform, @objMessageKey.Language, @objMessageKey.Region" style="width:300px" />
                                        <input type="button" id="btnSearchBulkUpdate" value="@objMessageKey.Search" class="btn-block" onclick="Search_BulkUpdate('S')" />
                                        <input type="button" id="btnShowAllBulkUpdate" value="@objMessageKey.ShowAll" class="btn-block" onclick="Search_BulkUpdate('SA')" />
                                    </td>
                                </tr>
                            </table-->
                        </div>
                        <div class="paging_area clearfix">
                            <span class="pull-left" id="lblTotal"></span>
                            <div id="Pagination" class="pagination">
                            </div>
                            <span class="pull-right">
                                @objMessageKey.PageSize:
                                <input type="text" id="txtPageSize" class="smallTextBox pagingSize" value="10" onchange="return PageSize_OnChange();" />
                            </span>
                        </div>
                        <div class="scale_table_block" style="overflow-y:auto;max-height:300px">
                            <div id="div_BindGrid">
                            </div>
                        </div>
                        <br>
                        <div class="scale_table_block" style="height:50px; background-color:#f7f7f7">
                            <div>
                                <table class="table">
                                    <tr>
                                        <td style="width: 40%;">
                                            <span class="bold">
                                                @objMessageKey.BulkUpdateFor:
                                            </span>
                                            <select name="ddlChange" id="ddlChange" class="form_input chosen-select" onchange="changediv();"></select>
                                        </td>
                                        <td style="width: 15%;">
                                            @*Start Title Language *@
                                            <div id="ActionDiv" style="display:none">
                                                <label class="radio-inline" style="position:relative">
                                                    <input type="radio" name="optaddDelete" id="rbtnadd" value="A" checked onchange="" />
                                                    @objMessageKey.Add
                                                </label>
                                                <label class="radio-inline" style="position:relative">
                                                    <input type="radio" name="optaddDelete" id="rbtndelete" value="D" onchange="" />
                                                    @objMessageKey.Delete
                                                </label>
                                                @Html.Hidden("hdnActionName")
                                            </div>
                                            <div id="divTitleLanguage" style="display:none">
                                                <label class="radio-inline" style="position:relative">
                                                    <input type="radio" name="optTitLan" id="TitleY" value="true" checked onchange="" />
                                                    @objMessageKey.Yes
                                                </label>
                                                <label class="radio-inline" style="position:relative">
                                                    <input type="radio" name="optTitLan" id="TitleN" value="false" onchange="" />
                                                    @objMessageKey.NO
                                                </label>
                                                @Html.Hidden("hdnTitle_Language")
                                            </div>
                                            @*End Title Language *@
                                            @*Start Exclusive *@
                                            <div id="divExclusive" style="display:none">
                                                <label class="radio-inline" style="position:relative">
                                                    <input type="radio" name="optExclusive" id="ExclusiveY" value="true" checked onchange="" />
                                                    @objMessageKey.Yes
                                                </label>
                                                <label class="radio-inline" style="position:relative">
                                                    <input type="radio" name="optExclusive" id="ExclusiveN" value="false" onchange="" />
                                                    @objMessageKey.NO
                                                </label>
                                                @Html.Hidden("hdnIs_Exclusive")
                                            </div>
                                            @*End Exclusive *@
                                            @*Start Sub-licensing*@
                                            <div class="divSublicensing" style="display:none;">
                                                <label class="radio-inline" style="position:relative">
                                                    <input type="radio" name="optSubLicensing" id="SubLicensingY" value="true" checked onchange="SublicensingChange(this)" />
                                                    @objMessageKey.Yes
                                                </label>
                                                <label class="radio-inline" style="position:relative">
                                                    <input type="radio" name="optSubLicensing" id="SubLicensingN" value="false" onchange="SublicensingChange(this)" />
                                                    @objMessageKey.NO
                                                </label>
                                                @Html.Hidden("hdnSubLicensing")
                                            </div>
                                            @*End Sub-licensing*@

                                        </td>
                                        <td style="width: 45%;">

                                            @*Start Territory*@
                                            <div id="divTerritory" style="display:none">
                                                <select id="lbTerritory" multiple="multiple"></select>
                                                @Html.Hidden("hdnRegion_Type")
                                                @Html.Hidden("hdnRegion_Code")
                                            </div>
                                            @*End Territory*@

                                            @*Start Sub-titling language*@
                                            <div id="divSubLan" style="display:none">
                                                <select id="lbSub_Language" multiple="multiple"></select>
                                                @Html.Hidden("hdnSub_Code")
                                                @Html.Hidden("hdnSub_Type")
                                            </div>
                                            @*End Sub-titling language*@

                                            @*Start Dubbing language*@
                                            <div id="divDubLan" style="display:none">
                                                <select id="lbDub_Language" multiple="multiple"></select>
                                                @Html.Hidden("hdnDub_Type")
                                                @Html.Hidden("hdnDub_Code")
                                            </div>
                                            @*End Dubbing language*@

                                            @*Start Sub-licensing*@
                                            <div class="divSublicensing" id="ddlSub_License_Code" style="display:none;">
                                                <select id="Sub_License_Code" name="Sub_License_Code" class="form_input chosen-select"></select>
                                            </div>
                                            @*End Sub-licensing*@
                                        </td>
                                    </tr>

                                </table>
                            </div>
                            @*<div><span class="bold" id="lblChange"></span></div>*@
                        </div>
                        <div style="background-color:#f7f7f7">
                            <table>
                                <tr>
                                    <td colspan="3">
                                        @*Start Rights Period*@

                                        <div id="divRightsPeriod" style="display:none;width:45%">
                                            <div id="tabValidity" class="tabbable">
                                                <ul class="nav nav-tabs nav-tab pull-left">
                                                    <li class="active" onclick="SetRightPeriod('Y');">
                                                        <a data-toggle="tab" href="#tabCal" role="tab">@objMessageKey.Yearbased</a>
                                                    </li>
                                                    <li class="" onclick="SetRightPeriod('M');">
                                                        <a data-toggle="tab" href="#tabMile" role="tab">@objMessageKey.Milestonebased</a>
                                                    </li>
                                                    <li class="" onclick="SetRightPeriod('U');">
                                                        <a data-toggle="tab" href="#tabPerp" role="tab">@objMessageKey.Perpetuity</a>
                                                    </li>
                                                </ul>
                                                <div class="tab-content clearfix table-wrapper scale_table_container">
                                                    <div class="tab-pane active scale_table_block" id="tabCal">

                                                        @Html.CheckBox("Is_Tentative", false)
                                                        <label>@objMessageKey.Tentative</label>
                                                        <br>
                                                        <label>@objMessageKey.StartDate</label>
                                                        @Html.TextBox("Start_Date", "", new { autocomplete = "off", @id = "Start_Date", @class = "isDatepicker", @placeholder = "DD/MM/YYYY" })
                                                        @Html.TextBox("Term_YY", "", new { autocomplete = "off", @class = "smallTextBox", @placeholder = "YY", @maxlength = 2 })
                                                        @Html.TextBox("Term_MM", "", new { autocomplete = "off", @class = "smallTextBox", @placeholder = "MM", @maxlength = 2 })
                                                        @Html.TextBox("Term_DD", "", new { autocomplete = "off", @class = "smallTextBox", @placeholder = "DD", @maxlength = 2 })
                                                        <label style="margin-left: 15px">@objMessageKey.EndDate</label>
                                                        @Html.TextBox("End_Date", "", new { autocomplete = "off", @id = "End_Date", @class = "isDatepicker", @placeholder = "DD/MM/YYYY" })
                                                    </div>
                                                    <div class="tab-pane scale_table_block" id="tabMile">
                                                        <ul class="from_to clearfix">
                                                            <li class="form_li_sub">
                                                                <label>@objMessageKey.StartDate</label>
                                                                @Html.TextBox("Milestone_Start_Date", "", new { @id = "Milestone_Start_Date", @placeholder = "DD/MM/YYYY", @class = "isDatepicker" })
                                                            </li>
                                                            <li class="form_li_sub">
                                                                <label>@objMessageKey.startfrom</label>
                                                                <select id="ddlMilestone_Type_Code" name="ddlMilestone_Type_Code" class="form_input chosen-select"></select>
                                                            </li>
                                                            <li class="form_li_sub">
                                                                <label>@objMessageKey.validfor</label>
                                                                @Html.TextBox("txtMilestone_No_Of_Unit", "", new { @class = "smallTextBox", @onblur = "CalculateMilestoneEndDate()" })
                                                            </li>
                                                            <li class="form_li_sub">
                                                                <label></label>
                                                                <br />
                                                                <select id="ddlMilestone_Unit_Type" name="ddlMilestone_Unit_Type" class="form_input chosen-select" onchange="CalculateMilestoneEndDate()"></select>
                                                            </li>
                                                            <li class="form_li_sub">
                                                                <label>@objMessageKey.EndDate</label>
                                                                @Html.TextBox("Milestone_End_Date", "", new { @id = "Milestone_End_Date", @placeholder = "DD/MM/YYYY", @readonly = "readonly" })
                                                            </li>
                                                        </ul>
                                                    </div>
                                                    <div class="tab-pane scale_table_block" id="tabPerp">
                                                        @*<ul class="from_to clearfix">
                                                                <li class="form_li_sub">
                                                                    <label>From</label>
                                                                    @Html.TextBox("Perpetuity_Date", "", new { @id = "txtPerpetuity_Date", @class = "isDatepicker", @placeholder = "DD/MM/YYYY" })
                                                                </li>
                                                            </ul>*@
                                                        <ul style="height: 30px;width: 45%;">
                                                            <li style="text-decoration: none;display: inline;width: 35%;float: left">
                                                                <label>@objMessageKey.StartDate</label>
                                                                @Html.TextBox("Perpetuity_Date", "", new { @id = "txtPerpetuity_Date", @class = "isDatepicker", @placeholder = "DD/MM/YYYY" })
                                                            </li>
                                                            @if (ViewBag.Enabled_Perpetuity == "Y")
                                                            {
                                                                <li style="text-decoration: none;display: inline;padding-left: 4%">
                                                                    <b>@objMessageKey.Term: </b>
                                                                    <label>@ViewBag.Term_Perputity</label>
                                                                    <label>@objMessageKey.Years</label>
                                                                    @Html.Hidden("Term_Perputity", ViewBag.Term_Perputity as string, new { @id = "hdnTerm_Perputity" })
                                                                </li>
                                                                <li style="text-decoration: none;display: inline;width: 35%;float: right">
                                                                    <label>@objMessageKey.EndDate</label>
                                                                    @Html.TextBox("Perpetuity_EndDate", "", new { @id = "txtPerpetuity_EndDate", @placeholder = "DD/MM/YYYY", @readonly = "readonly", @style = "width:95px;" })
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        @*End Rights Period*@
                                        @*Start Platforms*@
                                        <div id="divPlatform" style="display:none; width:50%">
                                            <div class="platform_wrapper">
                                                @*<label class="bold" for="platform">Platform / Rights</label>*@
                                                <div id="tree" class="treeClass">
                                                </div>
                                                <input type="hidden" id="hdnTVCodes" name="hdnTVCodes" />
                                            </div>
                                        </div>
                                        @*End Platforms*@

                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="bottom_action">
                            <ul class="form_link_nav clearfix">
                                @*@if (objSchema.Mode != GlobalParams.DEAL_MODE_VIEW && objSchema.Mode != GlobalParams.DEAL_MODE_APPROVE)
                                    {*@
                                <li>
                                    <input type="button" id="btnApply" class="btn btn-primary" value="@objMessageKey.Apply" onclick="return ValidateBulkApply();" />
                                </li>
                                <li>
                                    <input type="button" id="btnBack1" class="btn btn-primary" value="@objMessageKey.Back" onclick="BindPartialTabs('@GlobalParams.Page_From_Rights');" />
                                    <input type="submit" id="btnBack" class="btn btn-primary" value="@objMessageKey.Back" style="display:none" onclick="return ValidateSave();" />
                                    @*<input type="button" id="btnBack" class="btn btn-primary" value="Back" onclick="BindPartialTabs('@GlobalParams.Page_From_Rights');" />*@
                                </li>
                                @*  }*@
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div aria-labelledby="myModalLabel" class="form_wrapper modal fade in big_popup scroll" id="popupValidationError" role="dialog" tabindex="-1" aria-hidden="false" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content clearfix">
            <form class="form" id="frm_set_milestone">
                <div>
                    <div class="form_fields acq">
                        <div class="modal_block modal_header">
                            <a class="close" data-dismiss="modal" href="#">
                                <span>×</span>
                                <span class="sr-only">Close</span>
                            </a>
                            <h2>Error</h2>
                        </div>
                        <div class="modal_block">
                            <div id="BindValidationPopup"></div>
                        </div>
                        <div class="modal_block_full">
                            <div class="form_links">
                                <ul class="modal_block clearfix">
                                    <li>
                                        <a data-dismiss="modal" class="btn btn-primary" href="#">@objMessageKey.Cancel</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@*<div aria-labelledby="myModalLabel" class="form_wrapper modal fade in big_popup scroll" id="popupShowError" role="dialog" tabindex="-1" aria-hidden="true" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content clearfix">
                <form class="form" id="frm_Error_Popup">
                    <div>
                        <div class="form_fields acq">
                            <div class="modal_block modal_header">
                                <a class="close" data-dismiss="modal" href="#">
                                    <span>×</span>
                                    <span class="sr-only">Close</span>
                                </a>
                                <h2>Error Details</h2>
                            </div>
                            <div class="modal_block">
                                <div id="BindErrorPopup">
                                </div>
                            </div>
                            <div class="modal_block_full">
                                <div class="form_links">
                                    <ul class="modal_block clearfix">
                                        @*<li>
                                            <input class="btn btn-primary" type="button" value="Reprocess" onclick="return Reprocess();" />
                                            </li>
                                        <li>
                                            <a data-dismiss="modal" class="btn-primary" href="#">Cancel</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>*@
@*<script>
        $(document).ready(function () {
            setTimeout(function () { $('#lbTerritory,#lbSub_Language,#lbDub_Language').SumoSelect({ selectAll: true, triggerChangeCombined: true }); }, 3000);
        });
    </script>*@