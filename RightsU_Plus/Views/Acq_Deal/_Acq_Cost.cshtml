@model RightsU_Entities.Acq_Deal_Cost
@using UTOFrameWork.FrameworkClasses;
@{
    RightsU_Entities.Deal_Schema objSchema = new RightsU_Entities.Deal_Schema();
    if (Session[RightsU_Entities.RightsU_Session.ACQ_DEAL_SCHEMA] != null)
    {
        objSchema = (RightsU_Entities.Deal_Schema)Session[RightsU_Entities.RightsU_Session.ACQ_DEAL_SCHEMA];
    }
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}

<script type="text/javascript" src="~/JS_Core/jquery.alphanum.min.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<script type="text/javascript" src="~/JS_Core/autoNumeric-1.8.1.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<script type="text/javascript">

    var rowCT = 0, diffCostTypeAmt = 0;

    var isAddEditMode_G = '@ViewBag.IsAddEditMode'
    var royaltyRecoupmentCode = '@Model.Royalty_Recoupment_Code';

    var URL_Load_Cost_Type = '@Url.Action("Load_Cost_Type", "Acq_Cost")';
    var URL_Load_Additional_Exp = '@Url.Action("Load_Additional_Exp", "Acq_Cost")';
    var URL_Load_Standard_Returns = '@Url.Action("Load_Standard_Returns", "Acq_Cost")';
    var URL_Load_Overflow = '@Url.Action("Load_Overflow", "Acq_Cost")'

    var URL_BindRoyaltyRecoupment = '@Url.Action("BindRoyaltyRecoupment", "Acq_Cost")';
    var URL_BindTitle = '@Url.Action("BindTitle", "Acq_Cost")';
    var URL_BindHeaderData = '@Url.Action("BindHeaderData", "Acq_Cost")';
    var URL_BindGridStandardReturns = '@Url.Action("BindGridStandardReturns", "Acq_Cost")';
    var URL_SaveDealCost = '@Url.Action("SaveDealCost", "Acq_Cost")'

    function CheckAddEditMode() {
        if (isAddEditMode_G == 'Y') {
            message = '@objMessageKey.PleasecompletetheAddEditfirst.';
            showAlert('E', message);
            return false;
        }
        else {
            return true;
        }
    }
    $(document).ready(function () {
       // $("#ancFileName").attr('href', 'Help/Masters/Layout.html?acq_Cost');
        $('#txtAgreementValue').autoNumeric('init', { vMax: '99999999999.99', dGroup: 2 });
        initializeExpander();
        BindTitle();
        callextras();
        var Recoupment_Code = '0';
        if (royaltyRecoupmentCode != '')
            Recoupment_Code = royaltyRecoupmentCode;

        BindRoyaltyRecoupment(Recoupment_Code);

        $.ajax({
            type: "POST",
            url: URL_Load_Cost_Type,
            traditional: true,
            async: false,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                Deal_Type_Code: parseInt('@ViewBag.DealTypeCode')
            }),
            success: function (result) {  
                $('#tabCostHead').html(result);
            },
            error: function (result) { }
        });
        $.ajax({
            type: "POST",
            url: URL_Load_Additional_Exp,
            traditional: true,
            async: false,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $('#tabAdditionalExp').html(result);
                initializeTooltip();
            },
            error: function (result) { }
        });
        $.ajax({
            type: "POST",
            url: URL_Load_Standard_Returns,
            traditional: true,
            async: false,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $('#tabStdReturns').html(result);
            },
            error: function (result) { }
        });
        $.ajax({
            type: "POST",
            url: URL_Load_Overflow,
            traditional: true,
            async: false,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                $('#tabOverflow').html(result);
            },
            error: function (result) { }
        });
    });
    function BindRoyaltyRecoupment(RoyaltyRecoupmentCode) {
        $.ajax({
            type: "POST",
            url: URL_BindRoyaltyRecoupment,
            traditional: true,
            async: false,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                Royalty_Recoupment_Code: parseInt(RoyaltyRecoupmentCode)
            }),
            success: function (result) {
                $("#ddlRoyaltyRecoupment").empty();
                $.each(result, function () {
                    if (this.Selected == true)
                        $("#ddlRoyaltyRecoupment").append($("<option />").val(this.Value).text(this.Text).attr("selected", "selected"));
                    else
                        $("#ddlRoyaltyRecoupment").append($("<option />").val(this.Value).text(this.Text));
                });
                $("#ddlRoyaltyRecoupment").trigger("chosen:updated");
                initializeChosen();
            },
            error: function (result) { }
        });
    }
    function BindTitle() {
        $.ajax({
            type: "POST",
            url: URL_BindTitle,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            async: false,
            success: function (result) {
                $("#ddlSrchTitle").empty();
                 
                $.each(result, function () {
                    if (this.Selected == true)
                        $("#ddlSrchTitle").append($("<option />").val(this.Value).text(this.Text).attr("selected", "selected"));
                    else
                        $("#ddlSrchTitle").append($("<option />").val(this.Value).text(this.Text));
                });
                $('#ddlSrchTitle').SumoSelect();
                $('#ddlSrchTitle').each(function () {
                    $(this)[0].sumo.reload();
                });
                // $("#ddlSrchTitle").trigger("chosen:updated");
                initializeChosen();
            },
            error: function (result) { }
        });
    }
    function callextras() {
        $.ajax({
            type: "POST",
            url: URL_BindHeaderData,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            async: true
        });
    }
    function LoadStandardReturns() {
        showLoading();
        $.ajax({
            type: "POST",
            url: URL_BindGridStandardReturns,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#tabStdReturns').html(result);
                    hideLoading();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }
    function FinalSaveDealCost() {
         
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        if (CheckAddEditMode()) {
            rowCT = 0;
            var txtAgreementValue = RemoveComa($('#txtAgreementValue').val());

            if ($('#ddlSrchTitle').val() == null) {
                $('#divddlSrchTitle').addClass("required");
                return false;
            }
            else if (txtAgreementValue == "") {
                $('#txtAgreementValue').attr('required', true);
                return false;
            }
            else if (!CostTypeDetails()) {

                var message = "";
                if (rowCT == 0) {
                    showAlert('E', '@objMessageKey.PleaseaddatleastonerecordforCostHead');
                    return false;
                }
                else if (rowCT != 0 && diffCostTypeAmt == 1) {
                    showAlert('E', '@objMessageKey.Agreementvalueandsumofcostheadmustbeequal');
                    return false;
                }

            }
            else {
                var tmpTitle = "";
                $('#txtAgreementValue').removeClass('required');
                if ('@ViewBag.DealTypeCode' == '1')
                    tmpTitle = $('#ddlSrchTitle').val().join(',');
                else
                    tmpTitle = $('#ddlSrchTitle').val();

                var Variable_Type = $("input[name='Variable_Cost_Type']:radio:checked").val();
                var tmpRecoupmentCode = $('#ddlRoyaltyRecoupment').val();
                var tmpAmount = $('#txtAgreementValue').val();

                /*---Collect Variable Cost Details---*/
                var VarTypeList = new Array();
                var RevenueSharing = $("#RevenueSharing tr:not(:has(th),.hide)");
                var i = 0;
                var TotalAmt = 0;
                RevenueSharing.each(function (rowId_outer) {
                    var _entityCode = 0, _Percentage = 0, _variableCostCode = 0, _vendorCode = 0, _licensorType = "";

                    _Percentage = $("#txtPercentage_" + i).val();
                    _variableCostCode = $("#VariableCost_Code_" + i).val();
                    _licensorType = $("#Licensor_Type_" + i).val();
                    if (_licensorType == "O")
                        _entityCode = parseInt($("#Entity_Code_" + i).val());
                    else
                        _vendorCode = parseInt($("#Entity_Code_" + i).val());
                    if (_Percentage == "") { _Percentage = 0; }
                    VarTypeList.push({
                        Vendor_Code: _vendorCode, Entity_Code: _entityCode, Percentage: _Percentage, Acq_Deal_Cost_Variable_Cost_Code: _variableCostCode
                    });

                    TotalAmt = parseFloat(TotalAmt) + parseFloat(_Percentage);
                    i = i + 1;
                });
                /*------------------------------------*/

                if ((parseFloat(TotalAmt) - 100) != 0 && (Variable_Type == "R" || Variable_Type == "P")) {
                    showAlert('E', '@objMessageKey.TotalpercentageshouldsumuptoHundred');
                    return false;
                } else {
                    showLoading();
                    $.ajax({
                        type: "POST",
                        url: URL_SaveDealCost,
                        traditional: true,
                        enctype: 'multipart/form-data',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            TitleCodes: tmpTitle,
                            DealCost: tmpAmount,
                            recoupmentCode: tmpRecoupmentCode,
                            VariableCostType: Variable_Type,
                            VariableCostRows: VarTypeList
                        }),
                        success: function (result) {
                            if (result == "true") {
                                redirectToLogin();
                            }
                            else {
                                 
                                hideLoading();
                                if (result.Error_Message != "") {
                                    showAlert('E', "@objMessageKey.Theamountnotmatchexactlyin " + result.Error_Message);
                                }
                                else {

                                    var PageNo = 0;
                                    if (result.Message != '') {
                                        showAlert('S', result.Message);
                                    }
                                    $('#lblTotalFixedDealCost').text(result.TotalFixedDealCost);

                                    LoadAcqDealCost(tmp_pageNo, 'M', @ViewBag.PageSize);
                                    //$('#popAddEditCost').modal('hide');
                                }
                            }
                        },
                        error: function (result) {
                            alert('Error: ' + result.responseText);
                        }
                    });
                }
            }
        }
    }
    function CostTypeDetails() {
        /*---Collect Variable Cost Details---*/
        var CostTypeList = new Array();
        var CostType = $("#tblCostType tr:not(:has(th),.hideCT)");
        var costTypeAmt = 0;
        var tmpRowId = 0;

        CostType.each(function (rowId_outer) {
            rowCT = rowCT + 1;
            var _tmpCostAmt = 0
            _tmpCostAmt = parseFloat($("#hdn_BudgetedAmt_" + rowCT).val());

            costTypeAmt = parseFloat(costTypeAmt) + parseFloat(_tmpCostAmt);
        });
        var txtAgreementValue = RemoveComa($('#txtAgreementValue').val());
        if (rowCT == 0)
        { return false; }
        else if ((parseFloat(txtAgreementValue) - parseFloat(costTypeAmt).toFixed(2)) != 0)
        { diffCostTypeAmt = 1; return false; }
        else
            return true;

    }
    function CancelFinalSave() {
        LoadAcqDealCost(tmp_pageNo, 'M', @ViewBag.PageSize);
    }
    function RemoveComa(s) {
        var s1 = '';

        while (s.indexOf(',') != -1) {
            s = s.replace(',', '');
        }

        return s;
    }
    function RemoveReqClass() {
        $('.required').removeClass('required');
    }
    function CheckAddEditMode() {
        if (isAddEditMode_G == 'Y') {
            message = '@objMessageKey.PleasecompletetheAddEditfirst.';
            showAlert('E', message);
            return false;
        }
        else {
            return true;
        }
    }
    function EnableDisableTabs(isDisable, currTab) {
        if (currTab == 1) {
            $('#tabValidity a[href="#tabAdditionalExp"]').prop("disabled", isDisable);
            $('#tabValidity a[href="#tabStdReturns"]').prop("disabled", isDisable);
            $('#tabValidity a[href="#tabOverflow"]').prop("disabled", isDisable);
        }
        else if (currTab == 2) {
            $('#tabValidity a[href="#tabCostHead"]').prop("disabled", isDisable);
            $('#tabValidity a[href="#tabStdReturns"]').prop("disabled", isDisable);
            $('#tabValidity a[href="#tabOverflow"]').prop("disabled", isDisable);
        }
        else if (currTab == 3) {
            $('#tabValidity a[href="#tabAdditionalExp"]').prop("disabled", isDisable);
            $('#tabValidity a[href="#tabCostHead"]').prop("disabled", isDisable);
            $('#tabValidity a[href="#tabOverflow"]').prop("disabled", isDisable);
        }
        else if (currTab == 4) {
            $('#tabValidity a[href="#tabAdditionalExp"]').prop("disabled", isDisable);
            $('#tabValidity a[href="#tabStdReturns"]').prop("disabled", isDisable);
            $('#tabValidity a[href="#tabCostHead"]').prop("disabled", isDisable);
        }
    }
</script>
<style>
    .SumoSelect, #divddlSrchTitle {
        width: 94% !important;
    }

        #divddlSrchTitle > div {
            width: 100% !important;
        }

    .navigation_tabs {
        overflow: visible !important;
    }
</style>
<form class="form" id="Form3">
    <div class="acq">
        <div class="form_fields">
            @*<div class="modal_block modal_header">
                    <a class="close" data-dismiss="modal" href="#">
                        <span>×</span>
                        <span class="sr-only">Close</span>
                    </a>
                    <h2>
                        @if (@Model.HeaderLabel != null)
                        {@Model.HeaderLabel}
                    </h2>
                </div>*@

            <ul class="form_fields_wrapper" style="list-style: none;">
                <li class="form_field modal_block">
                    <ul style="list-style: none;">
                        <li>
                            <label class="bold">@objMessageKey.Titles</label><br />
                            @{
                                string movieName = "";
                                //string titleCode = "";

                                if (ViewBag.Deal_Type_Condition == GlobalParams.Deal_Program)
                                {
                                   // titleCode = string.Join(", ", (@Model.Acq_Deal_Cost_Title.Select(s => s.Title_Code).ToArray()));
                                    movieName = string.Join(", ", (@Model.Acq_Deal_Cost_Title.Select(s => s.Title.Title_Name + " ( " + s.Episode_From + " - " + s.Episode_To + " )").ToArray()));
                                }
                                else if (ViewBag.Deal_Type_Condition == GlobalParams.Deal_Music)
                                {
                                   // titleCode = string.Join(", ", (@Model.Acq_Deal_Cost_Title.Select(s => s.Title_Code).ToArray()));
                                    movieName = string.Join(", ", (@Model.Acq_Deal_Cost_Title.Select(s => s.Title.Title_Name + " ( " + (Convert.ToString(s.Episode_From) == "0" ? "Unlimited" : Convert.ToString(s.Episode_From)) + " )").ToArray()));
                                }
                                else
                                {
                                   // titleCode = string.Join(", ", (@Model.Acq_Deal_Cost_Title.Select(s => s.Title_Code).ToArray()));
                                    movieName = string.Join(", ", (@Model.Acq_Deal_Cost_Title.Select(s => s.Title.Title_Name).ToArray()));
                                }
                                //<input type="hidden" id="hdn_titleCode" value="@titleCode" />
                                if (ViewBag.Mode == GlobalParams.DEAL_MODE_VIEW || ViewBag.Mode == GlobalParams.DEAL_MODE_APPROVE)
                                {
                                    if (ViewBag.DealTypeCode != 1)
                                    {
                                        if (Model.Acq_Deal.Acq_Deal_Movie.Count > 0)
                                        {
                                            foreach (var item in Model.Acq_Deal.Acq_Deal_Movie)
                                            {
                                                if (item.Episode_Starts_From == Model.Acq_Deal_Cost_Title.ElementAt(0).Episode_From
                                                    && item.Episode_End_To == Model.Acq_Deal_Cost_Title.ElementAt(0).Episode_To
                                                    && item.Title.Title_Name == Model.Acq_Deal_Cost_Title.ElementAt(0).Title.Title_Name
                                                    )
                                                {
                                                    <input type="hidden" id="titleCode_view" value="@item.Acq_Deal_Movie_Code" />                                      
                                                }                                  
                                            }
                                        }
                                    }
                                }
                            }
                            @if (ViewBag.Mode == GlobalParams.DEAL_MODE_ADD || ViewBag.Mode == GlobalParams.DEAL_MODE_EDIT
                                || ViewBag.Mode == GlobalParams.DEAL_MODE_REOPEN || objSchema.Mode == GlobalParams.DEAL_MODE_EDIT_WO_APPROVAL
                            || ViewBag.Mode == GlobalParams.DEAL_MODE_CLONE)
                            {
                                if (ViewBag.DealTypeCode != 1)
                                {
                                    <div id="divddlSrchTitle">
                                        <select name="ddlSrchTitle" id="ddlSrchTitle" class=""></select>
                                    </div>
                                }
                                else
                                {
                                    <div id="divddlSrchTitle">
                                        <select name="ddlSrchTitle" id="ddlSrchTitle" multiple="multiple" class=""></select>
                                    </div>
                                }
                            }
                            @if (ViewBag.Mode == GlobalParams.DEAL_MODE_VIEW || ViewBag.Mode == GlobalParams.DEAL_MODE_APPROVE)
                            {
                                <div class="expandable">
                                    <span>@movieName</span>
                                    <a href="#"><span></span></a>
                                </div>

                            }
                        </li>
                        <li class="specialLI clearfix">
                            <div>
                                <label class="bold">@objMessageKey.RoyaltyRecoupmentType</label>
                                @if (ViewBag.Mode == GlobalParams.DEAL_MODE_ADD || ViewBag.Mode == GlobalParams.DEAL_MODE_EDIT
                                    || ViewBag.Mode == GlobalParams.DEAL_MODE_REOPEN || objSchema.Mode == GlobalParams.DEAL_MODE_EDIT_WO_APPROVAL
                                || ViewBag.Mode == GlobalParams.DEAL_MODE_CLONE)
                                {
                                    <select name="ddlSrchTitle" id="ddlRoyaltyRecoupment" class="form_input chosen-select" onchange="showOverflow('Y')"></select>
                                }
                                else if (ViewBag.Mode == GlobalParams.DEAL_MODE_VIEW || @ViewBag.Mode == GlobalParams.DEAL_MODE_APPROVE)
                                {
                                    @ViewBag.Royalty_Recoupment_Name
                                }
                            </div>
                            <div>
                                <label class="bold">@objMessageKey.AgreementValue</label>
                                @{if (ViewBag.Mode == GlobalParams.DEAL_MODE_VIEW || @ViewBag.Mode == GlobalParams.DEAL_MODE_APPROVE)
                                    {
                                        @GlobalParams.CurrencyFormat(Convert.ToDouble(Model.Deal_Cost))
                                       // @Model.Deal_Cost
                                    }
                                    else
                                    {@Html.TextBox("txtAgreementValue", @GlobalParams.CurrencyFormat(Convert.ToDouble(Model.Deal_Cost)), new { style = "width:100px;", @class = "text-right", @onkeyup = "RemoveReqClass()" })}}
                            </div>
                        </li>
                        <li class="specialLI clearfix">
                            <div>
                                <label class="bold">@objMessageKey.CostInCurrency</label>
                                <label class="small_title" id="lblCurrency">
                                    @if (@Model.Currency != null)
                                    { @Model.Currency.Currency_Name}
                                    else
                                    {@ViewBag.Currency}
                                </label>
                            </div>
                            <div>
                                <label class="bold">@objMessageKey.ExchangeRate</label>
                                <label class="small_title" id="lblCurrExRate">
                                    @if (@Model.Currency_Exchange_Rate != null)
                                    { @Model.Currency_Exchange_Rate}
                                    else
                                    {@ViewBag.CurrencyExchangeRate}
                                </label>
                            </div>
                        </li>
                    </ul>


                </li>
                <li class="modal_block">
                    <label class="bold" for="platform">@objMessageKey.SpecialDetails</label>
                    <div class="tabbable" id="tabValidity">
                        <ul class="nav nav-tabs nav-tab pull-left" style="list-style: none;">
                            <li class="active">
                                <a data-toggle="tab" href="#tabCostHead" role="tab" onclick="CheckAddEditMode();">@objMessageKey.CostHead</a>
                            </li>
                            <li class="">
                                <a data-toggle="tab" href="#tabAdditionalExp" role="tab" onclick="CheckAddEditMode();">@objMessageKey.AdditionalExpense</a>
                            </li>
                            <li class="">
                                <a data-toggle="tab" href="#tabStdReturns" role="tab" onclick="CheckAddEditMode();">@objMessageKey.StandardReturns</a>
                            </li>
                            <li class="">
                                <a data-toggle="tab" href="#tabOverflow" role="tab" onclick="CheckAddEditMode();">@objMessageKey.Overflow</a>
                            </li>

                        </ul>
                        <div class="tab-content clearfix table-wrapper scale_table_container">
                            <div class="tab-pane active scale_table_block" id="tabCostHead">
                            </div>
                            <div class="tab-pane scale_table_block" id="tabAdditionalExp">
                            </div>
                            <div class="tab-pane scale_table_block" id="tabStdReturns">
                            </div>
                            <div class="tab-pane scale_table_block" id="tabOverflow">
                            </div>
                        </div>
                    </div>
                </li>
            </ul>
        </div>
        <div class="modal_block_full" style="margin-left: 20px;margin-right: 20px;">
            <div class="form_links">
                <ul class="form_link_nav clearfix">

                    @if (ViewBag.Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Mode != GlobalParams.DEAL_MODE_APPROVE)
                    {
                        <li>
                            <a class="btn btn-primary" href="#" onclick="FinalSaveDealCost()">@objMessageKey.Save</a>
                        </li>
                    }
                    <li>
                        <a class="btn btn-primary" href="#" onclick="CancelFinalSave()">@objMessageKey.Cancel</a>
                    </li>

                </ul>
            </div>
        </div>

    </div>
</form>
