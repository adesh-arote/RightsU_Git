@using UTOFrameWork.FrameworkClasses
@{
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}

<script>
    var IsCall = 'Y', Command_Name = "", dummyGuid_G, sort_Type = "NA";
        /*, Module_Code_G = ViewBag.Code, SysLanguageCode_G = ViewBag.LangCode */
    var URL_BindDigitalConfigList = '@Url.Action("BindDigitalConfigList", "DigitalConfig")';
    var URL_SearchDigitalConfig = '@Url.Action("SearchDigitalConfig", "DigitalConfig")';
    var URL_CheckRecordLock = '@Url.Action("CheckRecordLock", "DigitalConfig")';
    var URL_BindTabListViewData = '@Url.Action("BindTabListViewData", "DigitalConfig")';
    var URL_UpdateTabListViewData = '@Url.Action("UpdateTabListViewData", "DigitalConfig")';

    $(document).ready(function () {
        debugger;
        initializeChosen();
        if (LayoutDirection_G == "RTL") {
            $('#btnUser').css("float", "right");
            $('#txtSort').css("text-align", "left");
            $('#ddlSortType_chosen').css("text-align", "right");
        }
        else {
            $('#btnUser').css("float", "left");
            $('#txtSort').css("text-align", "right");
            $('#ddlSortType_chosen').css("text-align", "left");
        }

        addNumeric();
        SearchDigitalConfig("");
        $('#searchCommon').keypress(function (e) {
            if (e.keyCode == 13) {
                btnSearch_OnClick()
                return false;
            }
        });
        $("#ddlSortType").change(function () {
            sort_Type = $('#ddlSortType').val();
            $('#hdnPageNo').val(1);
            var searchtext = $("#searchCommon").val();
            SearchDigitalConfig(searchtext);
        });

    });

    function addNumeric() {
        $(".pagingSize").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 99,
            min: 1
        });
    }
    $('#ddlSortType').chosen();
    function SetPaging() {
        IsCall = 'N';
        var pageNo = parseInt($('#hdnPageNo').val());
        var recordCount = parseInt($('#hdnRecordCount').val());
        var pagePerBatch = parseInt($('#hdnPagePerBatch').val());
        var recordPerPage = parseInt($('#txtPageSize').val());

        var cnt = pageNo * recordPerPage;
        if (cnt >= recordCount) {
            var v1 = parseInt(recordCount / recordPerPage);
            if ((v1 * recordPerPage) == recordCount)
                pageNo = v1;
            else
                pageNo = v1 + 1;
        }

        if (pageNo == 0)
            pageNo = 1;

        var index = pageNo - 1;
        $('#hdnPageNo').val(pageNo);

        var opt = null;
        opt = { callback: pageselectCallback };
        opt["items_per_page"] = recordPerPage;
        opt["num_display_entries"] = pagePerBatch;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = index;
        $("#Pagination").pagination(recordCount, opt);
    }
    function pageselectCallback(page_index, jq) {
        if (checkCurrentAction()) {
            $('.required').removeClass('required');

            if (!ValidatePageSize())
                return false;

            var pageNo = page_index + 1
            $('#hdnPageNo').val(pageNo);
            if (IsCall == 'Y')
                BindDigitalConfigList();
            else
                IsCall = 'Y';
        }
    }
    function txtPageSize_OnChange() {
        $("[required='required']").removeAttr("required");
        $('.required').removeClass('required');
        if (!ValidatePageSize())
            return false;

        BindDigitalConfigList()
        SetPaging();
    }
    function ValidatePageSize() {
        var recordPerPage = $('#txtPageSize').val()
        if ($.trim(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);
            if (pageSize > 0)
                return true;
        }
        $('#txtPageSize').attr('required', true)
        return false
    }

    function btnSearch_OnClick() {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");

        if (!ValidatePageSize())
            return false;

        var searchText = $.trim($('#searchCommon').val());

        if (searchText == '') {
            $('#searchCommon').val('');
            $('#searchCommon').attr('required', true)
            return false;
        }
        SearchDigitalConfig(searchText);
    }
    function btnShowAll_OnClick() {
        debugger;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        if (!ValidatePageSize())
            return false;

        sort_Type = "NA";
        $("#ddlSortType").find("option").attr("selected", false);
        $("#ddlSortType").val('NA').trigger("chosen:updated");
        $('#hdnPageNo').val(1);
        $('#searchCommon').val('');
        SearchDigitalConfig("");
    }
    function BindDigitalConfigList() {
        var pageNo = $('#hdnPageNo').val();
        var recordPerPage = $('#txtPageSize').val();

        $.ajax({
            type: "POST",
            url: URL_BindDigitalConfigList,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                pageNo: pageNo,
                recordPerPage: recordPerPage,
                sortType : sort_Type
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#divDigitalTabList').empty();
                    $('#divDigitalTabList').html(result);
                    initializeTooltip();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }
    function SearchDigitalConfig(searchText) {
        $('#searchCommon').val(searchText);
        showLoading();
        $.ajax({
            type: "POST",
            url: URL_SearchDigitalConfig,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                searchText: searchText
            }),
            async: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#hdnPageNo').text(1);
                    $('#hdnPageNo').val(1);
                    $('#lblRecordCount').text(result.Record_Count);
                    $("#hdnRecordCount").val(result.Record_Count);
                    SetPaging()
                    BindDigitalConfigList();
                    hideLoading();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
                hideLoading();
            }
        });
    }
    function checkCurrentAction() {
        var action = $.trim($('#hdnAction').val());
        if (action == "ADD") {
            showAlert("E", "@objMessageKey.CompleteAddOperationFirst")
            return false;
        }
        else if (action == "EDIT") {
            showAlert("E", "@objMessageKey.CompleteEditOperationFirst")
            return false;
        }
        return true;
    }

    function SetTabListViewConfig(DigitalTabCode) {
        debugger;
        $.ajax({
            type: "POST",
            url: URL_BindTabListViewData,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                DigitalTabCode: DigitalTabCode
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    debugger;
                    $('#divTabListViewConfig').empty();
                    $('#divTabListViewConfig').html(result);
                    $("#popTabListViewConfig").modal();
                    $('#ddlDigitalData').SumoSelect();
                    $('#ddlDigitalValueConfig').SumoSelect();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

    function SwitchDisplay() {
        var displayVal = $('input[name="DisplayLevel2"]:checked').val();

        if (displayVal) {
            if (displayVal == "TL") {
                $('#trKeyConfig').show();
                $('#trDigitalData').hide();
                $('#trDigitalValueConfig').hide();
            } else if (displayVal == "DL") {
                $('#trKeyConfig').show();
                $('#trDigitalData').show();
                $('#trDigitalValueConfig').show();
            } else {
                $('#trKeyConfig').hide();
                $('#trDigitalData').hide();
                $('#trDigitalValueConfig').hide();
            }
        } else {
            $('#trKeyConfig').hide();
            $('#trDigitalData').hide();
            $('#trDigitalValueConfig').hide();
        }
    }

    function UpdateTabListViewConfig(Digital_Tab_Code) {
        debugger;
        if (!Validate_TabListViewConfig()) {
            return false;
        }

        var Digital_Tab_Code = $("#hdnTabCode").val();
        var DisplayLevel = $('input[name="DisplayLevel"]:checked').val();
        var Key_Config_Code = $("#ddlKeyConfig").val();
        var LP_Digital_Data_Code = $("#ddlDigitalData").val();
        var LP_Digital_Value_Config_Code = $("#ddlDigitalValueConfig").val();


        var formData = new FormData();
        formData.append("Digital_Tab_Code", Digital_Tab_Code);
        formData.append("DisplayLevel", DisplayLevel);
        formData.append("Key_Config_Code", Key_Config_Code);
        formData.append("LP_Digital_Data_Code", LP_Digital_Data_Code);
        formData.append("LP_Digital_Value_Config_Code", LP_Digital_Value_Config_Code);

        $.ajax({
            type: "POST",
            url: URL_UpdateTabListViewData,
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    if (result.Status == "S") {    
                        $("#popTabListViewConfig").modal('hide');
                        SearchDigitalConfig("");                        
                    }
                    else {
                        showAlert("E", result.Message, "OK");
                    }
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
                hideLoading();
            }
        });
    }

    function Validate_TabListViewConfig() {
        var returnVal = true;
        var displayVal = $('input[name="DisplayLevel"]:checked').val();

        if (displayVal) {
            if (displayVal=="TL") {
                if ($.trim($('#ddlKeyConfig').val()) == "") {
                    showAlert("E", "Please select Key Config");
                    returnVal = false;
                }
            } else if (displayVal == "DL") {
                if ($.trim($('#ddlKeyConfig').val()) == "") {
                    showAlert("E", "Please select Key Config");
                    returnVal = false;
                } else if ($.trim($('#ddlDigitalData').val()) == "") {
                    showAlert("E", "Please select Digital Data");
                    returnVal = false;
                } else if ($.trim($('#ddlDigitalValueConfig').val()) == "") {
                    showAlert("E", "Please select Digital Value Config");
                    returnVal = false;
                }
            }
        } else {
            showAlert("E", "Please select Display Level");
            returnVal = false;
        }

        return returnVal;
    }

</script>
<style>
    #ddlSortType_chosen {
        max-width: 46%;
        text-align: left;
    }
</style>
<div class="">
    <div class="title_block dotted_border clearfix">
        <h2 class="pull-left">
            @*@objMessageKey.SupplimentaryConfigList*@
            Digital Config
        </h2>
        <div class="right_nav pull-right">
            <ul>
                <li id="btnUser">
                    @*@if (ViewBag.UserModuleRights.Contains("~" + GlobalParams.RightCodeForAdd + "~"))
                        {*@
                    <input type="button" class="btn btn-primary" value="@objMessageKey.Add" onclick="BindPartialView('ADD',0)" />
                    @*}*@
                </li>
                <li>
                    @*@if (ViewBag.UserModuleRights.Contains("~" + GlobalParams.RightCodeForExportToExcel.ToString() + "~"))
                        {
                            <a title="@objMessageKey.SaveToExcel" class="glyphicon glyphicon-floppy-save" style="cursor:pointer; text-decoration:underline; " onclick="ExportToExcel()">
                            </a>
                        }*@
                </li>
            </ul>
        </div>
    </div>
    <div class="search_area" style="background-color: #eee; padding:5px;">
        <table class="table">
            <tr>
                <td style="width:10%;text-align:center;padding-top:8px;">
                    @objMessageKey.SearchText :
                </td>
                <td style="width:30%;">
                    <input type="text" name="srchCommon" id="searchCommon" class="search" style="width:100%" placeholder="Tab Name, Tab Short Name" />
                </td>
                <td>
                    <input type="button" id="btnSearch" class="button" value="@objMessageKey.Search" onclick="btnSearch_OnClick()">
                    <input type="button" id="btnShowAll" class="button" value="@objMessageKey.ShowAll" onclick="btnShowAll_OnClick()">
                </td>
                <td id="txtSort">
                    @objMessageKey.SortBy:
                    @Html.DropDownList("SortType", (List<SelectListItem>)ViewBag.SortType, new { @id = "ddlSortType", @class = "form_input chosen-select" })
                </td>
            </tr>
        </table>
    </div>
    <div class="grid_area">
        <div style="border-bottom: 1px dotted #777; display:none;"></div>
        <div class="paging_area clearfix">
            <span class="pull-left">@objMessageKey.TotalRecords: </span>
            <span class="pull-left" id="lblRecordCount"></span>
            <input type="hidden" id="hdnPageNo" name="hdnPageNo" value="1" />
            <input type="hidden" id="hdnPagePerBatch" name="hdnPagePerBatch" value="5" />
            <input type="hidden" id="hdnRecordCount" name="hdnRecordCount" value="0" />

            <div id="Pagination" class="pagination">
            </div>
            <span class="pull-right">
                @objMessageKey.PageSize:
                <input type="text" id="txtPageSize" name="txtPageSize" class="smallTextBox pagingSize" value="10" onchange="txtPageSize_OnChange()" onblur="setDefaultPaging('txtPageSize')">
            </span>
        </div>
        <div class="tab-content clearfix table-wrapper scale_table_container">
            <div class="scale_table_block">
                <input type="hidden" id="hdnAction" value="" />
                <input type="hidden" id="hdnRecodLockingCode" name="hdnRecodLockingCode" value="0" />
                <div id="divDigitalTabList" class="deal clearfix">

                </div>
            </div>
        </div>
    </div>

    <div aria-labelledby="myModalLabel1" class="form_wrapper modal fade in small_popup" id="popTabListViewConfig" role="dialog" tabindex="-1" aria-hidden="false" style="max-width:600px">
        <div class="modal-dialog">
            <div class="modal-content clearfix">
                <form class="form" id="listView_popup">
                    <div id="divTabListViewConfig">

                    </div>
                </form>
            </div>
        </div>
    </div>
</div>