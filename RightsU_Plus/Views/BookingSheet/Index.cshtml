
@using UTOFrameWork.FrameworkClasses
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />

<script>
    var IsCall = 'Y', Command_Name = "", dummyGuid_G, sort_Type = "T", URL_LoadTab = "", TabName = "BS";

    var URL_BindBookingSheetList = '@Url.Action("BindBookingSheetList", "BookingSheet")';
    var URL_PendingRecommendationsList = '@Url.Action("PendingRecommendationsList", "BookingSheet")';
    var URL_SearchBookingSheet = '@Url.Action("SearchOnList", "BookingSheet")';
    var URL_GenerateBookingSheet = '@Url.Action("GenerateBookingSheet", "BookingSheet")';
    var URL_RemarkPopup = '@Url.Action("RemarkPopUp", "BookingSheet")';
    var URL_GeneratePO = '@Url.Action("GeneratePO", "BookingSheet")';
    //var URL_GetFileName = '@Url.Action("GetFileName", "BookingSheet")';
    var URL_PurchaseOrderView = '@Url.Action("Index", "PurchaseOrder")';
    var URL_GetbookingSheetStatus = '@Url.Action("GetbookingSheetStatus", "BookingSheet")';
    var URL_RefreshBookingSheet = '@Url.Action("RefreshBookingSheet", "BookingSheet")';

    $(document).ready(function () {
        if (LayoutDirection_G == "RTL") {
            //$('#btnUser').css("float", "right");
            //$('#txtSort').css("text-align", "left");
            $('#ddlSortType_chosen').css("text-align", "right");
        }
        else {
            //$('#btnUser').css("float", "left");
            //$('#txtSort').css("text-align", "right");
            $('#ddlSortType_chosen').css("text-align", "left");
        }

        if (TabName == "BS") {
            $("#searchCommon").attr('placeholder', 'Booking Sheet No, Client Name');
        }
        if (TabName == "PR") {
            $("#searchCommon").attr('placeholder', 'Client Name');
        }

        if ("@ViewBag.Message" != "") {
           showAlert("S","@ViewBag.Message");
        }
        SearchOnList("", TabName);

        $('#searchCommon').keypress(function (e) {
            if (e.keyCode == 13) {
                btnSearch_OnClick()
                return false;
            }
        });
        $("#ddlSortType").change(function () {
            sort_Type = $('#ddlSortType').val();
            $('#hdnPageNo').val(1);
            var searchtext = $("#searchCommon").val();
            SearchOnList(searchtext, TabName);
        });
    });

    function addNumeric() {
        debugger;
        $(".pagingSize").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 99,
            min: 1
        });
    }

    function btnSearch_OnClick() {
        debugger;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");

        var searchText = $('#searchCommon').val();

        if (searchText == '') {
            $('#searchCommon').val('');
            $('#searchCommon').attr('required', true)
            return false;
        }
        SearchOnList(searchText, TabName);
    }

    function btnShowAll_OnClick() {
        debugger;
        $('#ddlSortType').val('0').trigger('chosen:updated');
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");

        if (!ValidatePageSize())
            return false;

        sort_Type = "T";
        $("#ddlSortType").find("option").attr("selected", false);
        $("#ddlSortType").val('T').trigger("chosen:updated");
        $('#hdnPageNo').val(1);

        SearchOnList("", TabName);
    }

    function SearchOnList(searchText, TabName) {
        debugger;
        $('#searchCommon').val(searchText);

        $.ajax({
            type: "POST",
            url: URL_SearchBookingSheet,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                searchText: searchText,
                TabName: TabName
            }),
            async: false,
            success: function (result) {
                $('#hdnPageNo').text(1);
                $('#hdnPageNo').val(1);
                $('#lblRecordCount').text(result.Record_Count);
                $("#hdnRecordCount").val(result.Record_Count);
                SetPaging();
                if (TabName == "BS") {
                    BindbookingSheetList();
                }
                if (TabName == "PR") {
                    PendingRecommendationsList();
                }
            }
        });
    }

    function SetPaging() {
        debugger;
        IsCall = 'N';
        var pageNo = parseInt($('#hdnPageNo').val());
        var recordCount = parseInt($('#hdnRecordCount').val());
        var pagePerBatch = parseInt($('#hdnPagePerBatch').val());
        var recordPerPage = parseInt($('#txtPageSize').val());

        var cnt = pageNo * recordPerPage;
        if (cnt >= recordCount) {
            var v1 = parseInt(recordCount / recordPerPage);
            if ((v1 * recordPerPage) == recordCount)
                pageNo = v1;
            else
                pageNo = v1 + 1;
        }

        if (pageNo == 0)
            pageNo = 1;

        var index = pageNo - 1;
        $('#hdnPageNo').val(pageNo);

        var opt = null;
        opt = { callback: pageselectCallback };
        opt["items_per_page"] = recordPerPage;
        opt["num_display_entries"] = pagePerBatch;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = index;
        $("#Pagination").pagination(recordCount, opt);
    }

    function pageselectCallback(page_index, jq) {
        debugger;
            $('.required').removeClass('required');

            if (!ValidatePageSize())
                return false;

            var pageNo = page_index + 1
            $('#hdnPageNo').val(pageNo);
        if (IsCall == 'Y') {
            if (TabName == "BS") {
                BindbookingSheetList();
            }
            if (TabName == "PR") {
                PendingRecommendationsList();
            }
        }
        else {
            IsCall = 'Y';
        }
    }

    function txtPageSize_OnChange() {
        debugger;
        $("[required='required']").removeAttr("required");
        $('.required').removeClass('required');
        if (!ValidatePageSize())
            return false;
        if (TabName == "BS") {
            BindbookingSheetList();
        }
        if (TabName == "PR") {
            PendingRecommendationsList();
        }

        SetPaging();
    }

    function ValidatePageSize() {
        debugger;
        var recordPerPage = $('#txtPageSize').val()
        if ($(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);
            if (pageSize > 0)
                return true;
        }
        $('#txtPageSize').attr('required', true)
        return false
    }

    function BindbookingSheetList() {
        var pageNo = $('#hdnPageNo').val();
        var recordPerPage = $('#txtPageSize').val();

        debugger;
        $.ajax({
            type: "POST",
            url: URL_BindBookingSheetList,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                pageNo: pageNo,
                recordPerPage: recordPerPage,
                sortType: sort_Type
            }),
            success: function (result) {
                $('#divBindList').empty();
                $('#divBindList').html(result);
                CheckPendingStatus();
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

    function PendingRecommendationsList() {
        debugger;
        var pageNo = $('#hdnPageNo').val();
        var recordPerPage = $('#txtPageSize').val();

        $.ajax({
            type: "POST",
            url: URL_PendingRecommendationsList,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                pageNo: pageNo,
                recordPerPage: recordPerPage,
                sortType: sort_Type
            }),
            success: function (result) {
                $('#divBindList').empty();
                $('#divBindList').html(result);
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

    function OpenTab(NewTab) {
        debugger;
            if (NewTab == "BS") {
                //URL_LoadTab = URL_BindBookingSheetList;
                $("[id*='tab']").removeClass('active');
                $("#tabBkgsht").addClass('active');
                $("#searchCommon").attr('placeholder', 'Booking Sheet No., Client Name');
                $('#txtSort').show();
                $('#ddlSort').show();
                TabName = NewTab;
            }
            if (NewTab == "PR") {
                //URL_LoadTab = URL_PendingRecommendations;
                $("[id*='tab']").removeClass('active');
                $("#tabPdngrmdn").addClass('active');
                $("#searchCommon").attr('placeholder', 'Client Name');
                $('#txtSort').hide();
                $('#ddlSort').hide();
                TabName = NewTab;
        }
        SearchOnList("", TabName);
    }

    function GenerateBookingSheet(RcCode) {
        debugger;
        $.ajax({
            type: "POST",
            url: URL_GenerateBookingSheet,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                RecommendationCode: RcCode
            }),
            success: function (result) {
                if (result.Status == "S") {
                    showAlert("S", result.Message);
                    //PendingRecommendationsList();
                    SearchOnList("", TabName);
                }
                else {
                    showAlert("E", result.Message);
                }
            }
        })
    }

    function GeneratePO(BkCode, PrCode) {
        debugger;
        var Remark = $("#Remark").val();
        if (Remark == "") {
            $('#Remark').val('').attr('required', true)
            return false;
        }

        $.ajax({
            type: "POST",
            url: URL_GeneratePO,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                BookingsheetCode: BkCode,
                ProposalCode: PrCode,
                Remark: Remark

            }),
            success: function (result) {
                debugger;
                if (result.Status == "S") {                   
                    showAlert("S", result.Message);
                    ClosePopup();
                    window.location.href = URL_PurchaseOrderView;

                    //BindbookingSheetList();
                }
                else {
                    showAlert("E", result.Message);
                }
            }
        })
    }

    function RemarkPopup(BSCode, PCode, config) {
        debugger;
        $.ajax({
            type: "POST",
            url: URL_RemarkPopup,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                Booking_Sheet_Code: BSCode,
                Proposal_Code: PCode,
                config: config
            }),
            success: function (result) {
                debugger;
                if (result == "Redirect") {
                    window.location.href = URL_PurchaseOrderView;
                }
                else {
                    $('#popup').modal();
                    $('#RemarkPopupTbl').empty();
                    $('#RemarkPopupTbl').html(result);
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

    function ClosePopup() {
        debugger;
        $('#hdnAction').val("");
        $('#popup').modal('hide');

        BindbookingSheetList();
    }

    function CheckPendingStatus() {
        debugger;
        var pendingRecord = 0;
        $(".deal_action").each(function () {
            debugger;
            var Sibling = $(this).attr('class').split(' ')[2];
            var Sibling1 = $(this).attr('class').split(' ')[3];
            
            var SiblingClass = $(this).attr('class').split(' ')[1];
            if (isNaN(SiblingClass.substr(SiblingClass.length - 1))) {
                var BookingSheetCode = SiblingClass.slice(12, SiblingClass.length - 1);

                if (isNaN(Sibling.substr(Sibling.length - 1)))
                    var ProposalCode = Sibling.slice(13, Sibling.length - 1);

                if (isNaN(Sibling1.substr(Sibling1.length - 2)))
                    var config = Sibling1.slice(13, Sibling1.length - 2);

                if (SiblingClass.substr(SiblingClass.length - 1) == 'I' || SiblingClass.substr(SiblingClass.length - 1) == 'P') {
                    $.ajax({
                        type: "POST",
                        url: URL_GetbookingSheetStatus,
                        traditional: true,
                        enctype: 'multipart/form-data',
                        contentType: "application/json; charset=utf-8",
                        async: false,
                        data: JSON.stringify({
                            BookingSheetCode: BookingSheetCode
                        }),
                        success: function (result) {
                            debugger
                            if (result == "true") {
                                redirectToLogin();
                            }
                            if (result.RecordStatus == "P" || result.RecordStatus == "I") {
                                $("#imgLoading_" + BookingSheetCode).css("display", '');
                                pendingRecord++;
                            }
                            else if (result.RecordStatus == "C") {
                                $("#imgLoading_" + BookingSheetCode).css("display", 'none');
                                $('.' + SiblingClass).empty();

                                var a = '<a title="Import/Export" class="glyphicon glyphicon-floppy-open" style="cursor: pointer;" onclick="ImportMasterView(' + BookingSheetCode + ');"</a>' +
                                    '<a title="Generate Purchase Order" class="glyphicon glyphicon-share" style="cursor: pointer;" onclick="RemarkPopup(' + BookingSheetCode + ',' + ProposalCode +',' + config + ')"></a>' +
                                    '<a title="Refresh" class="glyphicon glyphicon-refresh" onclick="RefreshBookingSheet(' + BookingSheetCode + ');"></a>';
                                $('.' + SiblingClass).append(a);

                                initializeTooltip();
                                SearchOnList("", TabName);
                            }
                        },
                        error: function (result) {
                        }
                    });
                }
            }
        });

        //if (pendingRecord > 0) {
            setTimeout(CheckPendingStatus, 5000);
        //}
    }

    function RefreshBookingSheet(BookingSheetCode) {
        debugger;
        $.ajax({
            type: "POST",
            url: URL_RefreshBookingSheet,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                BookingSheetCode: BookingSheetCode
            }),
            success: function (result) {
                debugger;
                SearchOnList("", TabName);
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

</script>

<script>
    var URL_RedirectView = '@Url.Action("BindImportExportView", "BookingSheet")';
    var URL_ImportMasterView = '@Url.Action("ImportMasterView", "BookingSheet")';

    function ImportMasterView(BookingsheetCode) {
        debugger;
        $.ajax({
            type: "POST",
            url: URL_RedirectView,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                BookingsheetCode: BookingsheetCode
            }),
            success: function (result) {
                debugger;

                window.location.href = URL_ImportMasterView;
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

</script>

<div class="main_section">
    <section class="rightsU_container clearfix">
        <div class="container acq main_col">
            <div class="">
                <div class="title_block dotted_border clearfix">
                    <h2 class="pull-left">
                        Booking Sheet
                    </h2>
                </div>
                <div class="search_area" style="background-color: #eee; padding:5px;">
                    <table class="table">
                        <tr>
                            <td style="width:3%;vertical-align: middle;text-align:center;">
                                Search :
                            </td>
                            <td style="width:10%;vertical-align: middle;" align="left">
                                <input type="text" name="srchCommon" id="searchCommon" class="search" style="width:100%" placeholder="" autocomplete="off" />
                            </td>
                            <td style="width:10%;vertical-align: middle;">
                                <input type="button" id="btnSearch" class="button" value="@objMessageKey.Search" onclick="btnSearch_OnClick()">
                                <input type="button" id="btnShowAll" class="button" value="@objMessageKey.ShowAll" onclick="btnShowAll_OnClick()">
                            </td>
                            <td style="width:3%;vertical-align: middle;text-align:center;">
                                <div id="txtSort">@objMessageKey.SortBy:</div>
                            </td>
                            <td style="width:10%; text-align:left;">
                                <div id="ddlSort">
                                    @Html.DropDownList("SortType", (List<SelectListItem>)ViewBag.SortType, new { @id = "ddlSortType", @class = "form_input chosen-select" })
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="grid_area">
                    <div style="border-bottom: 1px dotted #777; display:none;"></div>
                    <div class="paging_area clearfix">
                        <span class="pull-left">Total Records: </span>
                        <span class="pull-left" id="lblRecordCount"></span>
                        <input type="hidden" id="hdnPageNo" name="hdnPageNo" value="1" />
                        <input type="hidden" id="hdnPagePerBatch" name="hdnPagePerBatch" value="5" />
                        <input type="hidden" id="hdnRecordCount" name="hdnRecordCount" value="0" />

                        <div id="Pagination" class="pagination">
                        </div>
                        <span class="pull-right">
                            Page Size:
                            <input type="text" id="txtPageSize" name="txtPageSize" class="smallTextBox pagingSize" value="10" autocomplete="off" onchange="txtPageSize_OnChange()" onblur="setDefaultPaging('txtPageSize')">
                        </span>
                    </div>
                    <div class="grid_area">
                        <div class="navigation_tabs">
                            <div class="tabbable" id="divAlternateConfig">
                                <input type="hidden" id="hdnTabName" value="TA" />
                                <ul class="nav nav-tabs nav-tab pull-left" id="ulalternate">
                                    <li class="active" id="tabBkgsht">
                                        <a data-toggle="tab" href="#" role="tab" data-tabname="TA" data-configitem="0" onclick="OpenTab('BS')">Booking Sheet</a>
                                    </li>
                                    <li id="tabPdngrmdn">
                                        <a data-toggle="tab" href="#" role="tab" data-tabname="TA" data-configitem="0" onclick="OpenTab('PR')">Pending Recommendations</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="tab-content clearfix table-wrapper scale_table_container">
                        <div class="scale_table_block">
                            <input type="hidden" id="hdnAction" value="" />
                            <input type="hidden" id="hdnRecodLockingCode" name="hdnRecodLockingCode" value="0" />
                            <div id="divBindList" class="deal clearfix">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<div aria-labelledby="myModalLabel" class="form_wrapper modal fade big_popup" id="popup" role="dialog" tabindex="-1" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content clearfix">
            <div class="modal_block modal_header">
                <a class="close" onclick="ClosePopup()">
                    <span>X</span>
                    <span class="sr-only">Close</span>
                </a>
                <h2>Generate Purchase Order</h2>
            </div>

            <div class="modal_block">
                <table class="add_title_popup">
                    <tbody id="RemarkPopupTbl"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@*<td style="width:3%; vertical-align: middle;">
        @Html.DropDownList("lstVendors", ViewBag.DdlClient as SelectList, "--Please Select--", new { @id = "searchCommon", @class = "form_input chosen-select" })
    </td>

    <div class="right_nav pull-right">
        <ul>
            <li id="btnUser">
                @Html.ActionLink("Create", "Create", "", new { @class = "btn btn-primary" })
            </li>
        </ul>
    </div>

    function DownloadLink(filename) {
        debugger;
        window.location.href = "/Download/" + filename;
    }

    function DownloadLink(BkSheetCode) {
        debugger;
        $.ajax({
            type: "POST",
            url: URL_GetFileName,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                BookingSheetCode: BkSheetCode
            }),
            success: function (Filename) {
                debugger;
                window.location.href = "/Download/" + Filename;
                SearchOnList("", TabName);
            }
        })
    }
*@

