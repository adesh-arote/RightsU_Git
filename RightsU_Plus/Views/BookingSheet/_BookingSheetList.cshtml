@model List<RightsU_Entities.USPAL_GetBookingSheetList_Result>
@using UTOFrameWork.FrameworkClasses
@{
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}

<table class="table table-bordered table-hover">
    <thead>
        <tr>
            <th rowspan="2" style="width:15%">Booking Sheet No.</th>
            <th rowspan="2" style="width:15%">Clients</th>
            <th rowspan="2" style="width:15%">Proposal - CY</th>
            <th rowspan="2" style="width:15%">Cycle - Period</th>
            <th colspan="2">No. of content</th>
            <th rowspan="2" style="width:12%">Last Action By</th>
            <th rowspan="2" style="width: 10%;">Last Action on</th>
            <th rowspan="2">Action</th>
        </tr>
        <tr>
            <th>Movie</th>
            <th>Show</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() > 0)
        {
            foreach (var item in Model)
            {
        <tr>
            <td style="text-align:center">
                @Html.DisplayFor(modelItem => item.Booking_Sheet_No)
            </td>
            <td>
                <span>
                    @{
                        string Client_Name = "";
                        if (item.Vendor_Code > 0 && item.Vendor_Code != null)
                        {
                            Client_Name = ((IEnumerable<RightsU_Entities.Vendor>)ViewBag.ClientCode).Where(a => a.Vendor_Code == item.Vendor_Code).Select(s => s.Vendor_Name).FirstOrDefault();
                        }
                        @Client_Name
                    }
                </span>
            </td>
            <td style="text-align:center">
                @Html.DisplayFor(modelItem => item.Proposal___CY)
            </td>
            <td style="text-align:center">
                @*@Html.DisplayFor(modelItem => item.Cycle)*@
            </td>
            <td style="text-align:center">
                @Html.DisplayFor(modelItem => item.Movie_Content_Count)
            </td>
            <td style="text-align:center">
                @Html.DisplayFor(modelItem => item.Show_Content_Count)
            </td>
            <td style="text-align:center">
                @*@Html.DisplayFor(modelItem => item.Last_Action_By)*@
                <span>
                    @{
                        string UpdateBy = "";
                        if (item.Last_Action_By > 0 && item.Last_Action_By != null)
                        {
                            UpdateBy = ((IEnumerable<RightsU_Entities.User>)ViewBag.UserCode).Where(a => a.Users_Code == item.Last_Action_By).Select(b => b.First_Name + " " + b.Last_Name).FirstOrDefault();
                        }
                        @UpdateBy
                    }
                </span>
            </td>
            <td style="text-align:center">
                @item.Last_Updated_Time.Value.ToString("dd MMM yyyy")
            </td>
            <td style="text-align:center">
                @if (item.Record_Status == "C")
                {
                    @*<a title="@objMessageKey.View" class="glyphicon glyphicon-eye-open" style="cursor:pointer;"></a>*@

                    <a title="Import/Export" class="glyphicon glyphicon-floppy-open" style="cursor: pointer;" onclick="ImportMasterView('@item.AL_Booking_Sheet_Code')"></a>

                    @*<a title="Download Booking Sheet" class="glyphicon glyphicon-collapse-down" style="cursor:pointer; color:#42a832;" onclick="DownloadLink('EpisodeTitle_Import.xlsx')"></a>*@
                }
                @if (item.Record_Status != "C")
                {
                    <img title="In Process" src="~/Images/square_dots_loading.gif" style="height: 26px;" />
                }
            </td>
        </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="9">@objMessageKey.Norecordfound</td>
            </tr>
        }

    </tbody>
</table>