@model RightsU_Entities.Music_Title
@using System.Configuration;
@using UTOFrameWork.FrameworkClasses
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<link href="~/CSS/sumoselect.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" rel="stylesheet" />
<script src="~/JS_Core/jquery.sumoselect.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<!DOCTYPE html>
<html>
<head>
    <title>RightsU</title>
    <style>
        #imgTitle {
            cursor: pointer;
            max-height: 300px;
        }

        #uploadFile {
            display: none;
        }

        .four_column input[type=text] {
            margin: 0 !important;
        }

        .chosen-container.chosen-container-multi {
            width: 89% !important;
        }

        /*.table_brif_head {
            border-bottom: 0 none;
            margin-top: 12px;
            direction: rtl;
        }*/

        .btnMusicTrack-Head {
            float: right;
        }

       
        /*.bottom_action_head li {
            float: right;
            list-style: none;
            padding: 0 5px;
        }*/
        /*.modal_block_head{
            direction: rtl;
        }*/
    </style>
    <script>
        function AddMovieAlbum() {
            debugger;
            // $("#ddlStarCastAdd").attr('selectedIndex', '-1');
            $("#AddMovie_Album_popup").modal();
            $("#AddMovie_Album_popup").show();
        }
    </script>
</head>

<body>
    <div class="main_section">
        <section class="rightsU_container clearfix">
            @if (ViewBag.commandName == "")
            {
                @*using (Ajax.BeginForm("Save", "Title", new AjaxOptions { HttpMethod = "POST", OnBegin = "Save", OnSuccess = "OnSuccess"}, new { enctype = "multipart/form-data" }))*@
                using (Html.BeginForm("Save", "Music_Title", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    <div class="container acq main_col title_edit" onclick="$('.leftPanel').css('right', panelHideCss);">
                        <div class="top_area">
                            <div class="title_block dotted_border clearfix">
                                <h2 class="pull-left">
                                    @objMessageKey.EditMusicTrack - 
                                    <span>@Html.Label("Music_Title_Name", Model.Music_Title_Name, new { @id = "lblTitleHead" }) </span>
                                    @Html.HiddenFor(m => Model.Music_Title_Code)
                                </h2>
                            </div>
                            <table class="table_brif table">
                                <tbody>
                                    <tr>
                                        <td class="intro_pic">
                                            <div>
                                                @if (Model.Image_Path != null)
                                                {   <img id="imgTitle" alt="Image" src="@Url.Content(ConfigurationManager.AppSettings["TitleImagePath"] + Model.Image_Path)" />}
                                                else
                                                {
                                                    <img id="imgTitle" alt="Image" src="~/Images/musicIcon.png" />

                                                    @*if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Music)
                                                        {<img id="imgTitle" alt="Image" src="~/Images/musicIcon.png" />}
                                                        else if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Content)
                                                        {<img id="imgTitle" alt="Image" src="~/Images/program.png" /> }
                                                        else if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Format_Program)
                                                        {<img id="imgTitle" alt="Image" src="~/Images/formatShow.png" /> }
                                                        else if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Event)
                                                        {<img id="imgTitle" alt="Image" src="~/Images/Event.png" /> }
                                                        else
                                                        {<img id="imgTitle" alt="Image" src="~/Images/movieIcon.png" />}*@

                                                }
                                                <input type="file" id="uploadFile" name="uploadFile" onchange="fileCheck(this);" />
                                            </div>
                                        </td>
                                        <td class="intro">
                                            <table class="four_column table">
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.MusicTrack</td>
                                                    <td style="width: 40%">
                                                        @Html.TextBoxFor(m => Model.Music_Title_Name, new { @id = "txtMusic_Title_Name", maxlength = "200" })
                                                        @*@Html.HiddenFor(m => Model.Music_Title_Code)*@
                                                    </td>
                                                    <td style="width: 14%">@objMessageKey.Lengthmin</td>
                                                    <td style="width: 40%">
                                                        @Html.TextBoxFor(y => Model.Duration_In_Min, new { @MaxLength = "7" })
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.Movie / @objMessageKey.Album</td>
                                                    <td style="width: 40%">
                                                        <input type="text" placeholder="@objMessageKey.Movie / @objMessageKey.Album" name="Music_Album_Name" id="txtmusicAlbumName" value="@ViewBag.MovieAlbum" autocomplete="on" style="width:320px" onkeyup="PopulateAutoCompleteMovieAlbum(this)" />
                                                        <input type="hidden" id="hdnMovieAlbum" value="@ViewBag.MovieAlbumCode" />
                                                        @*@Html.DropDownList("Music_Album_Name", (List<SelectListItem>)ViewBag.MovieAlbum, new { @id = "Music_Album_Name", @class = "form_input chosen-select", onchange = "jsFunction(this.value);" })*@
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddMovieAlbum" onclick="AddMovieAlbum();" />
                                                    </td>
                                                    <td style="width: 14%">@objMessageKey.YearOfRelease</td>
                                                    <td style="width: 40%">
                                                        @Html.TextBoxFor(m => Model.Release_Year, new { @onkeypress = "return isNumber(event);", @MaxLength = "4" })
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width: 14%">@objMessageKey.MusicVersion</td>
                                                    <td style="width: 40%">
                                                        @Html.DropDownList("Music_Version_Code", (List<SelectListItem>)ViewBag.TitleVersion, new { @id = "Music_Version_Code", @class = "form_input chosen-select" })
                                                    </td>
                                                    <td style="width: 13%">@objMessageKey.MusicLanguage</td>
                                                    <td style="width: 40%">
                                                        @* @Html.DropDownList("Language_code", (List<SelectListItem>)ViewBag.Language, new { @id = "Language_code", @class = "form_input chosen-select", @onchange = "LanguageOnChange(this);" })*@
                                                        @*@Html.Hidden("hdnLanguage")*@
                                                        @Html.ListBox("ddlLanguage", ViewBag.Language as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnLanguage")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddMusicLanguage" onclick="AddGenericField('Music Language');" />
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.Singer</td>
                                                    <td style="width: 40%">
                                                        @Html.ListBox("ddlSinger", ViewBag.SingerList as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnSinger")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddSinger" onclick="AddTalent(@GlobalParams.Role_Code_Singer);" />
                                                    </td>
                                                    <td style="width: 14%">@objMessageKey.MusicComposer</td>
                                                    <td style="width: 40%">
                                                        @Html.ListBox("ddlComposer", ViewBag.ComposerList as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnComposer")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddMusicComposer" onclick="AddTalent(@GlobalParams.Role_code_MusicComposer);" />
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.Lyricist</td>
                                                    <td style="width: 40%">
                                                        @*@Html.DropDownList("ddlCountry", (List<SelectListItem>)ViewBag.CountryList, new { @id = "ddlCountry", @class = "form_input chosen-select" })*@

                                                        @Html.ListBox("ddlLyricist", ViewBag.LyricistList as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnLyricist")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddLyricist" onclick="AddTalent(@GlobalParams.Role_code_lyricist);" />
                                                    </td>
                                                    <td style="width: 14%">@objMessageKey.MusicLabel</td>
                                                    <td style="width: 40%">
                                                        @*@Html.ListBox(
                                                                             "ddlMusicLabel",
                                                                             ViewBag.MusicLabelList as MultiSelectList,
                                                                             new { @class = "form_input chosen-select" }
                                                                )
                                                            @Html.Hidden("hdnMusicLabel")*@

                                                        @Html.DropDownList("Music_Label_Code", (List<SelectListItem>)ViewBag.MusicLabelList, new { @id = "Music_Label_Code", @class = "form_input chosen-select" })
                                                        @Html.Hidden("hdnMusicLabel")
                                                        @*<a class="red_icon glyphicon glyphicon-plus" title="Add Music Label" id="musicLabeladd" />*@
                                                    </td>

                                                </tr>
                                                <tr></tr>
                                                <tr>
                                                    <td style="width: 14%">@objMessageKey.MusicType</td>
                                                    <td style="width: 40%">
                                                        @Html.DropDownList("Music_Type_Code", (List<SelectListItem>)ViewBag.TitleType, new { @id = "Music_Type_Code", @class = "form_input chosen-select" })
                                                    </td>
                                                    @if (ViewBag.MusicThemeVisibility == "G" || ViewBag.MusicThemeVisibility == "GT")
                                                    {
                                                        <td style="width: 14%">@objMessageKey.Genres</td>
                                                        <td style="width: 40%">
                                                            @Html.DropDownList("Genres_Code", (List<SelectListItem>)ViewBag.TitleGenres, new { @id = "Genres_Code", @class = "form_input chosen-select" })
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td></td>
                                                        <td></td>
                                                    }
                                                </tr>
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.SongStarCast</td>
                                                    <td style="width: 40%">
                                                        @Html.ListBox("ddlStarCast", ViewBag.StarCastList as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnStarCast")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddSongStarCast" onclick="AddTalent(@GlobalParams.CodeForStarCast);" />
                                                    </td>
                                                    @if (ViewBag.MusicThemeVisibility == "T" || ViewBag.MusicThemeVisibility == "GT")
                                                    {
                                                        <td style="width: 13%">@objMessageKey.MusicTheme</td>
                                                        <td style="width: 40%">
                                                            @Html.ListBox("ddlTheme", ViewBag.Theme as MultiSelectList, new { @multiple = "multiple" })
                                                            @Html.Hidden("hdnTheme")
                                                            <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddMusicTheme" onclick="AddGenericField('Music Theme');" />
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td></td>
                                                        <td></td>
                                                    }
                                                </tr>
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.MovieStarCast</td>
                                                    <td style="width: 40%">
                                                        @Html.Label("lblStarcast", new { id = "lblStarcast" })

                                                    </td>

                                                    <td style="width: 13%">@objMessageKey.Tag</td>

                                                    <td style="width: 40%">@Html.TextBoxFor(m => Model.Music_Tag, new { @MaxLength = "200" })</td>
                                                </tr>
                                                @if (ViewBag.IsMuciVersionSPN == "Y") { 
                                                <tr>
                                                      <td style="width: 13%">@objMessageKey.PublicDomain</td>
                                                      <td style="width: 40%">
                                                          <label class="radio-inline">@Html.RadioButtonFor(m => Model.Public_Domain, "Y", new { @id = "PublicDomainY" })@objMessageKey.Yes</label>
                                                          <label class="radio-inline">@Html.RadioButtonFor(m => Model.Public_Domain, "N", new { @id = "PublicDomainN" })@objMessageKey.NO</label>
                                                      </td>
                                                      <td style="width: 13%"></td>
                                                      <td style="width: 40%"></td>
                                                  </tr>
                                                   }
                                            </table>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        @*<a class="glyphicon glyphicon-plus pull-right" title="Add" id="btnAddAdditional"></a>*@
                        @*<div class="divgvAdditionalField"></div>*@
                        <br />
                        <div class="bottom_action">
                            <ul class="form_link_nav clearfix">
                                <li>
                                    <input type="submit" class="btn btn-primary" value="@objMessageKey.Save" onclick="return Save();" />
                                </li>
                                <li>
                                    <input type="button" class="btn btn-primary" value="@objMessageKey.Cancel" onclick="return btnCancel();" />
                                </li>
                            </ul>
                        </div>
                    </div>
                }
            }
            @if (ViewBag.commandName == "C")
            {
                using (Html.BeginForm("Save", "Music_Title", FormMethod.Post, new { @enctype = "multipart/form-data" }))
                {
                    <div class="container acq main_col title_edit" onclick="$('.leftPanel').css('left', panelHideCss);">
                        <div class="top_area">
                            <div class="title_block dotted_border clearfix">
                                <h2 class="pull-left">
                                   @objMessageKey.MusicTrackClone -
                                    <span id="lblTitleHead"> </span>
                                    @*@Html.HiddenFor(m => Model.Music_Title_Code)*@
                                </h2>
                            </div>
                            <table class="table_brif table">
                                <tbody>
                                    <tr>
                                        <td class="intro_pic">
                                            <div>
                                                @if (Model.Image_Path != null)
                                                {   <img id="imgTitle" alt="Image" src="@Url.Content(ConfigurationManager.AppSettings["TitleImagePath"] + Model.Image_Path)" />}
                                                else
                                                {
                                                    <img id="imgTitle" alt="Image" src="~/Images/musicIcon.png" />

                                                    @*if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Music)
                                                        {<img id="imgTitle" alt="Image" src="~/Images/musicIcon.png" />}
                                                        else if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Content)
                                                        {<img id="imgTitle" alt="Image" src="~/Images/program.png" /> }
                                                        else if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Format_Program)
                                                        {<img id="imgTitle" alt="Image" src="~/Images/formatShow.png" /> }
                                                        else if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Event)
                                                        {<img id="imgTitle" alt="Image" src="~/Images/Event.png" /> }
                                                        else
                                                        {<img id="imgTitle" alt="Image" src="~/Images/movieIcon.png" />}*@

                                                }
                                                <input type="file" id="uploadFile" name="uploadFile" onchange="fileCheck(this);" />
                                            </div>
                                        </td>
                                        <td class="intro">
                                            <table class="four_column table">
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.MusicTrack</td>
                                                    <td style="width: 40%">
                                                        @Html.TextBoxFor(m => Model.Music_Title_Name, new { @id = "txtMusic_Title_Name", @Value = "", maxlength = "200" })
                                                        @Html.HiddenFor(m => Model.Music_Title_Code)
                                                        @Html.Hidden("hdnmode")
                                                        @Html.Hidden("hdnMusicTitleCode")

                                                    </td>
                                                    <td style="width: 14%">@objMessageKey.Lengthmin</td>
                                                    <td style="width: 40%">
                                                        @Html.TextBoxFor(y => Model.Duration_In_Min, new { @MaxLength = "7" })
                                                    </td>
                                                </tr>

                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.Movie / @objMessageKey.Album</td>
                                                    <td style="width: 40%">
                                                        <input type="text" placeholder="@objMessageKey.Movie / @objMessageKey.Album" name="Music_Album_Name" id="txtmusicAlbumName" value="@ViewBag.MovieAlbum" autocomplete="on" style="width:250px" onkeyup="PopulateAutoCompleteMovieAlbum(this)" />
                                                        <input type="hidden" id="hdnMovieAlbum" value="@ViewBag.MovieAlbumCode" />
                                                        @*@Html.TextBoxFor(m => Model.Movie_Album, new { @id = "txtMovie_Album", onkeypress = "return isAlphaNumeric(event);", maxlength = "200", @style = "width:89%" })*@
                                                        @*@Html.DropDownList("Music_Album_Name", (List<SelectListItem>)ViewBag.MovieAlbum, new { @id = "Music_Album_Name", @class = "form_input chosen-select", onchange = "jsFunction(this.value);" })*@
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddMovieAlbum" onclick="AddMovieAlbum();" />
                                                    </td>
                                                    <td style="width: 14%">@objMessageKey.YearOfRelease</td>
                                                    <td style="width: 40%">
                                                        @Html.TextBoxFor(m => Model.Release_Year, new { @onkeypress = "return isNumber(event);", @MaxLength = "4" })
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width: 14%">@objMessageKey.MusicVersion</td>
                                                    <td style="width: 40%">
                                                        @Html.DropDownList("Music_Version_Code", (List<SelectListItem>)ViewBag.TitleVersion, new { @id = "Music_Version_Code", @class = "form_input chosen-select" })
                                                    </td>
                                                    <td style="width: 13%">@objMessageKey.MusicLanguage</td>
                                                    <td style="width: 40%">
                                                        @* @Html.DropDownList("Language_code", (List<SelectListItem>)ViewBag.Language, new { @id = "Language_code", @class = "form_input chosen-select", @onchange = "LanguageOnChange(this);" })*@
                                                        @*@Html.Hidden("hdnLanguage")*@
                                                        @Html.ListBox("ddlLanguage", ViewBag.Language as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnLanguage")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddMusicLanguage" onclick="AddGenericField('Music Language');" />
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.Singer</td>
                                                    <td style="width: 40%">
                                                        @Html.ListBox("ddlSinger", ViewBag.SingerList as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnSinger")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddSinger" onclick="AddTalent(@GlobalParams.Role_Code_Singer);" />
                                                    </td>
                                                    <td style="width: 14%">@objMessageKey.MusicComposer</td>
                                                    <td style="width: 40%">
                                                        @Html.ListBox("ddlComposer", ViewBag.ComposerList as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnComposer")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddMusicComposer" onclick="AddTalent(@GlobalParams.Role_code_MusicComposer);" />
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.Lyricist</td>
                                                    <td style="width: 40%">
                                                        @*@Html.DropDownList("ddlCountry", (List<SelectListItem>)ViewBag.CountryList, new { @id = "ddlCountry", @class = "form_input chosen-select" })*@

                                                        @Html.ListBox("ddlLyricist", ViewBag.LyricistList as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnLyricist")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddLyricist" onclick="AddTalent(@GlobalParams.Role_code_lyricist);" />
                                                    </td>
                                                    <td style="width: 14%">@objMessageKey.MusicLabel</td>
                                                    <td style="width: 40%">
                                                        @*@Html.ListBox(
                                                                         "ddlMusicLabel",
                                                                         ViewBag.MusicLabelList as MultiSelectList,
                                                                         new { @class = "form_input chosen-select" }
                                                            )*@
                                                        @Html.Hidden("hdnMusicLabel")

                                                        @Html.DropDownList("Music_Label_Code", (List<SelectListItem>)ViewBag.MusicLabelList, new { @id = "Music_Label_Code_Clone", @class = "form_input chosen-select", })
                                                        @*<a class="red_icon glyphicon glyphicon-plus" title="Add Music Label" id="musicLabeladd" />*@
                                                    </td>

                                                </tr>
                                                <tr></tr>
                                                <tr>
                                                    <td style="width: 14%">@objMessageKey.MusicType</td>
                                                    <td style="width: 40%">
                                                        @Html.DropDownList("Music_Type_Code", (List<SelectListItem>)ViewBag.TitleType, new { @id = "Music_Type_Code", @class = "form_input chosen-select" })
                                                    </td>
                                                    @if (ViewBag.MusicThemeVisibility == "G" || ViewBag.MusicThemeVisibility == "GT")
                                                    {
                                                        <td style="width: 14%">@objMessageKey.Genres</td>
                                                        <td style="width: 40%">
                                                            @Html.DropDownList("Genres_Code", (List<SelectListItem>)ViewBag.TitleGenres, new { @id = "Genres_Code", @class = "form_input chosen-select" })
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td></td>
                                                        <td></td>
                                                    }
                                                </tr>
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.SongStarCast</td>
                                                    <td style="width: 40%">
                                                        @Html.ListBox("ddlStarCast", ViewBag.StarCastList as MultiSelectList, new { @multiple = "multiple" })
                                                        @Html.Hidden("hdnStarCast")
                                                        <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddSongStarCast" onclick="AddTalent(@GlobalParams.CodeForStarCast);" />
                                                    </td>
                                                    @if (ViewBag.MusicThemeVisibility == "T" || ViewBag.MusicThemeVisibility == "GT")
                                                    {
                                                        <td style="width: 13%">@objMessageKey.MusicTheme</td>
                                                        <td style="width: 40%">
                                                            @Html.ListBox("ddlTheme", ViewBag.Theme as MultiSelectList, new { @multiple = "multiple" })
                                                            @Html.Hidden("hdnTheme")
                                                            <a class="red_icon glyphicon glyphicon-plus" title="@objMessageKey.AddMusicTheme" onclick="AddGenericField('Music Theme');" />
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td></td>
                                                        <td></td>
                                                    }
                                                </tr>
                                                <tr>
                                                    <td style="width: 13%">@objMessageKey.MovieStarCast</td>
                                                    <td style="width: 40%">
                                                        @Html.Label("lblStarcast", new { id = "lblStarcast" })

                                                    </td>

                                                    <td style="width: 13%">@objMessageKey.Tag</td>

                                                    <td style="width: 40%">@Html.TextBoxFor(m => Model.Music_Tag, new { @MaxLength = "200" })</td>
                                                </tr>
                                                <tr>
                                                    <td style="width: 13%">Public Domain</td>
                                                    <td style="width: 40%">
                                                        <label class="radio-inline">@Html.RadioButtonFor(m => Model.Public_Domain, "Y", new { @id = "PublicDomainY" })@objMessageKey.Yes</label>
                                                        <label class="radio-inline">@Html.RadioButtonFor(m => Model.Public_Domain, "N", new { @id = "PublicDomainN" })@objMessageKey.NO</label>
                                                    </td>
                                                    <td style="width: 13%"></td>
                                                    <td style="width: 40%"></td>
                                                </tr>
                                                <tr></tr>
                                            </table>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <br />
                        <div class="bottom_action">
                            <ul class="form_link_nav clearfix">
                                <li>
                                    <input type="submit" class="btn btn-primary" value="@objMessageKey.Save" onclick="return Save();" />
                                </li>
                                <li>
                                    <input type="button" class="btn btn-primary" value="@objMessageKey.Cancel" onclick="return btnCancel();" />
                                </li>
                            </ul>
                        </div>
                    </div>
                }
            }
        </section>
    </div>
    <div aria-labelledby="myModalLabel" class="form_wrapper modal fade in" id="popAddTalent" role="dialog" tabindex="-1" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content clearfix">
                <form class="form" id="talent_popup">
                    <div>
                        <div class="form_fields">
                            <div class="modal_block modal_header">
                                <a class="close" data-dismiss="modal" href="#">
                                    <span>×</span>
                                    <span class="sr-only">Close</span>
                                </a>
                                <h2>@objMessageKey.AddTalent</h2>
                            </div>
                            <div class="modal_block" id="MusicTalent">
                                <ul class="add_title_popup">
                                    <li>
                                        <label><b>@objMessageKey.Talent</b></label>
                                        <input class="form_input" id="talent_name" name="title" type="text" value="" maxlength="100" ondrop="return false;" style="width:50%;" />
                                        <input id="hdnConfirmationtype" type="hidden" />
                                    </li>
                                    <li>
                                        <label style="padding-right:15px;"><b>@objMessageKey.Role</b></label>
                                        <select id="lbRoles" name="lbRoles" multiple="multiple"></select>
                                    </li>
                                    <li>
                                        <label class="PopGender"><b>@objMessageKey.Gender</b></label>
                                        <label class="inline-radio">
                                            <input type="radio" name="sex" value="0" checked />@objMessageKey.Male &nbsp;
                                        </label>
                                        <label class="inline-radio">
                                            <input type="radio" name="sex" value="1" />@objMessageKey.Female
                                        </label>
                                        <label>
                                            <input type="radio" name="sex" value="2" />@objMessageKey.NA
                                        </label>
                                    </li>
                                </ul>
                            </div>
                            <div class="modal_block" id="divMusicLabel" style="display: none;">
                                <ul class="add_title_popup">
                                    <li>
                                        <label><b>@objMessageKey.MusicLabelName</b></label>
                                        <input class="form_input" id="txtMusic_Label" name="title" type="text" value="" maxlength="100" ondrop="return false;" />
                                    </li>
                                </ul>
                            </div>
                            <div class="modal_block_full">
                                <div class="form_links">
                                    <ul class="modal_block clearfix">
                                        <li>
                                            <a class="btn btn-primary" href="#" onclick="ValidateSave()">@objMessageKey.Save</a>
                                        </li>
                                        <li>
                                            <a class="btn btn-primary" href="#" data-dismiss="modal">@objMessageKey.Cancel</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div aria-labelledby="myModalLabel" class="form_wrapper modal fade in" id="popAddGeneric" role="dialog" tabindex="-1" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content clearfix">
                <form class="form" id="talent_popup">
                    <div>
                        <div class="form_fields">
                            <div class="modal_block modal_header">
                                <a class="close" data-dismiss="modal" href="#">
                                    <span>×</span>
                                    <span class="sr-only">Close</span>
                                </a>
                                <h2 id="mainHead">@objMessageKey.AddTalent</h2>
                            </div>
                            <div class="modal_block" id="divGenericField">
                                <ul class="form_fields_wrapper add_title_popup">
                                    <li>
                                        <b><label id="lblField"></label></b>
                                        <input class="form_input" id="field_name" name="title" type="text" value="" maxlength="100" ondrop="return false;" />
                                        <input id="hdnConfirmationtype" type="hidden" />
                                    </li>
                                </ul>
                            </div>
                            <div class="modal_block_full">
                                <div class="form_links">
                                    <ul class="modal_block clearfix">
                                        <li>
                                            <a class="btn btn-primary" href="#" onclick="ValidateGenericSave()">@objMessageKey.Save</a>
                                        </li>
                                        <li>
                                            <a class="btn btn-primary" href="#" data-dismiss="modal">@objMessageKey.Cancel</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div aria-labelledby="myModalLabel" class="form_wrapper modal fade in" id="AddMovie_Album_popup" tabindex="-1" aria-hidden="false" hidden style="width:500px;">
        @Html.Action("PartialAddMovie_Album", "Music_Title")
    </div>
    <style>
        .sumo_ddlStarCast {
            width: 278px !important;
        }

        .sumo_ddlLyricist {
            width: 278px !important;
        }

        .sumo_ddlSinger {
            width: 278px !important;
        }

        .sumo_ddlComposer {
            width: 257px !important;
        }

        .sumo_ddlLanguage {
            width: 256px !important;
        }

        .sumo_ddlTheme {
            width: 256px !important;
        }

        .sumo_lbRoles {
            width: 280px !important;
        }
    </style>
    <script type="text/javascript">
        var URL_PopulateAutoCompleteMovieAlbum = '@Url.Action("PopulateAutoCompleteMovieAlbum", "Music_Title")';
        var URL_ValidateIsDuplicate = '@Url.Action("ValidateIsDuplicate", "Music_Title")';
        var URL_BindRoles = '@Url.Action("BindRoles", "Title")';
        $(document).ready(function () {
            debugger;
            $('#Music_Label_Code_chosen,#Genres_Code_chosen,#Duration_In_Min,#Release_Year,#Music_Tag').css('width','88%');
            $('#txtMusic_Title_Name,#txtmusicAlbumName,#Music_Version_Code_chosen,#Music_Type_Code_chosen').css('width','77%');
            $('.sumo_ddlSinger').css('width','277px !important');
            $('#talent_name').css('margin-right','14px');
            if('@objMessageKey.LayoutDirection' == "RTL")
            {   
                $('.PopGender').css("float", "Right");
                $('.inline-radio').css("float", "Right");
                $('.modal-dialog .close').css('padding-left','0px');
            }
            else
            {
                $('.PopGender').css("float", "left");
                $('.inline-radio').css("float", "left");
            }
            $('#lblStarcast').addBack().wrapAll('<div style="width:80%" />');
            $('#ddlLanguage').SumoSelect();
            $('#ddlSinger').SumoSelect();
            $('#ddlComposer').SumoSelect();
            $('#ddlLyricist').SumoSelect();
            $('#ddlTheme').SumoSelect();
            $('#ddlStarCast').SumoSelect();
            $('#lbRoles').SumoSelect();
            BindRoles();
            $("#lblStarcast").html('@ViewBag.StarcastJoins');
            if(@Model.Music_Title_Code > 0)
            {
                $('#Music_Label_Code').attr('disabled', true);
                $('#Music_Label_Code').trigger("chosen:updated");
            }
            $('#Music_Label_Code_Clone').attr('disabled', false);
            $('#Music_Label_Code_Clone').trigger("chosen:updated");

            $("#imgTitle").on("click", function () {
                $("#uploadFile").click();
            });
            //setChosenWidth("#ddlSinger", "85%");
            //setChosenWidth("#ddlLyricist", "85%");

            hideLoading();
            $('#txtMusic_Title_Name').keyup(function () {
                $('#lblTitleHead').text(this.value);
            });

            $('#musicLabeladd').click(function () {
                $('#txtMusic_Label').val('').focus();
                $('.modal_header h2').html('Add Music Label');
                $('#MusicTalent').hide();
                $("#popAddTalent").modal();
            });
            if ('@ViewBag.Record_Locking_Code' !='' && '@ViewBag.Record_Locking_Code' !='null'  && parseInt(@ViewBag.Record_Locking_Code) > 0)
            {
                var fullUrl = '@Url.Action("Refresh_Lock", "Global")';
                Call_RefreshRecordReleaseTime(@ViewBag.Record_Locking_Code,fullUrl);
            }
            $('#txtmusicAlbumName').click(function(){
                $('#txtmusicAlbumName').removeClass('required');
            })

        });
        function BindRoles() {
            $.ajax({
                type: "POST",
                url: URL_BindRoles,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                async: true,
                success: function (result) {

                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        $.each(result.RoleList, function () {
                            $("#lbRoles").append($("<option />").val(this.Value).text(this.Text));
                        });
                        $("#lbRoles")[0].sumo.reload();
                    }
                }
            });
        }
        function isNumber(evt) {
            evt = (evt) ? evt : window.event;
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }

        function isAlphaNumeric(evt) {
            var regx = /^[A-Za-z0-9 _.-]+$/;
            var inp = String.fromCharCode(evt.keyCode)
            if (regx.test(inp)) return true;
            else return false;
        }
        function SetDisableTalent() {
            debugger;
            var str = "3";
            var producer_array = str.split(',');
            var Director_array = str.split(',');
            var StarCast_array = str.split(',');

            $("#ddlSinger option, #ddlComposer option,#ddlLyricist option").each(function () {
                if ($.inArray($(this)[0].value, producer_array) != -1)
                    $(this)[0].disabled = true;
            });

            $("#ddlSinger,#ddlComposer,#ddlLyricist")[0].sumo.reload();
        }
        function fileCheck(obj) {
            var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];

            if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
                alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' @objMessageKey.formatsareallowed.");
                return false;
            }

            if (obj.files && obj.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgTitle').attr('src', e.target.result);
                }
                reader.readAsDataURL(obj.files[0]);
            }

            return true;
        }

        function btnCancel() {
            debugger;
            var URL = '@Url.Action("List", "Music_Title", new { SearchedTitle = "Searched_Title", IsMenu = "N" })';//, new { CallFrom = "T", Page_No = "Code", DealTypeCode = "Deal_Type_Code", TitleName = "Title_Name" }
            @*URL = URL.replace("Code", '@ViewBag.PageNo');
            URL = URL.replace("Deal_Type_Code", '@ViewBag.DealTypeCode');

            URL = URL.replace("amp;", "");
            URL = URL.replace("amp;", "");
            URL = URL.replace("amp;", "");*@
            URL = URL.replace("Searched_Title", '@ViewBag.SearchedTitle');
            URL = URL.replace("amp;", "");
            window.location.href = URL;
        }

        function isValidTime(text) {
            var regexp = new RegExp(/^[0-9]+(\.[0-5][0-9])?$/)
            return regexp.test(text);
        }

        function isValidYear(text) {
            debugger;
            if (text.val().length == 4)
                return true;
            else
                return false;
        }

        function Save() {
            debugger;
            showLoading();
            var hdnSinger = "";
            var hdnComposer = "";
            var hdnLyricist = "";
            var hdnMusicLabel = "";
            var hdnCountry = "";
            var hdnStarCast="";
            var hdnLanguage = "";
            var hdnTheme = "";
            var Music_Label_Code = ($('#Music_Label_Code_Clone').val());
            var Isvalid = true;
            var hdnmode ="@ViewBag.commandName";
            $('.required').removeClass('required');
            if(hdnmode == "C")
            {
                var hdnMusicTitleCode=$('#Music_Title_Code').val();
                $('#Music_Title_Code').val()=="0";
            }
            if(hdnmode!="C"){
                var hdnMusicTitleCode=$('#Music_Title_Code').val();
            }
            if ($.trim($("#txtMusic_Title_Name").val()) == '') {
                //showAlert("e", "Please enter title name", "");
                $("#txtMusic_Title_Name").addClass("required");
                hideLoading();
                return false;
            }

            if ($("#Music_Album_Name").val() == "0"){
                //showAlert("e", "Please enter title name", "");
                $("#Music_Album_Name").addClass("required");
                hideLoading();
                return false;
            }

            if ($.trim($("#Duration_In_Min").val()) != '') {
                if (!isValidTime($("#Duration_In_Min").val())) {
                    hideLoading();
                    showAlert("E", "@objMessageKey.InvalidDurationMin", "");
                    return false;
                }
            }
            if ($.trim($('#Release_Year').val()) != '') {
                var YOP = parseInt($.trim($('#Release_Year').val()))
                if (YOP < 1900) {
                    showAlert("E", "@objMessageKey.YearofReleaseshouldbegreaterthan1900", "");
                    hideLoading();
                    return false;
                }
            }
            if ($("#ddlSinger").val() != null)
                hdnSinger = $("#ddlSinger").val().join(',');
            if ($("#ddlComposer").val() != null)
                hdnComposer = $("#ddlComposer").val().join(',');
            if ($("#ddlLyricist").val() != null)
                hdnLyricist = $("#ddlLyricist").val().join(',');
            if ($("#ddlTheme").val() != null)
                hdnTheme = $("#ddlTheme").val().join(',');
            if ($("#ddlLanguage").val() != null)
                hdnLanguage = $("#ddlLanguage").val().join(',');
            //if ($("#ddlMusicLabel").val() != null)
            //    hdnMusicLabel = $("#ddlMusicLabel").val().join(',');
            if ($("#ddlStarCast").val() != null)
                hdnStarCast = $("#ddlStarCast").val().join(',');
            //if ($("#ddlCountry").val() != null)
            //    hdnCountry = $("#ddlCountry").val().join(',');
            //else
            //    hdnCountry = "";
            if ($.trim(hdnLanguage) == '') {
                //showAlert("e", "Please select atleast one language", "");
                $("#ddlLanguage").addClass("required");
                hideLoading();
                return false;
            }
            $("#hdnSinger").val(hdnSinger);
            $("#hdnComposer").val(hdnComposer);
            $("#hdnLyricist").val(hdnLyricist);
            $("#hdnMusicLabel").val(Music_Label_Code);
            $("#hdnStarCast").val(hdnStarCast);
            $("#hdnLanguage").val(hdnLanguage);
            $("#hdnTheme").val(hdnTheme);
            $("#hdnmode").val(hdnmode);
            $("#hdnMusicTitleCode").val(hdnMusicTitleCode);
            // $("#hdnCountry").val(hdnCountry);

            @*$.ajax({
                type: "POST",
                url: '@Url.Action("fillUDT", "Title")',
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    hdnDirector: $("#hdnDirector").val(),
                    hdnKeyStarCast: $("#hdnStarCast").val(),
                    hdnProducer: $("#hdnProducer").val()
                }),
                async: false,
                success: function (result) {
                    if (typeof result.Error !== "undefined" && result.Error != "") {
                        showAlert('E', result.Error, '');
                        Isvalid = false;
                    }
                    else {
                        Isvalid = true;
                    }
                },
                error: function (result) { }
            });*@

            var ISDuplicate = ""
            var NewTitleName = $("#txtMusic_Title_Name").val();
            var Music_Album_Code = $('#hdnMovieAlbum').val();
            var Music_Album_Name = $('#txtmusicAlbumName').val();
            var mode = "Edit";
            if(hdnmode == "C")
                mode = "Clone";
            if (NewTitleName != "") {
                debugger;
                $.ajax({
                    type: "POST",
                    url: URL_ValidateIsDuplicate,
                    traditional: true,
                    enctype: 'multipart/form-data',
                    async: false,
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({
                        MusicTitleName: NewTitleName,
                        MusicAlbumCode: Music_Album_Code,
                        MusicAlbumName : Music_Album_Name,
                        mode: mode
                    }),
                    success: function (result) {
                        if (result.Message != "") {
                            ISDuplicate = result.Message;
                            showAlert("E", ISDuplicate);
                            Isvalid = false;
                        }
                        if(result.ErrorMessage!= "")
                        {
                            $('#txtmusicAlbumName').addClass('required');
                            $('#txtmusicAlbumName').val('');
                            Isvalid = false;
                        }
                    },
                    error: function (result) {
                    }
                });
            }

            hideLoading();
            return Isvalid;
        }

        function AddTalent(Type) {
            $('#divMusicLabel').hide();
            $('#MusicTalent').show();
            $('.modal_header h2').html('@objMessageKey.AddTalent');
            $("#talent_name").val('');
            SelectRole(Type);
            $("#popAddTalent").modal();
            $("#talent_name").removeClass('required');
        }
        function AddGenericField(Type) {
            $('#divGenericField').show();
            $('#mainHead').html('Add '+Type);
            $('#lblField').html(Type);
            $("#field_name").val('');
            $("#popAddGeneric").modal();
            $("#field_name").removeClass('required');
        }
        function ValidateGenericSave()
        {
            debugger;
            var FieldName=$('#field_name').val();
            var type=$('#lblField').html();
            if(FieldName!='')
            {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveCommonField", "Music_Title")',
                    traditional: true,
                    enctype: 'multipart/form-data',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({
                        FieldName : FieldName,
                        Type : type
                    }),
                    success: function (result) {
                        if (typeof result.MusicLabelError !== "undefined" && result.MusicLabelError != "") {
                            $("#field_name").addClass("required");
                            showAlert('E', result.MusicLabelError, '');
                            $("#popAddGeneric").modal();
                        }
                        else {
                            $("#field_name").removeClass('required');
                            var ddlTheme = "#ddlTheme";
                            var ddlLanguage = "#ddlLanguage";
                            if(type=='Music Theme')
                                AppendTalent(ddlTheme, result);
                            if(type=='Music Language')
                                AppendTalent(ddlLanguage, result);
                            $('#divMusicLabel').hide();
                            $("#popAddGeneric").modal('hide');
                        }
                        hideLoading();
                    },
                    error: function (result) { }
                });
            }
            else
            {
                $("#field_name").addClass("required");
                showAlert('E', 'Please Enter '+type , '');
                return false;
            }
        }

        function SelectRole(roleType) {
            $('#lbRoles').val(roleType.toString())
            $('#lbRoles')[0].sumo.reload();
            $('#lbRoles').siblings('div.optWrapper').find('li.selected').addClass('disabled');
        }

        function ValidateSave(IsValidate) {
            debugger;
            var Error = "",str="";
            var ArrRoles = '@ViewBag.RolesList';
            var sList = "";
            var TalentName = "";
            var URL_SaveTalent = '@Url.Action("SaveTalent", "Title")';
            var URLSave = '@Url.Action("Save_Talent", "Title")';
            var Gender = "";
            var cmnURL = '';
            if (IsValidate == 'validate')
                cmnURL = URLSave;
            else
                cmnURL = URL_SaveTalent;
            if ($('#divMusicLabel').is(':visible')) {
                $('.modal_header h2').html('Add Music Label');
                if ($("#txtMusic_Label").val() == "") {
                    showAlert("E", "@objMessageKey.PleaseEnterMusicLabelName", "");
                    return false;
                }
            } else {

                if ($.trim($("#talent_name").val()) != "")
                    TalentName = $("#talent_name").val();
                else {
                    $("#talent_name").addClass("required");
                    showAlert("E", "@objMessageKey.PleaseEnterTalentName", "");
                    Error = "E";
                }
                sList = $('#lbRoles').val();
                $.each(sList, function (idx, val) {
                    str += val + ",";
                });
                sList = str;

                Gender = $('input[name=sex]:checked', '#talent_popup').val();
            }
            if ($("#ddlLanguage").val() == null ||$("#ddlLanguage").val() == '')
            {
                showAlert("E", "@objMessageKey.PleaseselectatleastoneLanguage", "");
                Error = "E";
            }
            if (Error == "") {
                if (parseInt(Gender) == 1)
                    Gender = "F";
                else if (parseInt(Gender) == 0)
                    Gender = "M";
                else if (parseInt(Gender) == 2)
                    Gender = "N";

                showLoading();

                if ($('#divMusicLabel').is(':visible')) {
                    debugger;
                    $('.modal_header h2').html('Add Music Label');
                    var Music_Label = $("#txtMusic_Label").val();
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("SaveMusicTitle", "Music_Title")',
                        traditional: true,
                        enctype: 'multipart/form-data',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            MusicLabelName: Music_Label
                        }),
                        success: function (result) {
                            if (typeof result.MusicLabelError !== "undefined" && result.MusicLabelError != "") {
                                $("#talent_name").addClass("required");
                                showAlert('E', result.MusicLabelError, '');
                                $("#popAddTalent").modal();
                            }
                            else {
                                var ddlSinger = "#ddlSinger";
                                var ddlComposer = "#ddlComposer";
                                var ddlLyricist = "#ddlLyricist";
                                var ddlMusicLabel = "#Music_Label_Code";
                                var ddlStarCast = "#ddlStarCast";
                                AppendTalent(ddlMusicLabel, result);
                                $('#divMusicLabel').hide();
                                $('#MusicTalent').show();
                                $('.modal_header h2').html('@objMessageKey.AddTalent');
                                $("#popAddTalent").modal('hide');
                            }
                            hideLoading();
                        },
                        error: function (result) { }
                    });
                }
                else {
                    $('#divMusicLabel').hide();
                    $('.modal_header h2').html('@objMessageKey.AddTalent');
                    $.ajax({
                        type: "POST",
                        url: cmnURL,
                        traditional: true,
                        enctype: 'multipart/form-data',
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({
                            Roles: sList,
                            TalentName: TalentName,
                            Gender: Gender
                        }),
                        success: function (result) {
                            if (typeof result.TalentError !== "undefined" && result.TalentError != "") {
                                $("#talent_name").addClass("required");
                                showAlert('E', result.TalentError, '');
                                $("#popAddTalent").modal();
                            }
                            else if (typeof result.TalentConfirmation !== "undefined" && result.TalentConfirmation !== "") {
                                $("#hdnConfirmationtype").val('talent');
                                showAlert("I", result.TalentConfirmation, "OKCANCEL");
                                $("#popAddTalent").modal();
                            }
                            else {
                                $("#hdnConfirmationtype").val('');
                                var SelectedRoles = "";
                                var selMulti = $.map($("#lbRoles option:selected"), function (el, i) {
                                    return $(el).text();
                                });
                                SelectedRoles = selMulti.join(", ");

                                var ddlSinger = "#ddlSinger";
                                var ddlComposer = "#ddlComposer";
                                var ddlLyricist = "#ddlLyricist";
                                var ddlStarCast = "#ddlStarCast";
                                var Arr = SelectedRoles.toString().trim(',').split(',');

                                for (var i = 0; i < Arr.length; i++) {
                                    debugger;
                                    var currentVal = Arr[i];
                                    var currentValTrim = currentVal.trim();
                                    if (currentVal != "") {
                                        if (currentValTrim == "Singers") {
                                            AppendTalent(ddlSinger, result);
                                        }
                                        if (currentValTrim == "Music Composer") {
                                            AppendTalent(ddlComposer, result);
                                        }
                                        if (currentValTrim == "Lyricist") {
                                            AppendTalent(ddlLyricist, result);
                                        }
                                        if (currentValTrim == "Star Cast") {
                                            AppendTalent(ddlStarCast, result);
                                        }
                                    }
                                }
                                $("#popAddTalent").modal('hide');
                            }
                            hideLoading();
                        },
                        error: function (result) { }
                    });
                }
                hideLoading();
            }
            else $("#popAddTalent").modal();
            IsValidate = '';
        }

        //function AppendTalent(ddl, result) {
        //    $(ddl).append("<option selected='selected' value=" + result.Value + ">" + result.Text + "</option>");
        //    $(ddl).trigger("chosen:updated");
        //}
        function AppendTalent(ddl, result) {
            var count = 0;
            $(ddl + " :selected").each(function (i, sel) {
                // alert($(sel).text());
                if ($(sel).text().toLowerCase() == result.Text.toLowerCase()) {
                    count++;
                }
            });
            if (count == 0) {
                $(ddl).append("<option selected='selected' value=" + result.Value + ">" + result.Text + "</option>");
                $(ddl)[0].sumo.reload();
            }
        }
        function OnSuccess(message) {
            showAlert('S', message, 'OK');
        }

        function handleOk() {
            if ($("#hdnConfirmationtype").val() == 'talent') {
                ValidateSave('validate');
            }
            else {
                var URL = '@Url.Action("Index", "Title_List", new { CallFrom = "T" })';
                URL = URL.replace("amp;", "");
                URL = URL.replace("amp;", "");
                window.location.href = URL;
            }
        }

        function jsFunction(){
            debugger;
            var value = $('#hdnMovieAlbum').val();
            //alert(value);
            var url ='@Url.Action("onChangeDropdown", "Music_Title")'
            $.ajax({
                type: "POST",
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: url,
                data: JSON.stringify({
                    value: value
                }),
                success:function (result){
                    //  alert(result);
                    $("#lblStarcast").html(result.Value);
                }

            });
        }

        function PopulateAutoCompleteMovieAlbum(keyword) {
            debugger;
            var keyword = $("#txtmusicAlbumName").val();
            $("#txtmusicAlbumName").autocomplete({
                focus: function () {
                    return false;
                },
                search: function (e, u) {
                    $(this).addClass('loader');
                },
                source: function (request, response) {
                    var param = {
                        keyword: keyword
                    };
                    $.ajax({
                        url: URL_PopulateAutoCompleteMovieAlbum,
                        data: JSON.stringify(param),
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; },
                        success: function (data) {
                            debugger;
                            if (data.length == 0) {
                                data[0] = '@objMessageKey.ResultNotFound';
                                response($.map(data, function (v, i) {
                                    $('#txtmusicAlbumName').removeClass('loader');
                                    return {
                                        label: '@objMessageKey.ResultNotFound',
                                        val: '0'
                                    }
                                }))
                            }
                            else{
                                response($.map(data, function (v, i) {
                                    $('#txtmusicAlbumName').removeClass('loader');
                                    return {
                                        label: v.Music_Album_Name,
                                        val: v.Music_Album_Code
                                    }
                                }))
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Error" + textStatus);
                        }
                    });
                },
                select: function (event, ui) {
                    debugger;
                    $('#hdnMovieAlbum').val(ui.item.val);
                    if (ui.item.val == '0') {
                        return false;
                    }
                    else
                    {
                        jsFunction();
                        return true;
                    }
                    //$("#hdnMappedCode_" + masterLogCode).val(ui.item.val);
                },
                minLength: 2,
                open: function (event, ui) {
                    $(".ui-autocomplete").css("position", "absolute");
                    $(".ui-autocomplete").css("max-height", "200px");
                    $(".ui-autocomplete").css("max-width", "250px");
                    $(".ui-autocomplete").css("overflow-y", "auto");
                    $(".ui-autocomplete").css("overflow-x", "hidden");
                    $(".ui-autocomplete").css("z-index", "2147483647");
                },
            });
        }
    </script>
</body>

</html>
