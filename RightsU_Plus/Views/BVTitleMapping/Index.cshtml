@using UTOFrameWork.FrameworkClasses
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<link href="~/CSS/sumoselect.css" rel="stylesheet" />
<script src="~/JS_Core/jquery.sumoselect.js"></script>
@using System.Configuration;
@using UTOFrameWork.FrameworkClasses
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<script>
    var URL_BindBVTitleMappingList = '@Url.Action("BindBVTitleMappingList", "BVTitleMapping")';
    var URL_BV_Search_Title_Mapping = '@Url.Action("SearchBVTitleMapping", "BVTitleMapping")';
    var URL_BindDDL = '@Url.Action("BindDDL", "BVTitleMapping")';
    var URL_PopulateTitleForMapping = '@Url.Action("PopulateTitleForMapping", "BVTitleMapping")'
    $(document).ready(function () {
        debugger;
        addNumeric();
        initializeChosen();
        SearchBVTitleMapping("");
        BindDDL();

        $('#ddlBVTitle').SumoSelect();

        $('#ddlBVTitle').each(function () {
            $(this)[0].sumo.reload();
        });
    });
    function BindDDL() {
        $.ajax({
            type: "POST",
            url: URL_BindDDL,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            async: true,
            success: function (result) {
                debugger;
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    debugger;
                    $('#ddlBVTitle').empty();
                    $.each(result.BV_Title, function () {
                        $("#ddlBVTitle").append($("<option />").val(this.Value).text(this.Text));
                    });
                    $('#ddlBVTitle')[0].sumo.reload();
                    // $('#ddlBVTitle').trigger("chosen:updated");

                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }
    function pageselectCallback(page_index, jq) {
        debugger;
        $('.required').removeClass('required');

        if (!ValidatePageSize())
            return false;

        var pageNo = page_index + 1
        $('#hdnPageNo').val(pageNo);
        if (IsCall == 'Y')
            BindBVTitleMappingList();
        else
            IsCall = 'Y';
    }
    function addNumeric() {
        $(".pagingSize").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 99,
            min: 1
        });
    }
    function SetPaging() {
        IsCall = 'N';
        var pageNo = parseInt($('#hdnPageNo').val());
        var recordCount = parseInt($('#hdnRecordCount').val());
        var pagePerBatch = parseInt($('#hdnPagePerBatch').val());
        var recordPerPage = parseInt($('#txtPageSize').val());

        var cnt = pageNo * recordPerPage;
        if (cnt >= recordCount) {
            var v1 = parseInt(recordCount / recordPerPage);
            if ((v1 * recordPerPage) == recordCount)
                pageNo = v1;
            else
                pageNo = v1 + 1;
        }

        if (pageNo == 0)
            pageNo = 1;

        var index = pageNo - 1;
        $('#hdnPageNo').val(pageNo);

        var opt = null;
        opt = { callback: pageselectCallback };
        opt["items_per_page"] = recordPerPage;
        opt["num_display_entries"] = pagePerBatch;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = index;
        $("#Pagination").pagination(recordCount, opt);
    }
    function txtPageSize_OnChange() {
        debugger;

        $("[required='required']").removeAttr("required");
        $('.required').removeClass('required');
        if (!ValidatePageSize())
            return false;

        BindBVTitleMappingList()
        SetPaging();
    }
    function pageBinding() {
        BindBVTitleMappingList()
        SetPaging();
    }

    $('.checkboxAll').on("click", function () {
        debugger;
        if ($('.checkboxAll:checked').length == $('.checkboxAll').length) {
            $('#checkAll').prop('checked', true);
        } else {
            $('#checkAll').prop('checked', false);
        }
        var IsCheck = $(this).prop('checked');
        $(this).parents('tr').find('.txtMaptoDeal').prop('disabled', !IsCheck);
    });
    function ValidatePageSize() {

        if (($('.checkboxAll').prop('checked')) && $('.txtMaptoDeal').val() == "" && ($('.checkboxIgnore').prop('checked') == false)) {
            showAlert('E', "Please select either Ignore or Deal title to Map");
            return false;
        }

        var recordPerPage = $('#txtPageSize').val()
        if ($.trim(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);
            if (pageSize > 0)
                return true;
        }
        $('#txtPageSize').attr('required', true)
        return false
    }
    function btnSearch_OnClick() {
        debugger;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");

        if (!ValidatePageSize())
            return false;

        var searchText = $('#ddlBVTitle').val();
        if (searchText == null) {

            $('#divBVTitle').addClass("required");

            return false;
        }
        else {
            var searchText = $('#ddlBVTitle').val().join(',');
        }
        SearchBVTitleMapping(searchText);
    }
    function btnShowAll_OnClick() {
        debugger;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");

        if (!ValidatePageSize())
            return false;

        $('#hdnPageNo').val(1);
        $("#ddlBVTitle").find("option").attr("selected", false);
        $("#ddlBVTitle").val('')[0].sumo.reload();
        SearchBVTitleMapping("");
    }

    function BindBVTitleMappingList() {
        debugger;
        var pageNo = $('#hdnPageNo').val();
        var recordPerPage = $('#txtPageSize').val();
        $.ajax({
            type: "POST",
            url: URL_BindBVTitleMappingList,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                pageNo: pageNo,
                recordPerPage: recordPerPage
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#divBVTitleMappingList').empty();
                    $('#divBVTitleMappingList').html(result);
                    initializeExpander();
                    initializeTooltip();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }
    function SearchBVTitleMapping(searchText) {
        showLoading();
        $.ajax({
            type: "POST",
            url: URL_BV_Search_Title_Mapping,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                searchText: searchText
            }),
            async: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#hdnPageNo').text(1);
                    $('#lblRecordCount').text(result.Record_Count);
                    $("#hdnRecordCount").val(result.Record_Count);
                    SetPaging()
                    BindBVTitleMappingList();
                    hideLoading();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
                hideLoading();
            }
        });
    }
    function PopulateTitleForMapping(obj) {
        var gvid = obj.id;
        var hdnDealTitleCode = document.getElementById(gvid.replace('Mapped_Deal_Title_Code_', 'hdnDealTitleCode_'));
        if (obj.val == "") {
            $(hdnDealTitleCode).val('');
        }
        $("input[id$=" + gvid + "]").autocomplete({
            focus: function () {
                return false;
            },
            source: function (request, response) {
                $(hdnDealTitleCode).val('');
                var param = { keyword: obj.value };
                $.ajax({
                    url: URL_PopulateTitleForMapping,
                    data: JSON.stringify(param),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        if (data.length == 0) {
                            data[0] = 'Result Not Found';
                            response($.map(data, function (v, i) {
                                return {
                                    label: 'Result Not Found',
                                    val: '0'
                                }
                            }))
                        }
                        else {
                            response($.map(data, function (v, i) {
                                return {
                                    label: v.Mapping_Name,
                                    val: v.Mapping_Code
                                }
                            }))
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Error" + textStatus);
                    }
                });
            },
            select: function (event, ui) {
                $(hdnDealTitleCode).val(ui.item.val);
                if (ui.item.val == '0') {
                    return false;
                }
                else
                    return true;
            },
            minLength: 2,
            open: function (event, ui) {
                $(".ui-autocomplete").css("position", "absolute");
                $(".ui-autocomplete").css("max-height", "200px");
                $(".ui-autocomplete").css("max-width", "250px");
                $(".ui-autocomplete").css("overflow-y", "auto");
                $(".ui-autocomplete").css("overflow-x", "hidden");
                $(".ui-autocomplete").css("z-index", "2147483647");
            }
        });
    }
    function Save_Success(result) {
        if (result == "true") {
            redirecttologin();
        }
        else {
            if (result.status == "S") {
                showAlert("s", result.message);
                SearchBVTitleMapping("");
            }
        }
    }

</script>
<style>
    .search_area {
        border-bottom: 1px dotted #777;
        margin-bottom: 5px;
        background-color: #eee;
    }
</style>
<style>
    td {
        padding: 5px 0px;
    }

    .form-control {
        display: inline-block !important;
    }

    .paging_area {
        border-bottom: 1px dotted #777;
        height: 36px;
        margin-top: 10px;
    }

    .sumo_ddlBVTitle {
        width: 266px;
    }
</style>
<div class="main_section">
    <section class="rightsU_container clearfix">
        <div class="container acq main_col">
            <div class="">
                <div class="title_block dotted_border clearfix">
                    <h2 class="pull-left">
                        BV Title Mapping
                        <span></span>
                    </h2>
                </div>
                <input type="hidden" id="hdnIntCode" />
                <div class="search_area" id="BV_Title">
                    <table class="table">
                        <tr>
                            <td style="width:10%; vertical-align:middle">
                                BV Title :
                            </td>
                            <td style="width:25%; vertical-align:middle">
                                <div id="divBVTitle" style="width:100%!important">
                                    @Html.ListBox("ddlBVTitle", ViewBag.BVTitleName as MultiSelectList, new { @class = "" })
                                </div>

                            </td>
                            <td>
                                &nbsp;&nbsp;
                                <input type="button" id="btnSearch" class="button" value="Search" onclick="btnSearch_OnClick()">&nbsp;
                                <input type="button" id="btnShowAll" class="button" value="Show All" onclick="btnShowAll_OnClick()">
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="grid_area">
                    <div style="border-bottom: 1px dotted #777; display:none;"></div>
                    <div class="paging_area clearfix">
                        <span class="pull-left">Total Records: </span>
                        <span class="pull-left" id="lblRecordCount"></span>
                        <input type="hidden" id="hdnPageNo" name="hdnPageNo" value="1" />
                        <input type="hidden" id="hdnPagePerBatch" name="hdnPagePerBatch" value="5" />
                        <input type="hidden" id="hdnRecordCount" name="hdnRecordCount" value="0" />

                        <div id="Pagination" class="pagination">
                        </div>
                        <span class="pull-right">
                            Page Size:
                            <input type="text" id="txtPageSize" name="txtPageSize" class="smallTextBox pagingSize" value="10" 
                                   onchange="txtPageSize_OnChange()" onblur="setDefaultPaging('txtPageSize')">
                        </span>
                    </div>
                    <div class="tab-content clearfix table-wrapper scale_table_container">
                        <div class="scale_table_block">
                            <input type="hidden" id="hdnBVTitleCode" value="0" />
                            <input type="hidden" id="hdnAction" name="hdnAction" value="" />
                            <div id="divBVTitleMappingList" class="deal clearfix">
                            </div>
                        </div>
                        <input type="button" class="btn btn-primary" value="Map" onclick="return MapData();" />
                    </div>
                    <br />
                </div>
            </div>
        </div>
    </section>
</div>








































