@model RightsU_Dapper.Entity.Master_Entities.BVException
@{
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }   
}


@using (Ajax.BeginForm("SaveBVException", "BVException", new AjaxOptions() { OnSuccess = "SaveSuccess" }))
{
    <div class="modal_block modal_header">
        <a class="close" onclick="ClosePopup()">
            <span>X</span>
            <span class="sr-only">Close</span>
        </a>
        @if (Model.Bv_Exception_Code > 0)
        {
            <h2>@objMessageKey.EditBVExceptionDetails</h2>
            @Html.HiddenFor(m => Model.Bv_Exception_Code)
        }
        else
        {
            <h2>@objMessageKey.AddBVExceptionDetails</h2>
        }
    </div>
    <div class="modal_block">
        <table class="add_title_popup">
            <tr>
                <td style="width:20%"><b>@objMessageKey.ExceptionType</b></td>
                <td>
                    @if (Model.Bv_Exception_Type != null)
                    {
                        if (Model.Bv_Exception_Type.Trim() == "R")
                        {
                            <input type="radio" value="S" id="rbExceptionSchdule" name="Bv_Exception_Type"><text>@objMessageKey.Schedule</text>
                            <input type="radio" value="R" id="rbExceptionRun" name="Bv_Exception_Type" checked="checked"><text>@objMessageKey.AsRun</text>
                            @*<input type="hidden" id="hdnRecodLockingCode" name="hdnRecodLockingCode" value="0" />*@
                        }
                        else
                        {
                            <input type="radio" value="S" id="rbExceptionSchdule" name="Bv_Exception_Type" checked="checked"><text>@objMessageKey.Schedule</text>
                            <input type="radio" value="R" id="rbExceptionRun" name="Bv_Exception_Type"><text>@objMessageKey.AsRun</text>
                        }
                    }

                    else
                    {
                        <input type="radio" value="S" id="rbExceptionSchdule" name="Bv_Exception_Type" checked="checked"><text>@objMessageKey.Schedule</text>
                        <input type="radio" value="R" id="rbExceptionRun" name="Bv_Exception_Type"><text>@objMessageKey.AsRun</text>
                    }
                </td>
            </tr>
            <tr>
                <td><b>@objMessageKey.Channel</b></td>
                <td>
                    <div id="divChannel">
                        @Html.DropDownList("ddlChannel", ViewBag.ChannelList as MultiSelectList, new { @id = "ddlChannel", @multiple = "multiple" })
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <b>@objMessageKey.User</b>
                </td>
                <td>
                    <div id="divUser">
                        @Html.DropDownList("ddlUser", ViewBag.UserList as MultiSelectList, new { @id = "ddlUser", @multiple = "multiple" })
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <div class="modal_block_full">
        <div class="form_links">
            <ul class="modal_block clearfix" style="padding-left:10; padding-top: 0px;">
                <li>
                    <input type="submit" class="btn btn-primary" value="@objMessageKey.Save" onclick="return Validate_Save();" />
                    <input type="button" class="btn btn-primary" value="@objMessageKey.Cancel" onclick="ClosePopup()" />
                </li>
            </ul>
        </div>
    </div>
}
