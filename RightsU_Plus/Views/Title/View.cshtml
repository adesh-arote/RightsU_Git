@model RightsU_Entities.Title
@using System.Configuration;
@using RightsU_BLL;

@using UTOFrameWork.FrameworkClasses
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
    LoginEntity objLoginEntity = new LoginEntity();
    if (Session["objLoginEntity"] != null)
    {
        objLoginEntity = (LoginEntity)Session["objLoginEntity"];
    }
}
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<link type="text/css" rel="stylesheet" href="~/css/ui.fancytree.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<script type="text/javascript" src="~/JS_Core/jquery.fancytree.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<script type="text/javascript" src="~/JS_Core/jquery.fancytree.filter.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>

<style>
    #tdsynopsis .details {
        width: 100px;
        word-break: break-all;
    }

    #Tree_Filter_Rights_Platform {
        margin-left: -10px;
        width: 300px;
        margin-top: -3px;
    }

    #divPlatformTree {
        overflow-x: hidden;
        /*overflow-y:auto;*/
    }

    #popupFade .modal_header {
        background: #c3c3c3;
    }

    #popupFade {
        width: 300px !important;
    }
</style>
<script type="text/javascript">
</script>
<script type="text/javascript">
    var URL_BindViewAlternateTab = '@Url.Action("BindViewAlternateTab", "Title")';
    var URL_Refresh_Lock = '@Url.Action("Refresh_Lock", "Global")';
    var URL_Release_Lock = '@Url.Action("Release_Lock", "Global")';
    URL_Reload_Current_Page = '@Url.Action("View", "Title")';
    var AlternateTabNameForActive = '';
    var chosenTerritory = [];
    var chosenCountry = [];
    $(document).ready(function () {
        debugger;
        $('#rdWorld').parents('li').next().hide();
        if ('RTL' == '@objMessageKey.LayoutDirection'){
            $('.divRelease').css("float", "left");
            $('.poptalent').css("float", "Right");
            $('.close').css("float", "left");
            $('.PopGender').css("float", "Right");
            $('.inline-radio').css("float", "Right");
            //$('.pull-left').addClass('pull-left-Head')
            //$('.pull-right').addClass('pull-right-Head')
            //$('.pagination').addClass('pagination-Head')
            //$('.TN').addClass('.TNHead')
            $('#lblReleaseType').css("float", "right")
        }
        else {
            $('.divRelease').css("float", "Right");
            $('.poptalent').css("float", "Left");
            $('.close').css("float", "Right");
            $('.PopGender').css("float", "Left");
            $('#lblReleaseType').css("float", "left")
            //$('.inline-radio').css("float", "Left");
        }
       // $("#ancFileName").attr('href', '/Help/Masters/Layout.html?TitleList');

        showLoading();
        BindExtended('@ViewBag.Mode');
        BindAlternateTab('TA', 0);
        var Synopsis = document.getElementById("Synopsis");
        if (Synopsis != null)
            countChar(Synopsis);
        hideLoading();
        var page_index = 0;
        var recordLockingCode = 0;
        if ('@ViewBag.Mode' == 'V') {
            if ('@ViewBag.DealListPageNo' != '')
                $('#txtPageSize').val('@ViewBag.DealListPageSize');
            if ('@ViewBag.DealListPageNo' != '')
                Bind_Deal_List('@ViewBag.DealListPageNo', 'N');
            else
                Bind_Deal_List(page_index, 'N');
        }
        else if ('@ViewBag.Mode' == 'R') {
           recordLockingCode = @ViewBag.RecordLockingCode_View;
            $('#hdnRecordLockingCode').val(recordLockingCode)
            if(recordLockingCode > 0)
                Call_RefreshRecordReleaseTime(recordLockingCode, URL_Refresh_Lock);
        }

        $('#ddlTerritory_TitleRel').chosen().change(function () {
            chosenTerritory = $(this).val();
        });

        $('#ddlCountry_TitleRel').chosen().change(function () {
            chosenCountry = $(this).val();
        });

        $('#btnAddRelease').click(function () {
            debugger
            $('#popAddTitleRelease').modal();
            $('#hdnTitleReleaseCode').val(0);
            $('#rdWorld').prop('checked', true);
            $('#popAddTitleRelease .modal_header h2').text('@objMessageKey.AddTitleRelease');
            var data = CheckHoldBack();
            if (data.length == 0 || data == '') {
                $('#hdnTVCodes').val('1,8,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,41,42,43,9,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,409,410,411,412,413,414,415,416,417,44,45,46,47,48,49,50,51,428');
                //$("#hdnSelectedPlatforms").val('@ViewBag.TheatricalPlatformCode');
                BindPlatformTree();
                $("#Rights_Platform").fancytree("disable");
                $('input[name="Rel_Type"]').prop('disabled', true);
                $('#rdWorld').prop('checked', true);

            }
            else if (data.length > 0) {
                $('#hdnTVCodes').val(data);
                $("#hdnSelectedPlatforms").val('');
                BindPlatformTree();
                $("#Rights_Platform").fancytree("enable");
                $('input[name="Rel_Type"]').prop('disabled', false);
                $('#rdWorld').prop('checked', true);
            }
            $('#rdWorld').parents('li').next().hide();
        });

        $('input[name="Rel_Type"]').click(function () {
            debugger;
            var ele = $(this);
            var id = ele.attr('id');
            $('#rdWorld').parents('li').next().show();
            if (id == 'rdTerritory') {
                $('#ddlTerritory_TitleRel_chosen').show();
                $('#ddlCountry_TitleRel_chosen').hide();
            }
            else if (id == 'rdCountry') {
                $('#ddlCountry_TitleRel_chosen').show();
                $('#ddlTerritory_TitleRel_chosen').hide();
            }
            else if (id == 'rdWorld') {
                ele.parents('li').next().hide();
            }
            $('#ddlCountry_TitleRel,#ddlTerritory_TitleRel').removeAttr('required');
        });

        BindTitleList(@ViewBag.TitleReleasePageNo);
        initializeExpander();
        if ('@ViewBag.IsCalculatePublicDomain' == "Y") {
            calculatePublicDomain()
        }
    });

    function clearObj() {
        chosenTerritory = [];
        chosenCountry = [];
        $('#ddlCountry_TitleRel,#ddlTerritory_TitleRel').val('').trigger('chosen:updated');
        $('#Rel_Date').val('');
        $('#ddlCountry_TitleRel').removeAttr('required');
    }
    function ValidateSaveTitleRelease() {
        var Rel_Date = $('#Rel_Date');
        if (Rel_Date.val() == '') {
            Rel_Date.attr('required', true);
            return false;
        }

        var Rel_Type = $('input[name="Rel_Type"]:checked').val();
        var SelectedNodes = $.map($('#Rights_Platform').fancytree("getTree").getSelectedNodes(), function (node) {
            return node.key;
        });
        var TitleReleaseCode = $('#hdnTitleReleaseCode').val();
        var removeItem = 0;
        SelectedNodes = jQuery.grep(SelectedNodes, function (value) {
            return value != removeItem;
        });

        var iCountryLen = [];
        var iTerritoryLen = [];
        if (Rel_Type == 'C') {
            var iCountryLen = $('#ddlCountry_TitleRel').val();
            if (iCountryLen == null) {
                $('#ddlCountry_TitleRel').attr('required', true);
                return false;
            }
            else {

                chosenCountry = iCountryLen;
            }
        }
        else if (Rel_Type == 'T') {
            var iTerritoryLen = $('#ddlTerritory_TitleRel').val();
            if (iTerritoryLen == null) {
                $('#ddlTerritory_TitleRel').attr('required', true);
                return false;
            }
            else {
                $('#ddlCountry_TitleRel').val('').trigger('chosen:updated');
                chosenTerritory = iTerritoryLen;
            }

        }


        if (SelectedNodes.length == 0) {
            $("#tree").attr('required', true);
            $("#tree").addClass('required');
            return false;
        }
        var World_Code = "";
        //var Territory_Code = $('#ddlTerritory_TitleRel_chosen option:selected').val();
        Rel_Date = Rel_Date.val(); //$.datepicker.formatDate('dd MM yy', new Date(Rel_Date.val()));

        $.ajax({
            url: '@Url.Action("SaveTitleRelease", "Title")',
            type: 'POST',
            data: ({ Title_Code: '@Model.Title_Code', Release_Type: Rel_Type, Release_Date: Rel_Date, platForm_Code: SelectedNodes.toString(), Territory_Code: World_Code == '' ? (chosenTerritory == null ? '' : chosenTerritory.toString()) : World_Code, Country_Code: (chosenCountry == null ? '' : chosenCountry.toString()), World_Code: '', Title_Release_Code: TitleReleaseCode }),
            async: false,
            success: function (data) {
                if (data == "true") {
                    redirectToLogin();
                }
                if (data == 1) {
                    showAlert('I', '@objMessageKey.Savedsuccessfully');
                    clearObj();
                    //calculatePublicDomain();
                    window.location.reload();
                }
                else if (data == 0)
                    showAlert('E', '@objMessageKey.CombinationAlreadyExist');

            }
        });
    }

    function BindTitleList(pageNo) {
        $.ajax({
            url: '@Url.Action("GetTitle_Release_List", "Title")',
            type: 'POST',
            data: ({ Title_Code: '@Model.Title_Code', PageNo: pageNo }),
            async: false,
            success: function (data) {
                if (data == "true") {
                    redirectToLogin();
                }
                $('#title_Release_List').html(data);
                initializeExpander();
                $('#lblTitleReleaseCount').text($('.rights_table_block').length)
            }
        });
    }

    function CheckHoldBack() {
        var retVal = '';
        $.ajax({
            url: '@Url.Action("CheckIfHoldBack","Title")',
            type: 'POST',
            data: ({ Title_Code: '@Model.Title_Code' }),
            async: false,
            success: function (data) {
                if (data == "true") {
                    redirectToLogin();
                }
                retVal = data;
            }
        });
        return retVal;
    }

    function calculatePublicDomain() {
        debugger;
        $.ajax({
            type: "POST",
            url: '@Url.Action("onSaveChange", "Title")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                titleCode: @Model.Title_Code,
            }),
            async: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                $('#PDomain').html("");

                if (result.PDOMAIN == true) {
                    $('#PDomain').append("Yes")
                }
                else {
                    $('#PDomain').append("No")
                }
            },
            error: function (result) { }
        });
    }

    function BindPlatformTree() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("BindPlatformTreeView", "Title")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                strPlatform: $("#hdnTVCodes").val(),
                selectedPlatform: $("#hdnSelectedPlatforms").val()
            }),
            async: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                $('#tree').html(result);
                //var j  = @Session["IsHoldBack"];
                //if (j == 0) {
                //    $("#Rights_Platform").fancytree("disable");
                //    $('input:radio').prop('disabled', true);
                //}
                //else {
                //    $("#Rights_Platform").fancytree("enable");
                //    $('input:radio').prop('disabled', false);
                //}
            },
            error: function (result) { }
        });
    }


    function Bind_Deal_List(page_index, IsCallFromPaging) {
        showLoading();
        var txtpageSize = $("#txtPageSize").val();
        //var txtpageSize = 10;
        $.ajax({
            type: "POST",
            url: '@Url.Action("Bind_Deal_List", "Title")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                //txtpageSize: $("#txtPageSize").val(),
                txtpageSize: txtpageSize,
                page_index: page_index,
                IsCallFromPaging: IsCallFromPaging,
                Page_No: '@ViewBag.PageNo',
                id: '@Model.Title_Code',
                DealTypeCode: '@ViewBag.DealTypeCode',
                SearchedTitle: '@ViewBag.SearchedTitle',
                TitlePageSize: '@ViewBag.PageSize'
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                $('#dv_Deal_List').html(result);
                //SetPaging(txtpageSize);
                setNumericForPagingSize();
                initializeExpander();
                initializeTooltip();
                if ($('#lblTotal_Records_Count').text() == 'Total Records : 0') {
                    $('#dv_Deal_List').hide();
                    $('#div_Paging').hide();
                }
                hideLoading();
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }


    function fileCheck(obj) {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
            return false;
        }
        return true;
    }


    function btnCancel() {
        debugger;
        if ('@ViewBag.Mode' == 'R') {
            var code = $('#hdnRecordLockingCode').val();
            var URL = '@Url.Action("List", "Title_List", new { CallFrom = "T", Page_No = "Code", Record_Locking_Code = "_RLCode_" })';
            URL = URL.replace("Title_Name", '@ViewBag.SearchedTitle');
            URL = URL.replace("Code", '@ViewBag.PageNo');
            URL = URL.replace("_RLCode_", code);
            URL = URL.replace(/amp;/g, "");
        }
        else {
            var URL = '@Url.Action("List", "Title_List", new { CallFrom = "T", Page_No = "Code", Record_Locking_Code = 0 })';
            URL = URL.replace("Title_Name", '@ViewBag.SearchedTitle');
            URL = URL.replace("Code", '@ViewBag.PageNo');
            URL = URL.replace(/amp;/g, "");
        }

        window.location.href = URL;

    }
    function BindExtended() {
        showLoading();
        var TitleCode = '@Model.Title_Code.ToString()';
        $.ajax({
            type: "POST",
            url: '@Url.Action("BindFieldNameddl", "Title")',
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                TitleCode: TitleCode
            }),
            success: function (result) {
                $('.divgvAdditionalField').html(result);
                $("#tbl_Additional_Fileds tr td:last-child").hide();
                $("#tbl_Additional_Fileds tr th:last-child").hide();
                initializeChosen();
                hideLoading();
            },
            error: function (result) {
            }
        });
    }


    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        return true;
    }

    function AddTalent(Type) {
        $("#talent_name").val('');
        SelectRole(Type);
        $("#popAddTalent").modal();
    }
    function SelectRole(roleType) {
        $('input[type=checkbox]').each(function () {
            this.checked = false;
        });
        //$('input[type=checkbox].' + roleType).attr('checked', 'true');
        $('input[type=checkbox].' + roleType).prop("checked", true);
        $('input[type=checkbox].' + roleType).prop("disabled", true);
    }
    function ValidateSave() {
        var Error = "";
        var ArrRoles = '@ViewBag.RolesList';
        var sList = "";
        var TalentName = "";
        var Gender = "";


        if ($("#talent_name").val() != "")
            TalentName = $("#talent_name").val();
        else {
            showAlert("E", '@objMessageKey.PleaseEnterTalentName', "");
            Error = "E";
        }

        if ($('input[type=checkbox]:checked').length <= 0 && Error == "") {
            showAlert("E", '@objMessageKey.PleaseSelectAtleastOneRole', "");
            Error = "E";
        }

        $('input[type=checkbox]').each(function () {
            if (this.checked)
                sList += $(this).val() + ",";
        });

        Gender = $('input[name=sex]:checked', '#talent_popup').val();



        if (Error == "") {
            if (parseInt(Gender) == 1)
                Gender = "F";
            else if (parseInt(Gender) == 0)
                Gender = "M";
            else if (parseInt(Gender) == 2)
                Gender = "N";

            showLoading();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveTalent", "Title")',
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    Roles: sList,
                    TalentName: TalentName,
                    Gender: Gender
                }),
                success: function (result) {
                    if (typeof result.TalentError !== "undefined" && result.TalentError != "") {
                        showAlert('E', result.TalentError, '');
                        $("#popAddTalent").modal();
                    }
                    else {
                        var SelectedRoles = "";
                        $('input[type=checkbox]:checked').each(function () {
                            SelectedRoles = SelectedRoles + $(this).attr('class') + ',';
                        });

                        var ddlProducer = "#ddlProducer";
                        var ddlDirector = "#ddlDirector";
                        var ddlStarCast = "#ddlStarCast";
                        var Arr = SelectedRoles.toString().trim(',').split(',');

                        for (var i = 0; i < Arr.length; i++) {
                            var currentVal = Arr[i];
                            if (currentVal != "") {
                                if (currentVal == "Producer") {
                                    AppendTalent(ddlProducer, result);
                                }
                                if (currentVal == "Director") {
                                    AppendTalent(ddlDirector, result);
                                }
                                if (currentVal == "StarCast") {
                                    AppendTalent(ddlStarCast, result);
                                }
                            }
                        }
                        $("#popAddTalent").modal('hide');
                    }
                    hideLoading();
                },
                error: function (result) {

                }

            });
        }
        else $("#popAddTalent").modal();
    }

    function AppendTalent(ddl, result) {
        $(ddl).append("<option value=" + result.Value + ">" + result.Text + "</option>");
        $(ddl).trigger("chosen:updated");
    }

    var Command_Name = "";
    var TitleReleaseCode = 0;
    function handleOk() {
        if (Command_Name == "TITLE_RELEASE_DELETE") {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteTitleRelease", "Title")',
                data: { Title_Release_Code: TitleReleaseCode },
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        if (result.Status == "S") {
                            showAlert('I', result.Message);
                            var pageNo = $('#hdnPageNo').val();
                            BindTitleList(pageNo);
                            calculatePublicDomain();
                        }
                        else {
                            showAlert('E', result.Message);
                        }
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
        else if ($("#hdnConfirmationtype").val() == 'talent') {
            ValidateSave('validate');
        }
        else {
            var obj = $('#hdnCurrentID').val();
            var imgDelete = document.getElementById("imgDelete_" + obj);
            SaveExtended(imgDelete);
        }
    }
    function handleCancel() {
        Command_Name = "";
        TitleReleaseCode = 0;
    }
    function TabChange(tabName,configCode) {

        if(tabName == "AL")
        {
            $('#hdnAlternateTabName').val(tabName);
            $('#tabGeneral').hide();
            $('#divAlternateLanguage').show();
            $('#tabtitle').removeClass('active');
            $('#tabAlternate' + configCode).addClass('active');
        }
        else{
            $('#divAlternateLanguage').hide();
            $('#tabGeneral').show();
            $('#tabAlternate' + AlternateTabNameForActive).removeClass('active');
            $('#tabtitle').addClass('active');
        }

        $('#hdnTabName').val(tabName);
        BindAlternateTab(tabName, configCode);
        AlternateTabNameForActive = configCode;
    }
    function BindAlternateTab(tabName,configCode) {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        var titleCode = @Model.Title_Code;
        var mode = '@ViewBag.CommandName';

        showLoading();
        $.ajax({
            type: "POST",
            url: URL_BindViewAlternateTab,
            traditional: true,
            enctype: 'multipart/form-data',
            async: false,
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                configCode: configCode,
                titleCode: titleCode,
                tabName:tabName,
                mode : mode
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $("#divAlternateLanguage").empty();
                    $("#divAlternateLanguage").append(result);
                    initializeTooltip();
                    hideLoading();
                }
            },
            error: function (result) {
                alert(result);
            }
        });
    }

</script>
<style>
    #divRelease {
        text-align: right;
        border-bottom: 1.5px dotted #CCC;
        margin-bottom: 10px;
        padding-bottom: 10px;
    }

    .chosen-drop {
        bottom: inherit !important;
    }

    /*.pull-left-Head {
        float: right !important;
        padding-right:1%;
    }

    .pull-right-Head {
        float: left !important;
    }

    .pagination-Head {
        float: left !important;
        margin-top: 4px;
         display: flex;
    }*/

    .TN {
        float: right !important;
    }

    /*.TNHead {
        float: left !important;
    }*/
</style>

@{
    RightsU_BLL.Language_Service objLS = new RightsU_BLL.Language_Service(objLoginEntity.ConnectionStringName);
    RightsU_BLL.Talent_Service objT = new RightsU_BLL.Talent_Service(objLoginEntity.ConnectionStringName);
    RightsU_BLL.Program_Service objP = new RightsU_BLL.Program_Service(objLoginEntity.ConnectionStringName);
    var lstTalent = new RightsU_BLL.USP_Service(objLoginEntity.ConnectionStringName).USP_Get_Talent_Name().ToList();
    string textalignlast = "";
    if (objMessageKey.LayoutDirection == "RTL")
    {
        textalignlast = "right";
    }
}
@using (Html.BeginForm("Save", "Title", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    <div class="container acq main_col title_edit" onclick="$('.leftPanel').css('left', panelHideCss);">
        <div class="top_area">
            <div class="title_block dotted_border clearfix">
                <h2 class="pull-left">
                    @*@objMessageKey.ViewTitle -*@
                    <span class="TN">@Model.Title_Name</span>
                </h2>
                <div class="right_nav pull-right">
                    <ul></ul>
                </div>
            </div>
            @if (ViewBag.IsFirstTime == "Y")
            {
                <div class="grid_area">
                    <div class="navigation_tabs" dir="@objMessageKey.LayoutDirection">
                        <div class="tabbable">
                            <ul class="nav nav-tabs nav-tab pull-left">
                                <li class="active" id="tabtitle">
                                    <a data-toggle="tab" href="#" role="tab" onclick="TabChange('TA',0);">@objMessageKey.Title</a>
                                </li>


                                @if (ViewBag.PartialTabList != null)
                                {
                                    int?[] alternateCode = ViewBag.PartialTabList;
                                    foreach (var item in alternateCode)
                                    {
                                        string tabNameAlter = "tabAlternate" + item.ToString();
                                        string config_Name = new Alternate_Config_Service(objLoginEntity.ConnectionStringName).SearchFor(x => x.Alternate_Config_Code == item).Select(x => x.Alternate_Name).FirstOrDefault();
                                        <li class="" id="@tabNameAlter">
                                            <a data-toggle="tab" href="#" id="tab12" role="tab" onclick="TabChange('AL',@item);">@config_Name</a>
                                        </li>
                                    }
                                }
                            </ul>
                            <div class="tab-content clearfix table-wrapper scale_table_container" dir="@objMessageKey.LayoutDirection">
                                <div class="tab-pane active" id="tabGeneral">
                                    <div class="scale_table_block">
                                        <table class="table_brif table">
                                            <tbody>
                                                <tr>
                                                    <td class="intro_pic">
                                                        <div>
                                                            @if (Model.Title_Image != null)
                                                            {<img src="@Url.Content(ConfigurationManager.AppSettings["TitleImagePath"] + @Model.Title_Image)" alt="Image" />}
                                                            else
                                                            {
                                                                if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Music)
                                                                { <a href="javascript:void(0)"><img src="~/Images/musicIcon.png" alt="Image" /></a> }
                                                                else if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Content)
                                                                {<a href="javascript:void(0)"><img src="~/Images/program.png" alt="Image" /></a> }
                                                                else if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Format_Program)
                                                                {<a href="javascript:void(0)"><img src="~/Images/formatShow.png" alt="Image" /></a> }
                                                                else if (Model.Deal_Type_Code == GlobalParams.Deal_Type_Event)
                                                                {<a href="javascript:void(0)"><img src="~/Images/Event.png" alt="Image" /></a> }
                                                                else
                                                                {<a href="javascript:void(0)"><img src="~/Images/movieIcon.png" alt="Image" /></a>}
                                                            }
                                                        </div>
                                                    </td>
                                                    <td class="intro">
                                                        <table class="four_column table">
                                                            <tr>
                                                                <td>@objMessageKey.TitleType</td>
                                                                <td>
                                                                    @Model.Deal_Type.Deal_Type_Name
                                                                </td>
                                                                <td>
                                                                    @objMessageKey.Program
                                                                </td>
                                                                <td>
                                                                    @{
                                                                        string Program_Name = objMessageKey.Noprogram;
                                                                        if (@Model.Program_Code > 0 && @Model.Program_Code != null && @Model.Program_Code.ToString() != "")
                                                                        {
                                                                            Program_Name = objP.GetById(Model.Program_Code ?? 0).Program_Name;
                                                                        }
                                                                    }
                                                                    @Html.Label("ProgramName", Program_Name)
                                                                </td>

                                                            </tr>
                                                            <tr>
                                                                <td>@objMessageKey.Title</td>
                                                                <td>
                                                                    @Model.Title_Name
                                                                </td>
                                                                <td>@objMessageKey.OriginalTitle</td>
                                                                @{
                                                                    string originaltitle = objMessageKey.NA;
                                                                    if (@Model.Original_Title != null && @Model.Original_Title != "")
                                                                    {
                                                                        originaltitle = Model.Original_Title;
                                                                    }
                                                                }
                                                                <td>
                                                                    @originaltitle
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>@objMessageKey.DurationInMin &#x200E;</td>
                                                                @{
                                                                    string durationInMin = objMessageKey.NA;
                                                                    if (@Model.Duration_In_Min != null && @Model.Duration_In_Min.ToString() != "")
                                                                    {
                                                                        durationInMin = Model.Duration_In_Min.ToString();
                                                                    }
                                                                }
                                                                <td>
                                                                    @durationInMin
                                                                </td>
                                                                <td>@objMessageKey.YearOfRelease</td>
                                                                @{
                                                                    string YOR = objMessageKey.NA;
                                                                    if (@Model.Year_Of_Production != null && @Model.Year_Of_Production.ToString() != "")
                                                                    {
                                                                        YOR = Model.Year_Of_Production.ToString();
                                                                    }
                                                                }
                                                                <td>
                                                                    @YOR
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>@objMessageKey.TitleLanguage</td>
                                                                <td>
                                                                    @{
                                                                        string Language_Name = "";
                                                                        if (@Model.Title_Language_Code > 0)
                                                                        {
                                                                            Language_Name = objLS.GetById(Model.Title_Language_Code ?? 0).Language_Name;
                                                                        }
                                                                    }
                                                                    @Html.Label(@objMessageKey.TitleLanguage, Language_Name)
                                                                </td>
                                                                <td>@objMessageKey.OriginalLanguage</td>
                                                                <td>
                                                                    @{
                                                                        string Original_language = objMessageKey.NA;
                                                                        if (@Model.Original_Language_Code > 0 && @Model.Original_Language_Code != null && @Model.Original_Language_Code.ToString() != "")
                                                                        {
                                                                            Original_language = objLS.GetById(Model.Original_Language_Code ?? 0).Language_Name;
                                                                        }
                                                                    }
                                                                    @Html.Label("Original_language", Original_language)
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>@objMessageKey.ProducerName</td>
                                                                @{
                                                                    string producername = objMessageKey.NA;
                                                                    if (@ViewBag.ProduceList != null && @ViewBag.ProduceList != "")
                                                                    {
                                                                        producername = @ViewBag.ProduceList;
                                                                    }
                                                                }
                                                                <td class="expandable">
                                                                    @producername
                                                                </td>
                                                                <td>@objMessageKey.DirectorName</td>
                                                                @{
                                                                    string directorname = objMessageKey.Nodirector;
                                                                    if (@ViewBag.DirectorList != null && @ViewBag.DirectorList != "")
                                                                    {
                                                                        directorname = @ViewBag.DirectorList;
                                                                    }
                                                                }
                                                                <td class="expandable">
                                                                    @directorname
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td>@objMessageKey.CountryOfOrigin</td>
                                                                <td class="expandable">
                                                                    @ViewBag.CountryList
                                                                </td>
                                                                <td>@objMessageKey.TitleGenres</td>
                                                                @{
                                                                    string genresname = objMessageKey.Nogenres;
                                                                    if (@ViewBag.GenresList != null && @ViewBag.GenresList != "")
                                                                    {
                                                                        genresname = @ViewBag.GenresList;
                                                                    }
                                                                }
                                                                <td class="expandable">
                                                                    @genresname
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                @if (Model.Deal_Type_Code == GlobalParams.CodeForEmbeddedMusic)
                                                                {
                                                                    <td>@objMessageKey.MusicLabel</td>
                                                                    <td>@ViewBag.MusicLabelList</td>
                                                                }
                                                            </tr>
                                                            <tr>
                                                                <td>@objMessageKey.KeyStarCast</td>
                                                                @{
                                                                    string talent = objMessageKey.Notalent;
                                                                    if (@ViewBag.StarCastList != null && @ViewBag.StarCastList != "")
                                                                    {
                                                                        talent = @ViewBag.StarCastList;
                                                                    }
                                                                }
                                                                <td colspan="1" class="expandable">
                                                                    @talent
                                                                </td>
                                                                @if (ViewBag.IsCalculatePublicDomain == "Y")
                                                                {
                                                                    <td>
                                                                        Public Domain
                                                                    </td>
                                                                    <td><div id="PDomain"></div></td>
                                                                }
                                                            </tr>
                                                            <tr>
                                                                <td>@objMessageKey.Synopsis</td>
                                                                @{
                                                                    string synopsis = objMessageKey.NA;
                                                                    if (@Model.Synopsis != null && @Model.Synopsis != "")
                                                                    {
                                                                        synopsis = Model.Synopsis;
                                                                    }
                                                                }
                                                                <td class="expandable" id="tdsynopsis">
                                                                    @synopsis
                                                                </td>
                                                                <td></td>
                                                                <td></td>

                                                            </tr>
                                                        </table>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="scale_table_block padding">
                                        <div class="divgvAdditionalField" style="text-align-last:@(textalignlast);">
                                        </div>
                                    </div>

                                    @*<div class="divAdditionalField">
                                        </div>*@
                                    <br />
                                    @if (ViewBag.Mode == "V")
                                    {
                                        <div class="paging_area clearfix" id="div_Paging">
                                            <span class="pull-left" id="lblTotal_Records_Count">@objMessageKey.TotalRecords:  </span>
                                            <div class="pagination" id="Pagination"></div>
                                            <span class="pull-right">
                                                @objMessageKey.PageSize:
                                                <input type="text" class="smallTextBox" value="10" id="txtPageSize" onchange="txtPageSize_OnChange();" maxlength="3" />
                                            </span>
                                        </div>

                                        <div id="dv_Deal_List" class="scale_table_block"></div>
                                    }
                                    else if (ViewBag.Mode == "R")
                                    {
                                        @Html.Hidden("hdnRecordLockingCode", ViewBag.RecordLockingCode as string, new { @id = "hdnRecordLockingCode" });
                                        <div class="divRelease">
                                            <input type="button" id="btnAddRelease" value="@objMessageKey.Add" class="btn btn-primary" />
                                        </div>
                                        <div class="paging_area clearfix">
                                            <span class="pull-left">@objMessageKey.TotalRecords: </span>
                                            <span class="pull-left" id="lblTitleReleaseCount"></span>
                                            <input type="hidden" id="hdnPageNo" name="hdnPageNo" value="1" />
                                            <input type="hidden" id="hdnPagePerBatch" name="hdnPagePerBatch" value="5" />
                                            <input type="hidden" id="hdnRecordCount" name="hdnRecordCount" value="0" />

                                            <div id="Pagination" class="pagination">
                                            </div>
                                            @*<span class="pull-right">
                                                    Page Size:
                                                    <input type="text" id="txtPageSize" name="txtPageSize" class="smallTextBox pagingSize" value="10" onchange="txtPageSize_OnChange()">
                                                </span>*@
                                        </div>
                                        <div class="deal clearfix" id="title_Release_List">
                                        </div>
                                    }
                                    <div class="bottom_action">
                                        <ul class="form_link_nav clearfix">
                                            <li class="poptalent">
                                                <input type="button" class="btn btn-primary" value="@objMessageKey.Cancel" onclick="return btnCancel();" />
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                                <div id="divAlternateLanguage"></div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

}



<div aria-labelledby="myModalLabel" class="form_wrapper modal fade in" id="popAddTalent" role="dialog" tabindex="-1" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content clearfix">
            <form class="form" id="talent_popup">
                <div class="form_wrapper">
                    <div class="form_fields" style="text-align-last:@textalignlast">
                        <div class="modal_block modal_header">
                            <a class="close" data-dismiss="modal" href="#">
                                <span>×</span>
                                <span class="sr-only">Close</span>
                            </a>
                            <h2>@objMessageKey.AddTalent</h2>
                        </div>
                        <div class="modal_block">
                            <ul class="form_fields_wrapper add_title_popup">
                                <li>
                                    <label><b>@objMessageKey.Talent</b></label>
                                    <input class="form_input" id="talent_name" name="title" type="text" value="" maxlength="100" ondrop="return false;" />
                                </li>
                                <li>
                                    <label><b>@objMessageKey.Role</b></label><br />
                                    <div style="overflow-y: auto; height: 165px">
                                        @{
                                            int Count = 0;
                                            foreach (SelectListItem attr in ViewBag.RolesList)
                                            {
                                                Count += 1;
                                                <label class="inline-checkbox">
                                                    <input type='checkbox' class="@attr.Text.ToString().Replace(" ", "")" name='chkDays' id='@Count' +"_chkrole" value='@attr.Value' style='cursor: hand;' />

                                                    @attr.Text
                                                </label>
                                                <br />
                                            }
                                        }
                                        @Html.Hidden("hdnRoles")
                                    </div>
                                </li>
                                <li>
                                    <label><b>Gender</b></label>
                                    <label class="inline-radio">
                                        <input type="radio" name="sex" value="0" checked>@objMessageKey.Male &nbsp;
                                    </label>
                                    <label class="inline-radio">
                                        <input type="radio" name="sex" value="1">@objMessageKey.Female
                                    </label>
                                    <label class="inline-radio">
                                        <input type="radio" name="sex" value="2">@objMessageKey.NA
                                    </label>
                                </li>
                            </ul>
                        </div>
                        <div class="modal_block_full">
                            <div class="form_links">
                                <ul class="modal_block clearfix">
                                    <li>
                                        <a class="btn btn-primary" href="#" onclick="ValidateSave()">@objMessageKey.Save</a>
                                    </li>
                                    <li>
                                        <a data-dismiss="modal" class="btn btn-primary" href="#">@objMessageKey.Cancel</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@if (ViewBag.Mode == "R")
{
    <div aria-labelledby="myModalLabel" class="form_wrapper modal fade in" id="popAddTitleRelease" role="dialog" tabindex="-1" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content clearfix">
                <form class="form" id="talent_popup">
                    <div class="form_wrapper">
                        <div class="form_fields" dir="@objMessageKey.LayoutDirection">
                            <div class="modal_block modal_header">
                                <a class="close" data-dismiss="modal" href="#">
                                    <span>×</span>
                                    <span class="sr-only">Close</span>
                                </a>
                                <h2>@objMessageKey.AddTitleRelease</h2>
                            </div>
                            <div class="modal_block">
                                <ul class="form_fields_wrapper add_title_popup">
                                    <li>
                                        <label id="lblReleaseType"><b>@objMessageKey.ReleaseType</b>&nbsp;</label>

                                        @*<input class="form_input" id="talent_name" name="title" type="text" value="" maxlength="100" ondrop="return false;" />*@
                                        <input type="hidden" id="hdnTVCodes" />
                                        <input type="hidden" id="hdnSelectedPlatforms" />
                                        <label class="inline-radio">
                                            <input type="radio" name="Rel_Type" id="rdWorld" value="W" checked>@objMessageKey.World &nbsp;
                                        </label>
                                        <label>
                                            <input type="radio" name="Rel_Type" id="rdTerritory" value="T">@objMessageKey.Territory
                                        </label>
                                        <label>
                                            <input type="radio" name="Rel_Type" id="rdCountry" value="C">@objMessageKey.Country
                                        </label>
                                    </li>
                                    <li>
                                        @Html.DropDownList("Territory_Code", ViewBag.TerritoryList_TitleRel as SelectList, new { id = "ddlTerritory_TitleRel", @class = "form_input chosen-select", multiple = "multiple" })
                                        @Html.DropDownList("Country_Code", ViewBag.CountryList_TitleRel as SelectList, new { id = "ddlCountry_TitleRel", @class = "form_input chosen-select", multiple = "multiple" })
                                    </li>
                                    <li>
                                        <label><b>@objMessageKey.ReleaseDate</b></label>
                                        <input class="form_input isDatepicker" id="Rel_Date" name="Rel_Date" type="text" ondrop="return false;" />
                                    </li>
                                    <li>
                                        <lable><b>@objMessageKey.ReleaseOnPlatform</b></lable>
                                        <div id="tree" class="treeClass">
                                        </div>
                                    </li>
                                </ul>
                            </div>
                            <div class="modal_block_full">
                                <div class="form_links">
                                    <ul class="modal_block clearfix">
                                        <li class="poptalent">
                                            <a class="btn btn-primary" href="#" onclick="ValidateSaveTitleRelease()">@objMessageKey.Save</a>
                                        </li>
                                        <li class="poptalent">
                                            <a data-dismiss="modal" class="btn btn-primary" href="#" onclick="clearObj()">@objMessageKey.Cancel</a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
}

