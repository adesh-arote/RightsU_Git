@model List<RightsU_Entities.USP_List_Status_History_Result>
@{
    RightsU_Entities.Deal_Schema objSchema = new RightsU_Entities.Deal_Schema();
    if (Session[RightsU_Entities.RightsU_Session.Syn_DEAL_SCHEMA] != null)
    {
        objSchema = (RightsU_Entities.Deal_Schema)Session[RightsU_Entities.RightsU_Session.Syn_DEAL_SCHEMA];
    }
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}

<script type="text/javascript">
    $(document).ready(function () {
        //$("#ancFileName").attr('href', 'Help/index.html?IntCode=@Session["FileName"]');
       // $("#ancFileName").attr('href', 'Help/Masters/Layout.html?syn_StatusHistory');
        showLoading();
        if (@ViewBag.Record_Locking_Code > 0)
        {
            var fullUrl = '@Url.Action("Refresh_Lock", "Global", null, Request.Url.Scheme)'
            Call_RefreshRecordReleaseTime(@ViewBag.Record_Locking_Code,fullUrl);
        }
        var dealmode = '@objSchema.Mode';
        if (dealmode == 'APRV') {
            if (@ViewBag.Record_Locking_Code > 0)
            {
                var fullUrl = '@Url.Action("Refresh_Lock", "Global", null, Request.Url.Scheme)'
                Call_RefreshRecordReleaseTime(@ViewBag.Record_Locking_Code,fullUrl);
            }
        }
        initializeExpander();
        hideLoading();
        initializeTooltip();
    });

    function ValidateSave() {
        var Isvalid = true;
        showLoading();
        // Code for Maintaining approval remarks in session
        var Mode = '@objSchema.Mode';
        if (Mode == 'APRV') {
            var approvalremarks = $('#approvalremarks').val();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SetSynApprovalRemarks", "Global")',
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                async: true,
                data: JSON.stringify({
                    approvalremarks: $('#approvalremarks').val()
                }),
                success: function (result) {
                    Isvalid = true;
                },
                error: function (result) {
                    Isvalid = false;
                }
            });
        }
        else
            Isvalid = true;
        //Code end for approval
        if(Isvalid)
        {
            hideLoading();
            var tabName = $('#hdnTabName').val()
            BindPartialTabs(tabName);
        }
        hideLoading();
        return Isvalid;

    }
</script>
<div class="grid_area">
    <div class="navigation_tabs">
        <div class="tabbable">
            <div class="tab-content clearfix table-wrapper scale_table_container syn">
                <div class="tab-pane active" id="tabStatHist">
                    <div class="scale_table_block">
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="width:10%; text-align: center;">@objMessageKey.Version</th>
                                    <th style="width: 20%; text-align: center;">@objMessageKey.Status</th>
                                    <th style="width: 20%; text-align: center;">@objMessageKey.Date</th>
                                    <th style="width: 25%; text-align: center;">@objMessageKey.By</th>
                                    <th style="width: 25%; text-align: center;">@objMessageKey.Remarks</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            @{
                                                if (item.Version != "0001")
                                                {
                                                    if (Convert.ToInt32(item.Version) <= 9)
                                                    {
                                                        item.Version = "000" + item.Version;
                                                    }
                                                    else if (Convert.ToInt32(item.Version) <= 99)
                                                    {
                                                        item.Version = "00" + item.Version;
                                                    }
                                                }
                                            }
                                            <td>@item.Version</td>
                                            <td>@Html.DisplayFor(modalitem => item.Status)</td>
                                            @{
                                                System.Globalization.CultureInfo cultureinfo = new System.Globalization.CultureInfo("ar-AE");
                                                string dt_Rtl = Convert.ToDateTime(item.Date).ToString("dd-MMM-yyyy", cultureinfo);
                                                string dt = Convert.ToDateTime(item.Date).ToString("dd-MMM-yyyy");
                                            }
                                            @if (objMessageKey.LayoutDirection == "RTL")
                                            {
                                                <td>@dt_Rtl</td>
                                            }
                                            else
                                            {
                                                <td>@dt</td>
                                            }

                                            <td>@Html.DisplayFor(modalitem => item.By)&#x200E;</td>
                                            <td>
                                                <div class="expandable">
                                                    @item.Remarks
                                                    <a href="#"><span></span></a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                @if (objSchema.Mode == "APRV")
                {
                    @Html.Partial("_Syn_Approved_List")
                }
                else
                {
                    <div class="bottom_action">
                        <ul class="form_link_nav clearfix">
                            <li>
                                <input type="button" id="btnCancelDeal" title="@objMessageKey.Cancel" class="btn btn-primary" value="@objMessageKey.Cancel"
                                       onclick="location.href='@Url.Action("Cancel", "syn_Status_History")    '">
                            </li>
                        </ul>
                    </div>
                }
                <input type="hidden" id="hdnTabName" name="hdnTabName" />
            </div>
        </div>
    </div>
</div>
