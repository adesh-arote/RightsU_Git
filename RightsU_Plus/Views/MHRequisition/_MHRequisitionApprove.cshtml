@model RightsU_Entities.MHRequest
@using RightsU_BLL
@using UTOFrameWork.FrameworkClasses;
@{
    LoginEntity objLoginEntity = new LoginEntity();
    if (Session["objLoginEntity"] != null)
    {
        objLoginEntity = (LoginEntity)Session["objLoginEntity"];
    }
}
<script>
    var URL_BindMHRequestDetails_List = '@Url.Action("BindMHRequestDetails_List", "MHRequisition")';
    var URL_SearchMHRequestDetails = '@Url.Action("SearchMHRequestDetails", "MHRequisition")';
    var URL_SaveMHRequestDetails_List = '@Url.Action("SaveMHRequestDetails_List", "MHRequisition")';
    var URL_FinalMovieMusicApprove = '@Url.Action("FinalMovieMusicApprove", "MHRequisition")';
    var URL_finalConsApprove = '@Url.Action("finalConsApprove", "MHRequisition")';
    
    $(document).ready(function () {
        debugger;

        $('.expand_Remark').expander({
            slicePoint: 200,
            expandPrefix: '',
            expandText: '...read more',
            collapseTimer: 0,
            userCollapseText: '<span>[^]</span>'
        });
        initializeExpander();
        initializeExpander();
        addNumeric();
        SearchMHRequestDetails("");
        var restrictCharLength = $(".restrictChar").val().length;
        var restrictCharLength1 = $(".restrictChar1").val().length;
        $(".charNum").html(restrictCharLength + "/4000");
        $(".charNum1").html(restrictCharLength1 + "/4000");
        debugger
        if ($('#hdnTabName').val() == 'CM')
        {
            $('#liSearchShow').show();
        }
        else
        {
            $('#liSearchShow').hide();
        }
    });
    //$(document).on('keyup', 'textarea', function () {
    //    debugger;
    //    //var count = $(this).val().length;
    //    //$(".charNum").html(count + "/4000");
    //    var Val = $(this);
    //    var max = 4000;
    //    var len = $(this).val().length;
       
    //    if (len >= max)
    //        Val.val(Val.val().substring(0, max));
       
    //    $('.charNum').text(Val.val().length.toString() + '/' + max.toString());
       
    //});

    jQuery('#txtSpecialInst').on('input', function () {
        debugger;
        var Val = $(this);
        var max = 4000;
        var len = $(this).val().length;

        if (len >= max)
            Val.val(Val.val().substring(0, max));
        $('.charNum').text(Val.val().length.toString() + '/' + max.toString());
    });

    jQuery('#txtInternalRmk').on('input', function () {
        debugger;
        var Val = $(this);
        var max = 4000;
        var len = $(this).val().length;

        if (len >= max)
            Val.val(Val.val().substring(0, max));
        $('.charNum1').text(Val.val().length.toString() + '/' + max.toString());
    });


    function addNumeric() {
        $(".pagingSize").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 99,
            min: 1
        });
    }
    function SetPaging() {
 
        IsCall = 'N';
        var pageNo = parseInt($('#hdnPageNo').val());
        var recordCount = parseInt($('#hdnRecordCount').val());
        var pagePerBatch = parseInt($('#hdnPagePerBatch').val());
        var recordPerPage = parseInt($('#txtPageSize').val());

        var cnt = pageNo * recordPerPage;
        if (cnt >= recordCount) {
            var v1 = parseInt(recordCount / recordPerPage);
            if ((v1 * recordPerPage) == recordCount)
                pageNo = v1;
            else
                pageNo = v1 + 1;
        }

        if (pageNo == 0)
            pageNo = 1;

        var index = pageNo - 1;
        $('#hdnPageNo').val(pageNo);

        var opt = null;
        opt = { callback: pageselectCallback };
        opt["items_per_page"] = recordPerPage;
        opt["num_display_entries"] = pagePerBatch;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = index;
        $("#Pagination").pagination(recordCount, opt);
    }
    function pageselectCallback(page_index, jq) {
        debugger;

        if (!ValidatePageSize())
            return false;

        var pageNo = page_index + 1
        $('#hdnPageNo').val(pageNo);
        if (IsCall == 'Y') {
            if ($('#hdnMHRequestTypeCode').val() == "1") {
                SaveMHRequestDetails_List();
            } else {
                BindMHRequestDetails_List(0, "")
            }

        }
        else
            IsCall = 'Y';

    }
    function txtPageSize_OnChange() {
        debugger;
        $("[required='required']").removeAttr("required");
        $('.required').removeClass('required');

        if (!ValidatePageSize())
            return false;

        if ($('#hdnMHRequestTypeCode').val() == "1") {
            SaveMHRequestDetails_List();
        } else {
            BindMHRequestDetails_List(0, "")
        }
        //BindMHRequestDetails_List(0, "")
        SetPaging();
    }
    function ValidatePageSize() {
        var recordPerPage = $('#txtPageSize').val()
        if ($.trim(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);
            if (pageSize > 0)
                return true;
        }
        $('#txtPageSize').attr('required', true)
        return false
    }
    function btnSearch_OnClick() {

        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");

        if (!ValidatePageSize())
            return false;

        $('#hdnPageNo').val(1);
        var searchText = $.trim($('#searchCommon').val());

        if (searchText == '') {
            $('#searchCommon').val('')
            $('#searchCommon').attr('required', true)
            return false;
        }
        SearchMHRequestDetails(searchText);
    }
    function btnShowAll_OnClick() {
        debugger;
        if (!ValidatePageSize())
            return false;

        $('#hdnPageNo').val(1);
        $('#searchCommon').attr('required', false)
        $('#searchCommon').val('');
        SearchMHRequestDetails("");
    }
    function BindMHRequestDetails_List(MHRequestDetailsCode, commandName) {
        debugger;
        var pageNo = $('#hdnPageNo').val();
        var recordPerPage = $('#txtPageSize').val();
        var MHRequestTypeCode = $('#hdnMHRequestTypeCode').val();
        var Status = $('#hdnStatus').val();

        $.ajax({
            type: "POST",
            url: URL_BindMHRequestDetails_List,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                pageNo: pageNo,
                recordPerPage: recordPerPage,
                MHRequestDetailsCode: MHRequestDetailsCode,
                commandName: commandName,
                MHRequestTypeCode: MHRequestTypeCode,
                Status: Status
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#divMHRequestDetails_List').empty();
                    $('#divMHRequestDetails_List').html(result);
                    initializeExpander();
                    initializeTooltip();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }
    function SearchMHRequestDetails(searchText) {
        debugger;
        $("#searchCommon").val(searchText);
        showLoading();
        $.ajax({
            type: "POST",
            url: URL_SearchMHRequestDetails,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                searchText: searchText,
                tabName: $('#hdnTabName').val()
            }),
            async: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#hdnPageNo').text(1);
                    $('#lblRecordCount').text(result.Record_Count);
                    $("#hdnRecordCount").val(result.Record_Count);
                    SetPaging()
                    BindMHRequestDetails_List(0, "");
                    hideLoading();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
                hideLoading();
            }
        });
    }
    function SaveMHRequestDetails_List() {
        debugger
        var returnVal =  true;
        $('.required').removeClass('required');
        var i = $("#tblConsume tr:nth-child(1) td:first").text().trim();
        var lstCML = new Array();
        var tblConsume = $("#tblConsume tr:not(:has(th))");

        tblConsume.each(function () {
            debugger
            var _MHRDCode = 0, _remarks = "", _isApprove ;
            _MHRDCode = parseInt($("#hdnMHRD_" + i).val());
            _remarks = $('#MHRDRemarks_' + i).val();
            _isApprove = $('#chkCreateNewOther_' + i).prop("checked");

            lstCML.push({
                MHRDCode: _MHRDCode, Remarks: _remarks, IsApprove: _isApprove
            });
            i++;
        });

        if (lstCML.length > 0) //recordEffectedCount > 0 ||  length > 0 ||
        {
            $.ajax({
                type: "POST",
                url: URL_SaveMHRequestDetails_List,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    lstCML: lstCML
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        if (result == "S")
                            BindMHRequestDetails_List(0, "")
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
        return returnVal;
    }

    lstRequestDetails = [{ MHRequestDetailCode: '', MusicTitleCode: '', TitleCode: '', Remarks: '', Status: ''}];


    function FinalApprove(Is_Approve) {
        debugger;
        //var atLeastOneIsChecked = $('input[name="chkType"]:checked');
        var atLeastOneIsChecked = $('input[name="chkType"]:not(:disabled):checked')
        var NotChecked = $('input[name="chkType"]:not(:checked)');
        

        if (atLeastOneIsChecked.length == 0) {
                showAlert("E", "Please select atleast one record");
                return false;
        }
        else
        {
            if (NotChecked.length > 0 && atLeastOneIsChecked.length > 0) {
                if (Is_Approve == 'A')
                    Is_Approve = 'PA';
                else
                    Is_Approve = 'PR';
            }
            for (var i = 0; i < atLeastOneIsChecked.length; i++) {
                var id = atLeastOneIsChecked[i].id;
                var MHRequestDetailCode = id.replace('chk_', '');
                var MusicTitleCode = $('#' + id.replace('chk_', 'hdnMusicTitleCode_')).val();
                var TitleCode = $('#' + id.replace('chk_', 'hdnMusicTitleCode_')).val();
                var txtRemark = ($('#' + id.replace('chk_', 'txtRemark_')).val()).trim();
                var IsApprove = $('#' + id.replace('chk_', 'hdnIsApprove_')).val();

                var CreateMap = $('#' + id.replace('chk_', 'hdnCreateMap_')).val();
                if ((CreateMap == " " || CreateMap == "") && (MusicTitleCode != '' || TitleCode != '')) {
                    CreateMap = 'M';
                }
                if (Is_Approve == 'PR' || Is_Approve == 'R') {
                    CreateMap = '';
                }
                debugger;
                if (($('#' + id.replace('chk_', 'hdnMusicTitleCode_')).val() == '0' || $('#' + id.replace('chk_', 'hdnMusicTitleCode_')).val() == '') && Is_Approve != 'PR' && Is_Approve != 'R') {
                    if (!$('#' + id.replace('chk_', 'MapToExsisting_')).prop('disabled')) {
                        $('#' + id.replace('chk_', 'MapToExsisting_')).addClass("required");
                        return false;
                    }
                }
                else {
                    $('#' + id.replace('chk_', 'MapToExsisting_')).removeClass("required");
                    lstRequestDetails.push({
                        MHRequestDetailCode: MHRequestDetailCode,
                        MusicTitleCode: MusicTitleCode,
                        MusicAlbumCode: TitleCode,
                        Remarks: txtRemark,
                        Status: IsApprove,
                        CreateMap: CreateMap
                    })
                }
            }
            lstRequestDetails.splice(0, 1);
            var SpecialInst = $('#txtSpecialInst').val();
            var InternalRmk = $('#txtInternalRmk').val();
            $.ajax({
                type: "POST",
                url: URL_FinalMovieMusicApprove,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    lstRequestDetails: lstRequestDetails,
                    SpecialInstruction: SpecialInst,
                    InternalRmk: InternalRmk,
                    MHRequestCode: $('#hdnMHRequestCode').val(),
                    IsApprove: Is_Approve,
                    Type: $('#hdnType').val()
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        debugger
                        BindPartialView("LIST", 0);
                        showAlert('S', result.Message);
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
    }

    function finalConsApprove(key) {
        debugger;

        var atLeastOneIsChecked = $('input[name="chkbox"]:not(:disabled):checked')
        if (atLeastOneIsChecked.length == 0) {
            showAlert("E", "Please select atleast one record");
            return false;
        }
        else {


            SaveMHRequestDetails_List();
            var SpecialInst = $('#txtSpecialInst').val();
            var InternalRmk = $('#txtInternalRmk').val();
            var MHRequestCode = $('#hdnMHRequestCode').val();
            $.ajax({
                type: "POST",
                url: URL_finalConsApprove,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    SpecialInst: SpecialInst,
                    InternalRmk: InternalRmk,
                    MHRequestCode: MHRequestCode,
                    key: key
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        if (result.Status == "S") {
                            showAlert("S", result.Message);
                            BindPartialView("LIST", 0);
                        }
                        else if (result.Status == "E") {
                            showAlert("E", result.Message);
                        }
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
    }

    function checkAll() {
        var IsCheck = $('#chkAll').prop("checked");
        $('.checkboxAll').prop('checked', IsCheck);
        if ($('#chkAll').prop("checked")) {
            var x = document.getElementsByClassName("checkboxAll"); x;
            var i;
            for (i = 0; i < x.length; i++) {
                selectCurrent(x[i].id);
            }
        }
    }
    function selectCurrent(chkBox) {
        debugger;
        if ($('.checkboxAll:checked').length == $('.checkboxAll').length) {
            $("#chkAll").prop("indeterminate", false);
            $('#chkAll').prop('checked', true);
        } else {
            if ($('.checkboxAll:checked').length > 0) {
                $("#chkAll").prop("indeterminate", true);
            }
            else { $("#chkAll").prop("indeterminate", false); }
            $('#chkAll').prop('checked', false);
        }
        var IsCheck = $(this).prop('checked');
    };
    //function selectCurrent(chkBox) {
    //    debugger;
    //    var chkBoxId = chkBox.id;
    //    //if ($(chkBoxId).prop("checked")) {
    //    //    $(txtDealTitles).removeAttr("disabled");
    //    //    $(txtEpisodeNo).removeAttr("disabled");
    //    //}
    //    //else {
    //    //    $(chkBoxId).prop('checked', false);
    //    //    $(txtDealTitles).val('');
    //    //    $(txtDealTitles).attr("disabled", "disabled");
    //    //    $(txtEpisodeNo).attr("disabled", "disabled");
    //    //}
    //}
    function countChar(val) {
        var max = 500;
        var len = val.val().length;

        if (len >= max)
            val.val(val.val().substring(0, max));

        $('.charNum').text(val.val().length.toString() + '/' + max.toString());
        $('.charNum1').text(val.val().length.toString() + '/' + max.toString());
    }
    function redirectToDashBoard() {
        debugger;
        var URL = '@Url.Action("Index", "MHDashBoard")/Index?modulecode=' + @GlobalParams.ModuleCodeForDashboard;
        window.location.href = URL;
    }
    function AddMusicTitleForMovie(MHRequestDetailsCode) {
        debugger;
        var MovieAlbumCode = $("#_MovieAlbumCode_" + MHRequestDetailsCode).val();
        var Music_Album_Name = $("#_Music_Album_Name_" + MHRequestDetailsCode).val();

        showLoading();
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddMusicTitleForMovie", "MHRequisition")',
            traditional: true,
            enctype: 'multipart/form-data',
            async: false,
            contentType: "application/json; charset=utf-8",
            data: "",
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    hideLoading();
                    $("#popAddTitle").html(result);
                    $("#popAddTitle").modal();
                    initializeChosen();
                    $('#txtmusicAlbum').text(Music_Album_Name);
                    $('#hdnMovieAlbumCode').val(MovieAlbumCode);
                }
            },
            error: function (result) { }
        });
    }


</script>
<style>
    .divRemarks {
        display: inline-block;
        font-weight: bold;
        border-bottom: 1px dotted #777;
        padding: 5px;
        background-color: #eee;
        width: 500px;
    }
    .vl {
        border-left: 2px solid;
        height: 5px;
        width: 40px;
    }
</style>
<div class="top_area">
    <div class="title_block dotted_border clearfix">
        <h2 class="pull-left">
            @if (Model.MHRequestTypeCode == 1)
            {
                if (Model.EpisodeFrom != null && Model.EpisodeTo != null)
                {
                    if (Model.EpisodeFrom < Model.EpisodeTo)
                    {
                        @(Model.Title.Title_Name + " (Episode#: " + Model.EpisodeFrom + " - " + Model.EpisodeTo + ") (" + Model.Channel.Channel_Name + ")")
                    }
                    else
                    {
                        @(Model.Title.Title_Name + " (Episode#: " + Model.EpisodeFrom + ") (" + Model.Channel.Channel_Name + ")")
                    }
                }
                else if (Model.EpisodeFrom != null)
                {
                    @(Model.Title.Title_Name + " (Episode#: " + Model.EpisodeFrom + ") (" + Model.Channel.Channel_Name + ")")
                }
                else
                {
                    @Model.Title.Title_Name
                }
            }
            else
            {
                <span>Approve @Model.MHRequestType.RequestTypeName</span>
            }
        </h2>
        <div class="right_nav pull-right">
            <h4 style="font-family:Oswald,Segoe">
                @if (Model.TelecastFrom != null && Model.TelecastFrom != null)
                {
                    if (Model.TelecastFrom < Model.TelecastTo)
                    {
                        @("Telecast " + @Convert.ToDateTime(@Model.TelecastFrom).ToString("dd/MM/yyyy") + " - " + @Convert.ToDateTime(@Model.TelecastTo).ToString("dd/MM/yyyy"))
                    }
                    else
                    {
                        @("Telecast On " + @Convert.ToDateTime(@Model.TelecastFrom).ToString("dd/MM/yyyy") )
                    }
                }
            </h4>
        </div>
    </div>
    <table class="table_brif table">
        <tbody>
            <tr>
                <td class="intro_pic">
                    <div class="movie_deal" title="">
                        <img alt="" src="~/Images/movieIcon.png" />
                        <span class="strip_song">strip</span>
                    </div>
                </td>
                <td class="intro">
                    <table class="six_column table">
                        <tbody>
                            <tr>
                                <td class="td_label">Request ID:</td>
                                <td>@Model.RequestID</td>
                                <td class="td_label">Requested By:</td>
                                <td>

                                    @if (Model.UsersCode != null)
                                    {
                                        string name = new User_Service(objLoginEntity.ConnectionStringName).SearchFor(x => x.Users_Code == Model.UsersCode)
                                             .Select(x => x.First_Name).FirstOrDefault();
                                        @name
                                    }
                                </td>
                                <td class="td_label">Requested Date:</td>
                                <td>@Model.RequestedDate</td>
                            </tr>
                            <tr>
                                <td class="td_label">Production House:</td>
                                <td>@(Model.VendorCode == null ? "NA" : Model.Vendor.Vendor_Name)</td>
                                <td class="td_label">Authorized By:</td>
                                <td>
                                    @if (Model.ApprovedBy != null)
                                    {
                                        string name = new User_Service(objLoginEntity.ConnectionStringName).SearchFor(x => x.Users_Code == Model.ApprovedBy)
                                                                    .Select(x => x.First_Name).FirstOrDefault();
                                        @name
                                    }
                                </td>
                                <td class="td_label">Authorized Date:</td>
                                <td>@Model.ApprovedOn</td>
                            </tr>
                        </tbody>
                    </table>
                </td>
                <td class="intro_approved">
                    @if (Model.MHRequestStatu.RequestStatusName == "Pending" || Model.MHRequestStatu.RequestStatusName == "Partially Approved")
                    {
                        <div class="stampBg pending" style="height:74px !important">
                            <h4 title="Workflow Status"> @Model.MHRequestStatu.RequestStatusName</h4>
                        </div>
                    }
                    else if (Model.MHRequestStatu.RequestStatusName == "Approved")
                    {
                        <div class="stampBg approved" style="height:74px !important">
                            <h4 title="Workflow Status"> @Model.MHRequestStatu.RequestStatusName</h4>
                        </div>
                    }
                    else if (Model.MHRequestStatu.RequestStatusName == "Rejected")
                    {
                        <div class="stampBg rejected" style="height:74px !important">
                            <h4 title="Workflow Status"> @Model.MHRequestStatu.RequestStatusName</h4>
                        </div>
                    }
                </td>

            </tr>

        </tbody>

    </table>
</div>


<div class="search_area" style="background-color:#eee">
    <table class="table">
        <tr>
            <td style="width:25%; vertical-align:middle;">
                <input type="text" name="srchCommon" id="searchCommon" class="search" style="width:100%" maxlength="100" />
            </td>
            <td>
                &nbsp;&nbsp;
                <input type="button" id="btnSearch" class="button" value="Search" onclick="btnSearch_OnClick()">&nbsp;
                <input type="button" id="btnShowAll" class="button" value="Show All" onclick="btnShowAll_OnClick()">
            </td>
        </tr>
    </table>
</div>


<div class="grid_area">
    <div style="border-bottom: 1px dotted #777; display:none;"></div>
    <div class="paging_area clearfix">
        <span class="pull-left">Total Records: </span>
        <span class="pull-left" id="lblRecordCount"></span>
        <input type="hidden" id="hdnPageNo" name="hdnPageNo" value="1" />
        <input type="hidden" id="hdnPagePerBatch" name="hdnPagePerBatch" value="5" />
        <input type="hidden" id="hdnRecordCount" name="hdnRecordCount" value="0" />
        <div id="Pagination" class="pagination">
        </div>
        <span class="pull-right">
            Page Size:
            <input type="text" id="txtPageSize" name="txtPageSize" class="smallTextBox pagingSize" value="10"
                   onchange="txtPageSize_OnChange()">
        </span>
    </div>
    <div class="tab-content clearfix table-wrapper scale_table_container">
        <div class="scale_table_block">
            <input type="hidden" id="hdnMHRequestCode" value="@Model.MHRequestCode" />
            <input type="hidden" id="hdnMHRequestTypeCode" value="@Model.MHRequestTypeCode" />
            <input type="hidden" id="hdnAction" name="hdnAction" value="" />

            <input type="hidden" id="hdnStatus" value="@ViewBag.key" />


            <div id="divMHRequestDetails_List" class="deal clearfix">
            </div>
        </div>
    </div>
</div>
<br />

<div class="remarks_area">
    <div class="divRemarks">Production House Remarks:</div>
    <div class="expand_Remark">@Model.Remarks </div>
    <br />
    @if (ViewBag.key == "VIEW" && Model.SpecialInstruction != "" && Model.SpecialInstruction != null)
    {
        
        
        <table>
            <tr>
                <td><div class="divRemarks">Special Instructions to Production House: </div></td>
                <td class="vl"></td>
                <td><div class="divRemarks">Viacom18 Remarks: </div></td>
            </tr>
          
            <tr>
                <td>
                    <div class="remarksDetails">
                        @if (ViewBag.key != "VIEW")
                        {
                            <textarea name="txtPaymentTerms" id="txtSpecialInst" class="textarea restrictChar">@Model.SpecialInstruction</textarea>
                        }
                        else
                        {
                            <div class="expand_Remark">
                                <span name="txtPaymentTerms" id="txtSpecialInst" class="textarea restrictChar">@Model.SpecialInstruction</span>
                            </div>
                        }
                    </div>
                </td>
                <td class="vl"></td>
                <td>
                    <div class="remarksDetails">
                        @if (ViewBag.key != "VIEW")
                        {
                            <textarea name="txtPaymentTerms" id="txtInternalRmk" class="textarea restrictChar1">@Model.InternalRemarks</textarea>
                        }
                        else
                        {
                            <div class="expand_Remark">
                                <span name="txtPaymentTerms" id="txtInternalRmk" class="textarea restrictChar1">@Model.InternalRemarks</span>
                             </div>
                        }
                       </div>
</td>
            </tr>
        </table>
    }
    else if (ViewBag.key != "VIEW")
    {
        <table>
            <tr>
                <td><div class="divRemarks" style="width:500px">Special Instructions to Production House:</div></td>
                <td class="vl"></td>
                <td><div class="divRemarks" style="width:500px">Viacom18 Remarks: </div></td>
            </tr>
            <tr>
                <td>
                    <div class="divBlockRemarks" style="width:500px;">
                        <span class="charNum"></span>
                        <span style="">characters left</span>
                    </div>
                    <br />
                </td>
                <td class="vl"></td>
                <td>
                    <div class="divBlockRemarks" style="width:500px;">
                        <span class="charNum1"></span>
                        <span style="">characters left</span>
                    </div>
                    <br />
                </td>
            </tr>
            <tr>
                <td>
                    <div class="remarksDetails" style="width:500px;">
                        @if (ViewBag.key != "VIEW")
                        {
                            <textarea name="txtPaymentTerms" id="txtSpecialInst" class="textarea restrictChar">@Model.SpecialInstruction</textarea>
                        }
                        else
                        {
                            <span name="txtPaymentTerms" id="txtSpecialInst" class="textarea restrictChar">@Model.SpecialInstruction</span>
                        }
                    </div>
                </td>
                <td class="vl"></td>
                <td>
                    <div class="remarksDetails" style="width:500px;">
                        @if (ViewBag.key != "VIEW")
                        {
                            <textarea name="txtPaymentTerms" id="txtInternalRmk" class="textarea restrictChar1">@Model.InternalRemarks</textarea>
                        }
                        else
                        {
                            <span name="txtPaymentTerms" id="txtInternalRmk" class="textarea restrictChar1">@Model.InternalRemarks</span>
                        }
                    </div>
                </td>
            </tr>
        </table>
    }
</div>



<br />
<div class="bottom_action">
    <ul class="form_link_nav clearfix">

        @if (ViewBag.key != "VIEW")
        {
            if (Model.MHRequestTypeCode == 1)
            {
                <li><a class="btn btn-primary" id="btnApprove" onclick="finalConsApprove('A')">Approve</a></li>
                <li><a class="btn btn-primary" id="btnReject" onclick="finalConsApprove('R')">Reject</a></li>
            }
            else
            {
                <li><a class="btn btn-primary" id="btnApprove" onclick="FinalApprove('A')">Approve</a></li>
                <li><a class="btn btn-primary" id="btnReject" onclick="FinalApprove('R')">Reject</a></li>
            }
        }
        @if (ViewBag.CallFor == "D")
        {
            <li><a class="btn btn-primary" onclick="redirectToDashBoard()">Back</a></li>
        }
        else
        {
            <li><a class="btn btn-primary" onclick="BindPartialView('LIST', 0,'@ViewBag.CallFor')">Back</a></li>
        }

    </ul>
</div>
<div aria-labelledby="myModalLabel" class="form_wrapper modal fade in small_popup" id="popAddTitle" role="dialog" tabindex="-1" aria-hidden="false">
</div>