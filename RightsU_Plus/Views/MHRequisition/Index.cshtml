@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string Message = Convert.ToString(Session["Message"]);
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<link href="~/CSS/sumoselect.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" rel="stylesheet" />
<script src="~/JS_Core/jquery.sumoselect.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>

<style>
    mark {
        padding: 0;
        background: transparent;
        background-color: yellow !important;
        background-position: right bottom;
        background-size: 200% 100%;
        transition: all .5s ease;
    }
</style>
<script src="~/JS_Core/jquery.mark.min.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<script>
    var tmp_IsAdvanced = "Y";
    var panelVisible = false;
    var RightpanelHideCss = '-350px';
    var RightpanelShowCss = '0px';

    var LeftpanelHideCss = '-350px';
    var LeftpanelShowCss = '0px';
    var URL_Index = '@Url.Action("Index", "MHRequisition")';
    var URL_BindPartialPages = '@Url.Action("BindPartialPages", "MHRequisition")';
    var URL_PopulateTitleForMapping = '@Url.Action("PopulateTitleForMapping", "MHRequisition")';
    var URL_AutoCompleteMovieAlbum = '@Url.Action("AutoMovieAlbum", "Music_Title")';
    var URL_BindGrid = '@Url.Action("BindGrid", "MHRequisition")';
 //   var URL_ValidateRequest = '@Url.Action("ValidateRequest","MHRequisition")';

    $(document).ready(function () {
        debugger;
        $('#ddlMusicLabel').SumoSelect();
        $("#ddlVendor").SumoSelect();
        $("#ddlStatus").SumoSelect();
        if ('@ViewBag.CallFor' == "D")
        {
            var Key = '@ViewBag.Key';
            var MHRequestCode = '@ViewBag.MHRequestCode';
            var callFor = '@ViewBag.CallFor';
            debugger;

         BindPartialView(Key, MHRequestCode, callFor);
        }
        else {
            BindPartialView("LIST", 0);
        }
    });

    function BindPartialView(key, MHRequestCode, callFor) {
        debugger
        showLoading();
       
        $.ajax({
            type: "POST",
            url: URL_BindPartialPages,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                key: key,
                MHRequestCode: MHRequestCode,
                callFor: callFor
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    debugger
                    $('#divMHRequisition').empty();
                    $('#divMHRequisition').html(result);
                    if (key == 'LIST') {
                        $('#hdnsideNavi').val('Y');
                        $('#sideNavi').show();
                    }
                    else {
                        $('#hdnsideNavi').val('N');
                        $('#sideNavi').hide();
                    }
                }
                hideLoading();
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }
    function SpacesNotAllowed(obj) {
        var gvid = obj.id;
        if (($("input[id$=" + gvid + "]").val()).trim() == "") {
            $("input[id$=" + gvid + "]").val('');
            return false
        }
        else
            return true
    }
    function PopulateTitleForMapping(obj, Type) {
        var gvid = obj.id;
        var hdnMusicTitleCode = document.getElementById(gvid.replace('MapToExsisting_', 'hdnMusicTitleCode_'));
        if (SpacesNotAllowed(obj)) {
            if ($("input[id$=" + gvid + "]").val() == "") {
            $(hdnMusicTitleCode).val('');
        }
        $("input[id$=" + gvid + "]").autocomplete({
            focus: function () {
                return false;
            },
            search: function (e, u) {
                $(this).addClass('loader');
            },
            source: function (request, response) {
                $(hdnMusicTitleCode).val('');
                var param = { keyword: obj.value, Type: Type };
                $.ajax({
                    url: URL_PopulateTitleForMapping,
                    data: JSON.stringify(param),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        debugger;
                        if (data.length == 0) {
                            data[0] = 'Result Not Found';
                            response($.map(data, function (v, i) {
                                $("input[id$=" + gvid + "]").removeClass('loader');
                                return {
                                    label: 'Result Not Found',
                                    val: '0'
                                }
                            }))
                        }
                        else {
                            response($.map(data, function (v, i) {
                                $("input[id$=" + gvid + "]").removeClass('loader');
                                return {
                                    label: v.Mapping_Name,
                                    val: v.Mapping_Code
                                }
                            }))
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Error" + textStatus);
                    }
                });
            },
            select: function (event, ui) {
                $(hdnMusicTitleCode).val(ui.item.val);
                if (ui.item.val == '0') {
                    return false;
                }
                else
                    return true;
            },
            minLength: 2,
            open: function (event, ui) {
                $(".ui-autocomplete").css("position", "absolute");
                $(".ui-autocomplete").css("max-height", "200px");
                $(".ui-autocomplete").css("max-width", "200px");
                $(".ui-autocomplete").css("overflow-y", "auto");
                $(".ui-autocomplete").css("overflow-x", "hidden");
                $(".ui-autocomplete").css("z-index", "2147483647");
            }
        });
    }
    }

    function AddTitle(MHRequestDetailsCode, MusicAlbumCode, MusicAlbumName, MusicLabelCode, MusicLabelName, Type)
    {
        showLoading();
        var param = {
            MHRequestDetailsCode : MHRequestDetailsCode,
            MusicAlbumCode: MusicAlbumCode,
            MusicAlbumName: MusicAlbumName,
            MusicLabelCode: MusicLabelCode,
            MusicLabelName: MusicLabelName,
            Type: Type
        };
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddMusicTitle", "MHRequisition")',
            traditional: true,
            enctype: 'multipart/form-data',
            async: true,
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(param),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    hideLoading();
                    $("#popAddMusicTitle").html(result);
                    $("#popAddMusicTitle").modal();
                    initializeChosen();
                }
            },
            error: function (result) { }
        });
    }
    var URL_BindAdvanced_Search_Controls = '@Url.Action("BindAdvanced_Search_Controls", "MHRequisition")';
    function BindAdvanced_Search_Controls(callfrom) {
        debugger;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        $("#txtShowName").val("");
        $("#hdnShowName").val('');
        if (callfrom == 'BTC')
            $('#divSearch').slideToggle(400);
        var Is_async = true;
        if (tmp_IsAdvanced == 'Y')
            Is_async = false;
        if (parseInt($("#ddlVendor option").length) == 0) {
            $.ajax({
                type: "POST",
                url: URL_BindAdvanced_Search_Controls,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                }),
                async: Is_async,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        $("#ddlVendor").empty();
                        $("#ddlStatus").empty();
                        $("#ddlMusicLabel").empty();
                        debugger;
                        var obj_Search = $(result.objPage_Properties);

                        $(result.ddlVendor).each(function (index, item) {
                            $("#ddlVendor").append($("<option>").val(this.Value).text(this.Text));
                        });
                        $("#ddlVendor").val(obj_Search[0].VendorCodes_Search.split(',')).attr("selected", "true")[0].sumo.reload();

                        $(result.ddlStatus).each(function (index, item) {
                            $("#ddlStatus").append($("<option>").val(this.Value).text(this.Text));
                        });
                        $("#ddlStatus").val(obj_Search[0].StatusCode_Search.split(',')).attr("selected", "true")[0].sumo.reload();

                        $(result.ddlMusicLabel).each(function (index, item) {
                            $("#ddlMusicLabel").append($("<option>").val(this.Value).text(this.Text));
                        });
                        $("#ddlMusicLabel").val(obj_Search[0].LabelCodes_Search.split(',')).attr("selected", "true")[0].sumo.reload();

                        if ($('#hdnTabName').val() == 'CM') {
                            $('#liSearchShow').show();
                        }
                        else {
                            $('#liSearchShow').hide();
                        }
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
    }
    function BindSearch() {
        debugger;
        BindAdvanced_Search_Controls('BTC');
        if ("RTL" == '@objMessageKey.LayoutDirection') {
            debugger;
            $('.SumoSelect > .optWrapper.multiple > .options li.opt span, .SumoSelect .select-all > span').css("right", '-3px');
            $('.SumoSelect > .optWrapper > .options li.opt label, .SumoSelect > .CaptionCont, .SumoSelect .select-all > label').css("padding-right", "22px")
            $('.SumoSelect > .optWrapper > .options li.opt label, .SumoSelect > .CaptionCont, .SumoSelect .select-all > label').css("direction", "LTR")
            $('#AdSearch').css("padding-right", "11px");
        }
        else
            $('#AdSearch').css("padding-right", "0px");
    }
    function togglePanelVisibility2(panelID, TabChange) {
        if ('@objMessageKey.LayoutDirection' == 'RTL') {
            document.getElementById('pnlSearch').removeAttribute('hidden')
            $('.leftPanel').css('right', panelHideCss);
            $(".RightPanel:not(#" + panelID + ")").css("left", LeftpanelHideCss);
            var panel = document.getElementById(panelID);
            if (panel.style.left == LeftpanelShowCss || TabChange == 'Y') {
                panel.style.left = LeftpanelHideCss;
                panelVisible = false;
                $('#sideNavi').show();
            }
            else {
                panel.style.left = LeftpanelShowCss;
                panelVisible = true;
                $('#sideNavi').hide();
            }
        }
        else {
            document.getElementById('pnlSearch').removeAttribute('hidden')
            $('.leftPanel').css('left', panelHideCss);
            $(".RightPanel:not(#" + panelID + ")").css("right", RightpanelHideCss);
            var panel = document.getElementById(panelID);
            if (panel.style.right == RightpanelShowCss || TabChange == 'Y') {
                panel.style.right = RightpanelHideCss;
                panelVisible = false;
                $('#sideNavi').show();
            }
            else {
                panel.style.right = RightpanelShowCss;
                panelVisible = true;
                $('#sideNavi').hide();
            }
        }
    }
    var tmpVendor = '', tmpStatus = '', tmpMusicLabel = '', hdnShowName = '', txtfrom = '', txtto = '';
    function validateSearch() {
        debugger;
        tmp_IsAdvanced = 'Y';

        $('#hdnClearAll').val('N');

        if ($('#ddlVendor').val())
            tmpVendor = $('#ddlVendor').val().join(',');

        if ($('#ddlStatus').val())
            tmpStatus = $('#ddlStatus').val().join(',');

        if ($('#ddlMusicLabel').val())
            tmpMusicLabel = $('#ddlMusicLabel').val().join(',');

        hdnShowName = $('#txtShowName').val();
        txtfrom = $('#txtfrom').val();
        txtto = $('#txtto').val();
        if (tmpVendor == '' && tmpStatus == '' && tmpMusicLabel == '' && hdnShowName == '' && txtfrom == '' && txtto == '' ) {
            debugger;
            showAlert('E', 'Please select atleast one criteria to view')
            return false;
        }
        else {
            showLD = 'Y';
            BindPartialView("LIST", 0);
        }
    }

    function BindGrid(fetchData, isTabChanged, previousTabName) {
        showLoading();
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        var currentTabName = $.trim($('#hdnTabName').val());
        var pageNo = $('#hdnPageNo').val();
        var recordPerPage = $('#txtPageSize').val();

        $.ajax({
            type: "POST",
            url: URL_BindGrid,
            traditional: true,
            enctype: 'multipart/form-data',
            async: false,
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                fetchData: fetchData,
                isTabChanged: isTabChanged,
                currentTabName: currentTabName,
                previousTabName: previousTabName,
                pageNo: pageNo,
                recordPerPage: recordPerPage,
                productionHouseCode: tmpVendor,
                musicLabel: tmpMusicLabel,
                fromDate: txtfrom,
                toDate: txtto,
                statusCode: tmpStatus,
                titleCodes: hdnShowName
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $("#divMHCueSheetSongData").empty();
                    $("#divMHCueSheetSongData").append(result);
                    initializeTooltip();
                   
                }
                hideLoading();
            },
            error: function (result) {
                alert(result);
            }
        });
    }
    function populateTitle(evt) {
        debugger;
        var txtShowName = $('#txtShowName').val();
        var txt = txtShowName.split(',');
        var txt = txtShowName.split(',');
        var iscomplete = true;

        if (txtShowName.trim() == "") {
            $('#txtShowName').val('')
            return false;
        }
        if (txt[txt.length - 1].trim() == "")
            iscomplete = false;
        if (iscomplete) {
            $("#txtShowName").autocomplete({
                focus: function () {
                    return false;
                },
                source: function (request, response) {
                    var param = {
                        Searched_Title: txtShowName
                    };
                    $.ajax({
                        url: '@Url.Action("GetShowName", "MHRequisition")',
                        data: JSON.stringify(param),
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; },
                        success: function (data) {
                            $("#lbOrigTitle_Code").val('');
                            response($.map(data, function (v, i) {
                                return {
                                    label: v.Mapping_Name,
                                    val: v.Mapping_Code
                                }
                            }))
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Error" + textStatus);
                        }
                    });
                },
                select: function (event, i) {
                    debugger;
                    var text = this.value.split(/﹐\s*/);
                    text.pop();
                    text.push(i.item.value);
                    text.push("");
                    this.value = text;
                    this.value = text.join("﹐");
                    //var value = $("#hdnShowName").val().split(/,\s*/);
                    value.pop();
                    value.push(i.item.val);
                    value.push("");
                    //$("#hdnShowName")[0].value = value.join(", ");
                    return false;
                },
                minLength: 2,
                open: function (event, ui) {
                    $(".ui-autocomplete").css("position", "absolute");
                    $(".ui-autocomplete").css("max-height", "200px");
                    $(".ui-autocomplete").css("overflow-y", "auto");
                    $(".ui-autocomplete").css("overflow-x", "hidden");
                    $(".ui-autocomplete").css("z-index", "2147483647");
                },
            });
        }
        else
            return false;
    }
    function ShowAll() {
        debugger
        if ($('#ddlVendor').val() != '' || $('#ddlStatus').val() != '' || $('#ddlMusicLabel').val() != '' || $('#hdnShowName').val() != '' || $('#txtfrom').val() != '' || $('#txtto').val() != '') {
            ClearAll();
            BindPartialView("LIST", 0);
        }
    }
    function ClearAll() {
        debugger;

            $('.required').removeClass('required');
            $("[required='required']").removeAttr("required");

            $('#txtShowName').val('');
            $('#hdnShowName').val('');

            $("#ddlVendor").find("option").attr("selected", false);
            $("#ddlVendor").val('')[0].sumo.reload();

            $("#ddlStatus").find("option").attr("selected", false);
            $("#ddlStatus").val('')[0].sumo.reload();

            $("#ddlMusicLabel").find("option").attr("selected", false);
            $("#ddlMusicLabel").val('')[0].sumo.reload();

            $('#txtfrom').val('');
            $('#txtto').val('');
        tmpVendor = '', tmpStatus = '', tmpMusicLabel = '', hdnShowName = '', txtfrom = '', txtto = '';
    }
    function AllsubmenuHide() {
    
        if ($('#hdnsideNavi').val() == 'Y') {
            if ('@objMessageKey.LayoutDirection' == 'RTL') {
                $('.RightPanel').css('left', LeftpanelHideCss);
                $('.leftPanel').css('right', panelHideCss);
                $('#sideNavi').show();
            }
            else {
                $('.RightPanel').css('right', RightpanelHideCss);
                $('.leftPanel').css('left', panelHideCss);
                $('#sideNavi').show();
            }
        }
    }
</script>
<style>
    .AdSearch {
        margin-left: 8px;
        margin-top: 3px;
    }

    #AdvanceSearchPanel {
        overflow: visible !important;
        height: 570px;
    }
    .SumoSelect {
        width: 300px
        ;
    }
</style>
@Html.Hidden("hdnTabName", (object)Convert.ToString(ViewBag.MHTypeCode) != null ? (object)Convert.ToString(ViewBag.MHTypeCode) : "CM")

<div class="main_section">
    <section class="rightsU_container clearfix">
        <div id="sideNavi">
            <div class="side-navi-item item1" style="top:0px ;width: 46px !important;" onclick="javascript: togglePanelVisibility2('pnlSearch','N'); BindSearch();"><div><span class="glyphicon glyphicon-search" style="transform: rotate(-270deg);"></span></div></div>
        </div>
        <div class="RightPanel" id="pnlSearch" hidden="hidden" dir="@objMessageKey.LayoutDirection">
            <div id="AdvanceSearchPanel">
                <h4>Advance Search</h4>
                <a class="close" href="#" onclick="javascript: panelVisible = true; togglePanelVisibility2('pnlSearch','N');"><span class="Reviewclose">x</span></a>
                <ul id="AdSearch" style="margin-top: 11px;border-bottom: 0;border-left: 0px;border-right: 0px;">
                    <li class="AdSearch">
                        <label>Production House:</label>
                        <br>
                        <select id="ddlVendor" multiple="multiple"></select>
                    </li>
                    <li class="AdSearch" id="liSearchShow">
                        <label>Show Name:</label>
                        <br>
                        <input type="text" placeholder="Show Name" id="txtShowName" autocomplete="on" style="width:300px"
                               value='@ViewBag.SrchTitle' onkeyup="populateTitle(event)" />
                        <input type="hidden" id="hdnShowName" />
                    </li>
                    <li class="AdSearch">
                        <label>Status:</label><br />
                        <select id="ddlStatus" multiple="multiple"></select>
                    </li>
                    <li class="AdSearch">
                        <label>Music Label:</label><br />
                        <select id="ddlMusicLabel" multiple="multiple"></select>
                    </li>
                    <li class="AdSearch">
                        <label>Period:</label><br />
                        <input type="text" class="isDatepicker shortDate" value="@ViewBag.DealFrmDt_Search" runat="server" id="txtfrom" placeholder="@objMessageKey.From" title="@objMessageKey.From" />
                        <input type="text" class="isDatepicker shortDate" value="@ViewBag.DealToDt_Search" runat="server" id="txtto" placeholder="@objMessageKey.To" title="@objMessageKey.To" />
                    </li>
                </ul>
                <br />
                <div style="text-align:center;">
                    <a class="btn-primary" style="cursor:default" onclick="validateSearch();">Search</a>
                    <a class="btn-primary" style="cursor:default" onclick="ShowAll();">Clear All</a>
                    <input type="hidden" id="hdnClearAll" />
                </div>
            </div>
        </div>
        <input type="hidden" id="hdnsideNavi" name="hdnsideNavi" />
        <div class="container acq main_col" onclick="AllsubmenuHide(); $('.leftPanel').css('left', panelHideCss);">
            <div id="divMHRequisition">

            </div>
        </div>
    </section>
    <input type="hidden" id="hdnSearch" name="hdnSearch" />
</div>
<div aria-labelledby="myModalLabel" class="form_wrapper modal fade in small_popup" id="popAddMusicTitle" role="dialog" tabindex="-1" aria-hidden="false">
</div>