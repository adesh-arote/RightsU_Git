@model IEnumerable<RightsU_Entities.Acq_Deal_Movie>
@using UTOFrameWork.FrameworkClasses
@{ LoginEntity objLoginEntity = new LoginEntity();
    if (Session["objLoginEntity"] != null)
    {
        objLoginEntity = (LoginEntity)Session["objLoginEntity"];
    }
}
<div class="sub_block clearfix">
    <table id="tblMovie" class="table table-bordered table-hover" style="display: table;">
        <thead>
            <tr>
                @if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Movie || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Documentary_Film)
                {
                    <th class="movie">Deal For @ViewBag.Title_Label</th>
                    <th>Title Language</th>
                    <th>Notes</th>
                    <th class="key_cast">Star Cast</th>
                    <th>Movie Type</th>
                    <th>Duration<br>
                        (Min)</th>
                }
                else if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Content || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Event
                || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Documentary_Show || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Format_Program)
                {
                    <th class="movie">Deal For @ViewBag.Title_Label</th>
                    <th>Title Language</th>
                    <th>Episode From</th>
                    <th>Episode To</th>
                    <th>Notes</th>
                    <th class="key_cast">Star Cast</th>
                    <th>@ViewBag.Title_Label Type</th>
                    <th>Duration<br>
                        (Min)</th>
                    
                }
                else if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Sports)
                {
                    <th class="movie">Deal For @ViewBag.Title_Label</th>
                    <th>Title Language</th>
                    <th>Matches From</th>
                    <th>No. of Matches</th>
                    <th>Notes</th>
                    <th>Sports Type</th>
                    <th>Duration<br>
                        (Min)</th>
                }
                else if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Music)
                {
                    <th class="movie">Deal For @ViewBag.Title_Label</th>
                    <th>Title Language</th>
                    <th>No. of Songs</th>
                    <th>Notes</th>
                    <th>Music Type</th>
                    <th>Duration<br>
                        (Min)</th>
                }
                else if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Performer || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Writer
                || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Music_Composer || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_DOP
                || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Choreographer || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Lyricist
                || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Director || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_VideoMusic
                || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Singer || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Other_Talent
                || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Contestant || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Producer
                || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_ShortFlim)
                {
                    <th class="movie">Deal For @ViewBag.Title_Label</th>
                    <th>Synopsis</th>
                    if (ViewBag.DealTypeCode_MasterDeal != GlobalParams.Deal_Type_Movie && ViewBag.DealTypeCode_MasterDeal > 0)
                    {
                    <th>No of Appearances</th>
                    }
                    <th>Duration<br>
                        (Min)</th>
                }

                @if (Model != null)
                {
                    if (ViewBag.Deal_Mode == GlobalParams.DEAL_MOVIE_CLOSE || Model.Where(x => x.Is_Closed == "Y" || x.Is_Closed == "X").Count() > 0)
                    {
                    <th>Title Close Date</th>
                    <th>Title Closing Remarks</th>
                    }
                }

                @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE && ViewBag.Deal_Type_Code > 0)
                {
                    <th>Action</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {

                bool showCloseTitle = Model.Where(w => w.Is_Closed == "X").Count() > 0 ? true : false;
                for (int i = 0; i < Model.Count(); i++)
                {
                    RightsU_Entities.Acq_Deal_Movie objADM = Model.ElementAt(i);
                    if (objADM.EntityState != RightsU_Entities.State.Deleted)
                    {
                        string titleName = objADM.Title.Title_Name, titleLanguageName = "", starCast = "", duration = "0";
                        if (string.IsNullOrEmpty(objADM.Title_Type))
                        {
                            objADM.Title_Type = "P";
                        }
                        if (string.IsNullOrEmpty(objADM.Notes))
                        {
                            objADM.Notes = "";
                        }
                        string strTitle_type = objADM.Title_Type.Trim() == "P" ? "Premier" : (objADM.Title_Type.Trim() == "L" ? "Library" : "N/A");
                        if (objADM.Title.Title_Languages != null)
                        {
                            titleLanguageName = objADM.Title.Title_Languages.Language_Name;
                        }

                        if (objADM.Title.Duration_In_Min != null)
                        {
                            duration = objADM.Title.Duration_In_Min.ToString();
                        }

                        int minEpisode_Linked = 0, maxEpisode_Linked = 0;
                        List<RightsU_Entities.Acq_Deal_Movie_Music_Link> lstLinked = new RightsU_BLL.Acq_Deal_Movie_Music_Link_Service(objLoginEntity.ConnectionStringName).SearchFor(x => x.Link_Acq_Deal_Movie_Code == objADM.Acq_Deal_Movie_Code).ToList();

                        if (lstLinked.Count > 0)
                        {
                            minEpisode_Linked = (int)lstLinked.Select(s => s.Episode_No).Min();
                            maxEpisode_Linked = (int)lstLinked.Select(s => s.Episode_No).Max();
                        }
                        
                        starCast = string.Join(", ", objADM.Title.Title_Talent.
                                Where(w => w.Role_Code == GlobalParams.RoleCode_StarCast).OrderBy(o => o.Talent.Talent_Name).Select(s => s.Talent.Talent_Name).ToArray().Distinct());
                <tr id="tblMovie_tr_@i">
                    <td>
                        @Html.Label("Acq_Deal_Movie[" + i + "].Title.Title_Name", titleName, new { id = "lblTitleName_" + i })
                        @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                        {
                            @Html.Hidden("Acq_Deal_Movie[" + i + "].Acq_Deal_Movie_Code", objADM.Acq_Deal_Movie_Code, new { id = "hdnAcq_Deal_Movie_Code_" + i })
                            @Html.Hidden("Acq_Deal_Movie[" + i + "].Acq_Deal_Code", objADM.Acq_Deal_Code)
                            @Html.Hidden("Acq_Deal_Movie[" + i + "].Title_Code", objADM.Title_Code, new { @id = "hdnTitleCode_" + i })
                            @Html.Hidden("Acq_Deal_Movie[" + i + "].Dummy_Guid", objADM.Dummy_Guid);
                            @Html.Hidden("Acq_Deal_Movie[" + i + "]._Dummy_Guid", objADM._Dummy_Guid, new { id = "hdnDummyGuid_" + i })
                                                                                                   if (ViewBag.Deal_Mode == GlobalParams.DEAL_MODE_CLONE)
                                                                                                   {
                            <select id="ddlTitle_@i" style="display:none"></select>
                                                                                                   }
                        }
                    </td>

                    @if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Movie || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Documentary_Film)
                    {
                        <td>
                            @Html.Label("Acq_Deal_Movie[" + i + "].Title.Title_Languages.Language_Name", titleLanguageName, new { id = "lblTitleLangName_" + i })
                        </td>
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                @Html.TextBox("Acq_Deal_Movie[" + i + "].Notes", objADM.Notes, new { @class = "textbox", @id = "txtNotes_" + i, @maxlength = "500" })
                                @Html.Hidden("Acq_Deal_Movie[" + i + "].No_Of_Episodes", objADM.No_Of_Episodes)
                                @Html.Hidden("Acq_Deal_Movie[" + i + "].Episode_Starts_From", objADM.Episode_Starts_From)
                                @Html.Hidden("Acq_Deal_Movie[" + i + "].Episode_End_To", objADM.Episode_End_To)
                            }
                            else
                            {
                                <div class="expandable">
                                    @objADM.Notes
                                </div>
                            }
                        </td>
                        <td>
                            <div class="expandable">
                                <span id="lblStarCast_@i">@starCast</span>
                            </div>
                        </td>
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => objADM.Title_Type, "P", new { id = "rbMovieType_P_" + i, Name = "Acq_Deal_Movie[" + i + "].Title_Type", @checked = "checked" })Premier
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => objADM.Title_Type, "L", new { id = "rbMovieType_L_" + i, Name = "Acq_Deal_Movie[" + i + "].Title_Type" })Library
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => objADM.Title_Type, "N", new { id = "rbMovieType_I_" + i, Name = "Acq_Deal_Movie[" + i + "].Title_Type" })N/A
                                </label>
                            }
                            else
                            {
                                @strTitle_type
                            }
                        </td>
                        <td>
                            @Html.Label("Acq_Deal_Movie[" + i + "].Title.Duration_In_Min", duration, new { id = "lblDuration_" + i })
                        </td>
                    }
                    else if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Content || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Event
                    || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Documentary_Show || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Format_Program)
                    {                        
                        <td>
                            @Html.Label("Acq_Deal_Movie[" + i + "].Title.Title_Languages.Language_Name", titleLanguageName, new { id = "lblTitleLangName_" + i })
                        </td>
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                @Html.TextBox("Acq_Deal_Movie[" + i + "].Episode_Starts_From", objADM.Episode_Starts_From, new { @class = "textbox smallTextBox numeric", @id = "txtEpisode_Starts_From_" + i })
                                
                                int maxEpisodeFrom = 0;
                                //if (objADM.Acq_Deal_Movie_Contents.Count > 0)
                                //{
                                //    if (objADM.Acq_Deal_Movie_Contents.Where(x => x.Ref_BMS_Content_Code != null).Count() > 0)
                                //    {
                                //        maxEpisodeFrom = objADM.Acq_Deal_Movie_Contents.Min(x => Convert.ToInt32(x.Episode_No));
                                //    }
                                //}

                                if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_CLONE)
                                {
                                    int minEF = 0;
                                    try
                                    {
                                        minEF = new RightsU_BLL.Syn_Deal_Rights_Title_Service(objLoginEntity.ConnectionStringName).SearchFor(s => s.Title_Code == objADM.Title_Code && s.Syn_Deal_Rights.Right_Status == "C").Min(s => (int)s.Episode_From);
                                    }
                                    catch (Exception)
                                    {
                                        minEF = 0;
                                    }

                                    if (maxEpisodeFrom == 0)
                                    {
                                        maxEpisodeFrom = minEF;
                                    }
                                    else if (minEF < maxEpisodeFrom && minEF > 0)
                                    {
                                        maxEpisodeFrom = minEF;
                                    }

                                    if (maxEpisodeFrom > 0 && objADM.Episode_End_To != null)
                                    {
                                        if (Model.Where(w => w.Title_Code == objADM.Title_Code && w.Episode_Starts_From < objADM.Episode_Starts_From).Count() > 0)
                                        {
                                            maxEpisodeFrom = (int)objADM.Episode_Starts_From;
                                        }
                                    }

                                    if (objADM.Episode_Starts_From == null)
                                    {
                                        maxEpisodeFrom = 0;
                                    }
                                    else
                                    {
                                        maxEpisodeFrom = (minEpisode_Linked < maxEpisodeFrom || maxEpisodeFrom == 0) ? minEpisode_Linked : maxEpisodeFrom;
                                    }
                                }
                                <input type="text" id="txtMaximumEpisode_From_@i" style="display:none" value="@maxEpisodeFrom" />
                                
                            }
                            else
                            {
                                @Convert.ToString(objADM.Episode_Starts_From)
                            }
                        </td>
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                @Html.TextBox("Acq_Deal_Movie[" + i + "].Episode_End_To", objADM.Episode_End_To, new { @class = "textbox smallTextBox numeric", @id = "txtEpisode_End_To_" + i })
                            
                                int minEpisodeTo = 0;
                                //if (objADM.Acq_Deal_Movie_Contents.Count > 0)
                                //{
                                //    if (objADM.Acq_Deal_Movie_Contents.Where(x => x.Ref_BMS_Content_Code != null).Count() > 0)
                                //    {
                                //        minEpisodeTo = objADM.Acq_Deal_Movie_Contents.Where(x => x.Ref_BMS_Content_Code != null).Max(x => Convert.ToInt32(x.Episode_No));
                                //    }
                                //}

                                if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_CLONE)
                                {
                                    int maxET = 0;
                                    try
                                    {
                                        maxET = new RightsU_BLL.Syn_Deal_Rights_Title_Service(objLoginEntity.ConnectionStringName).SearchFor(s => s.Title_Code == objADM.Title_Code && s.Syn_Deal_Rights.Right_Status == "C").Max(s => (int)s.Episode_To);
                                    }
                                    catch (Exception e)
                                    {
                                        maxET = 0;
                                    }

                                    if (minEpisodeTo == 0)
                                    {
                                        minEpisodeTo = maxET;
                                    }
                                    else if (minEpisodeTo < maxET && maxET > 0)
                                    {
                                        minEpisodeTo = maxET;
                                    }

                                    if (minEpisodeTo > 0 && objADM.Episode_End_To != null)
                                    {
                                        if (Model.Where(w => w.Title_Code == objADM.Title_Code && w.Episode_End_To > objADM.Episode_End_To).Count() > 0)
                                        {
                                            minEpisodeTo = (int)objADM.Episode_End_To;
                                        }
                                    }

                                    if (objADM.Episode_End_To == null)
                                    {
                                        minEpisodeTo = 0;
                                    }
                                    else
                                    {
                                        minEpisodeTo = (maxEpisode_Linked > minEpisodeTo || minEpisodeTo == 0) ? maxEpisode_Linked : minEpisodeTo;
                                    }
                                }
                                <input type="text" id="txtMininumEpisode_To_@i" style="display:none" value="@minEpisodeTo" />
                            }
                            else
                            {
                                @Convert.ToString(objADM.Episode_End_To)
                            }
                        </td>
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                @Html.TextBox("Acq_Deal_Movie[" + i + "].Notes", objADM.Notes, new { @class = "textbox", @id = "txtNotes_" + i, @maxlength = "500" })
                                @Html.Hidden("Acq_Deal_Movie[" + i + "].No_Of_Episodes", objADM.No_Of_Episodes)
                            }
                            else
                            {
                                <div class="expandable">
                                    @objADM.Notes
                                </div>
                            }
                        </td>
                        <td>
                            <div class="expandable">
                                <span id="lblStarCast_@i">@starCast</span>
                            </div>
                        </td>
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => objADM.Title_Type, "P", new { id = "rbMovieType_P_" + i, Name = "Acq_Deal_Movie[" + i + "].Title_Type", @checked = "checked" })Premier
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => objADM.Title_Type, "L", new { id = "rbMovieType_L_" + i, Name = "Acq_Deal_Movie[" + i + "].Title_Type" })Library
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => objADM.Title_Type, "N", new { id = "rbMovieType_I_" + i, Name = "Acq_Deal_Movie[" + i + "].Title_Type" })N/A
                                </label>
                            }
                            else
                            {
                                @strTitle_type
                            }
                        </td>
                        <td>
                            @Html.Label("Acq_Deal_Movie[" + i + "].Title.Duration_In_Min", duration, new { id = "lblDuration_" + i })
                        </td>
                    }
                    else if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Sports || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Music)
                    {
                        <td>
                            @Html.Label("Acq_Deal_Movie[" + i + "].Title.Title_Languages.Language_Name", titleLanguageName, new { id = "lblTitleLangName_" + i })
                        </td>
                        
                        if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Sports)
                        {
                        <td>
                            @Html.TextBox("Acq_Deal_Movie[" + i + "].Episode_Starts_From", objADM.Episode_Starts_From, new { @id = "txtEpisode_Starts_From_" + i, @class = "textbox smallTextBox matchFrom_Sport", @readonly = "readonly" })
                            @{
                            int maxEpisodeFrom = 0;
                            //if (objADM.Acq_Deal_Movie_Contents.Count > 0)
                            //{
                            //    if (objADM.Acq_Deal_Movie_Contents.Where(x => x.Ref_BMS_Content_Code != null).Count() > 0)
                            //    {
                            //        maxEpisodeFrom = objADM.Acq_Deal_Movie_Contents.Min(x => Convert.ToInt32(x.Episode_No));
                            //    }
                            //}

                            if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_CLONE)
                            {
                                int minEF = 0;
                                try
                                {
                                    minEF = new RightsU_BLL.Syn_Deal_Rights_Title_Service(objLoginEntity.ConnectionStringName).SearchFor(s => s.Title_Code == objADM.Title_Code && s.Syn_Deal_Rights.Right_Status == "C").Min(s => (int)s.Episode_From);
                                }
                                catch (Exception)
                                {
                                    minEF = 0;
                                }

                                if (maxEpisodeFrom == 0)
                                {
                                    maxEpisodeFrom = minEF;
                                }
                                else if (minEF < maxEpisodeFrom && minEF > 0)
                                {
                                    maxEpisodeFrom = minEF;
                                }

                                if (maxEpisodeFrom > 0 && objADM.Episode_End_To != null)
                                {
                                    if (Model.Where(w => w.Title_Code == objADM.Title_Code && w.Episode_Starts_From < objADM.Episode_Starts_From).Count() > 0)
                                    {
                                        maxEpisodeFrom = (int)objADM.Episode_Starts_From;
                                    }
                                }

                                if (objADM.Episode_Starts_From == null)
                                {
                                    maxEpisodeFrom = 0;
                                }
                            }
                                <input type="text" id="txtMaximumEpisode_From_@i" style="display:none" value="@maxEpisodeFrom" />
                            }
                        </td>
                        }
                        else
                        {
                        @Html.Hidden("Acq_Deal_Movie[" + i + "].Episode_Starts_From", objADM.Episode_Starts_From)
                        }
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                bool isChecked = false;
                                if (ViewBag.Deal_Type_Code != GlobalParams.Deal_Type_Sports)
                                {
                                    isChecked = (objADM.Episode_End_To == 0);
                                @Html.CheckBox("chkUnlimited", isChecked, new { id = "chkUnlimited_" + i, @onclick = "chkUnlimited_OnClick(this, 'txtEpisode_End_To_" + i + "');" }) 
                                <span>Unlimited</span>
                                }
                                if (isChecked)
                                {
                                @Html.TextBox("Acq_Deal_Movie[" + i + "].Episode_End_To", objADM.Episode_End_To, new { @class = "textbox smallTextBox numeric_music unlimitedMusic", @id = "txtEpisode_End_To_" + i, @readonly = "readonly" });
                                }
                                else
                                {
                                @Html.TextBox("Acq_Deal_Movie[" + i + "].Episode_End_To", objADM.Episode_End_To, new { @class = "textbox smallTextBox numeric_music", @id = "txtEpisode_End_To_" + i });
                                            }
                                            int minEpisodeTo = 0;
                                            //if (objADM.Acq_Deal_Movie_Contents.Count > 0)
                                            //{
                                            //    if (objADM.Acq_Deal_Movie_Contents.Where(x => x.Ref_BMS_Content_Code != null).Count() > 0)
                                            //    {
                                            //        minEpisodeTo = objADM.Acq_Deal_Movie_Contents.Where(x => x.Ref_BMS_Content_Code != null).Max(x => Convert.ToInt32(x.Episode_No));
                                            //    }
                                            //}

                                            if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_CLONE)
                                            {
                                                int maxET = 0;
                                                try
                                                {
                                                    maxET = new RightsU_BLL.Syn_Deal_Rights_Title_Service(objLoginEntity.ConnectionStringName).SearchFor(s => s.Title_Code == objADM.Title_Code && s.Syn_Deal_Rights.Right_Status == "C").Max(s => (int)s.Episode_To);
                                }
                                    catch (Exception e)
                                {
                                    maxET = 0;
                                }

                                if (minEpisodeTo == 0)
                                {
                                    minEpisodeTo = maxET;
                                }
                                else if (minEpisodeTo < maxET && maxET > 0)
                                {
                                    minEpisodeTo = maxET;
                                }

                                if (minEpisodeTo > 0 && objADM.Episode_End_To != null)
                                {
                                    if (Model.Where(w => w.Title_Code == objADM.Title_Code && w.Episode_End_To > objADM.Episode_End_To).Count() > 0)
                                    {
                                        minEpisodeTo = (int)objADM.Episode_End_To;
                                    }
                                }

                                if (objADM.Episode_End_To == null)
                                {
                                    minEpisodeTo = 0;
                                }
                                else
                                {
                                    int assignMusicCount = new RightsU_BLL.Acq_Deal_Movie_Music_Service(objLoginEntity.ConnectionStringName).SearchFor(x => x.Acq_Deal_Movie_Code == objADM.Acq_Deal_Movie_Code).Count();
                                    if (assignMusicCount > minEpisodeTo)
                                    {
                                        minEpisodeTo = assignMusicCount;
                                    }
                                }
                            }
                                <input type="text" id="txtMininumEpisode_To_@i" style="display:none" value="@minEpisodeTo" />
                            }
                            else
                            {
                                if (objADM.Episode_End_To == 0)
                                {
                                <span>Unlimited</span>
                                }
                                else
                                {
                                @Convert.ToString(objADM.Episode_End_To)
                                }
                            }
                        </td>
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                @Html.TextBox("Acq_Deal_Movie[" + i + "].Notes", objADM.Notes, new { @class = "textbox", @id = "txtNotes_" + i, @maxlength = "500" })
                                @Html.Hidden("Acq_Deal_Movie[" + i + "].No_Of_Episodes", objADM.No_Of_Episodes)
                            }
                            else
                            {
                                <div class="expandable">
                                    @objADM.Notes
                                </div>
                            }
                        </td>
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => objADM.Title_Type, "P", new { id = "rbMovieType_P_" + i, Name = "Acq_Deal_Movie[" + i + "].Title_Type", @checked = "checked" })Premier
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => objADM.Title_Type, "L", new { id = "rbMovieType_L_" + i, Name = "Acq_Deal_Movie[" + i + "].Title_Type" })Library
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => objADM.Title_Type, "N", new { id = "rbMovieType_I_" + i, Name = "Acq_Deal_Movie[" + i + "].Title_Type" })N/A
                                </label>
                            }
                            else
                            {
                                @strTitle_type
                            }
                        </td>
                        <td>
                            @Html.Label("Acq_Deal_Movie[" + i + "].Title.Duration_In_Min", duration, new { id = "lblDuration_" + i })
                        </td>
                    }
                    else if (ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Performer || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Writer
                    || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Music_Composer || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_DOP
                    || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Choreographer || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Lyricist
                    || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Director || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_VideoMusic
                    || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Singer || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Other_Talent
                    || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Contestant || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_Producer
                    || ViewBag.Deal_Type_Code == GlobalParams.Deal_Type_ShortFlim)
                    {
                        <td>
                            @Html.Label("Acq_Deal_Movie[" + i + "].Title.Synopsis", objADM.Title.Synopsis)
                            @Html.Hidden("Acq_Deal_Movie[" + i + "].Notes", objADM.Notes)
                            @Html.Hidden("Acq_Deal_Movie[" + i + "].Title_Type", objADM.Title_Type)
                            @Html.Hidden("Acq_Deal_Movie[" + i + "].Episode_Starts_From", objADM.Episode_Starts_From)
                            @Html.Hidden("Acq_Deal_Movie[" + i + "].Episode_End_To", objADM.Episode_End_To)
                        </td>
                        if (ViewBag.DealTypeCode_MasterDeal != GlobalParams.Deal_Type_Movie)
                        {
                        <td>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                @Html.TextBox("Acq_Deal_Movie[" + i + "].No_Of_Episodes", objADM.No_Of_Episodes, new { @class = "textbox smallTextBox numeric", @id = "txtNo_Of_Episodes_" + i })
                            }
                            else
                            {
                                @Convert.ToString(objADM.No_Of_Episodes)
                            }
                        </td>
                        }
                        <td>
                            @Html.Label("Acq_Deal_Movie[" + i + "].Title.Duration_In_Min", duration, new { id = "lblDuration_" + i })
                        </td>
                    }
                    @if (ViewBag.Deal_Mode == GlobalParams.DEAL_MOVIE_CLOSE || Model.Where(x => x.Is_Closed == "Y" || x.Is_Closed == "X").Count() > 0)
                    {
                        DateTime dtCloseDate = Convert.ToDateTime(objADM.Movie_Closed_Date);
                        string closeDate_display = "", closeDate = "", closingRemark = "";

                        if (!string.IsNullOrEmpty(objADM.Closing_Remarks))
                        {
                            closingRemark = objADM.Closing_Remarks;
                        }

                        if (dtCloseDate != DateTime.MinValue)
                        {
                            closeDate_display = dtCloseDate.ToString(GlobalParams.DateFormat_Display);
                            closeDate = dtCloseDate.ToString(GlobalParams.DateFormat);
                        }
                        
                        <td>
                            <span id="lblMovie_Closed_Date_@i" name ="Acq_Deal_Movie[@i].Movie_Closed_Date">@closeDate_display</span>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                @Html.TextBox("Acq_Deal_Movie[" + i + "].Movie_Closed_Date", closeDate,
                                    new { id = "txtMovie_Closed_Date_" + i, style = "display:none", @class = "isDatepicker shortDate" })
                                @Html.Hidden("hdnTitleClosedDate", closeDate, new { id = i + "_hdnTitleClosedDate" })  
                            }
                        </td>
                        <td>
                            <div class="expandable" id="divClosing_Remarks_@i">
                                <span id="lblClosing_Remarks_@i" name ="Acq_Deal_Movie[@i].Closing_Remarks">@closingRemark</span>
                            </div>
                            @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                            {
                                @Html.TextArea("Acq_Deal_Movie[" + i + "].Closing_Remarks", objADM.Closing_Remarks
                                , new { id = "txtClosing_Remarks_" + i, style = "display:none", @class = "textarea", @maxlength = "5000" })
                            }
                        </td>   
                    }
                    @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                    {
                        <td>
                            @{ 
                        string isClosed = objADM.Is_Closed;
                        isClosed = (string.IsNullOrEmpty(isClosed)) ? "N" : isClosed;

                        if ((ViewBag.Deal_Mode == GlobalParams.DEAL_MOVIE_CLOSE || (ViewBag.Deal_Mode == GlobalParams.DEAL_MODE_EDIT && isClosed.Equals("X"))
                            || showCloseTitle) && !isClosed.Equals("Y"))
                        {
                            var confirmMsg_CloseTitle = "Are you sure, you want to close this title ?";
                            confirmMsg_CloseTitle = (isClosed.Equals("N")) ? confirmMsg_CloseTitle : "Are you sure, you want to edit Title close date ?";
                            var title = (isClosed.Equals("N")) ? "Close Title" : "Edit Close Title";
                                <a title='@title' href="#" id="btnCloseTitle_@i" class="glyphicon glyphicon-copyright-mark" onclick="Ask_Confirmation('@confirmMsg_CloseTitle','@objADM.Dummy_Guid', @i, 'CLOSE_TITLE')"></a>   
                                <a title="Save" href="#" id="btnSave_@i" class="glyphicon glyphicon-ok-circle" onclick="tblMovie_RowCommand('@objADM.Dummy_Guid', @i, 'SAVE_CLOSED_TITLE')", style="display:none"></a>
                                <a title="Cancel" href="#" id="btnCancel_@i" class="glyphicon glyphicon-remove-circle" onclick="tblMovie_RowCommand('@objADM.Dummy_Guid', @i, 'CANCEL_CLOSE_TITLE')", style="display:none"></a>
                        }
                        else if (ViewBag.Deal_Mode == GlobalParams.DEAL_MODE_CLONE)
                        {
                                <a title='Replace' href="#" id="btnReplace_@i" class="glyphicon glyphicon-sort replace" onclick="Ask_Confirmation('Are you sure, you want to replace this title ?', '@objADM.Dummy_Guid', @i, 'REPLACE_TITLE')"></a>
                                <a title="Save" href="#" id="btnSave_@i" class="glyphicon glyphicon-ok-circle" onclick="tblMovie_RowCommand('@objADM.Dummy_Guid', @i, 'SAVE_REPLACE_TITLE')", style="display:none"></a>
                                <a title="Cancel" href="#" id="btnCancel_@i" class="glyphicon glyphicon-remove-circle" onclick="tblMovie_RowCommand('@objADM.Dummy_Guid', @i, 'CANCEL_REPLACE_TITLE')", style="display:none"></a>
                        }

                                <a title="Delete" href="#" id="btnDelete_@i" class="glyphicon glyphicon-trash" onclick="Ask_Confirmation('Are you sure, you want to delete this record ?', '@objADM.Dummy_Guid', @i, 'DELETE')"></a>
                            }
                        </td>
                    }
                </tr>
                    }
                }
            }
        </tbody>
    </table>
</div>
