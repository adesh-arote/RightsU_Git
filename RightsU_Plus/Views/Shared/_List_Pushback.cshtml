<script type="text/javascript">
    var IsCall = 'Y';
    function SetPaging(txtPageSize) {
        debugger;
        IsCall = 'N';
        var PageNo, recordCnt = 3;
        PageNo = '@ViewBag.PageNo';
        @*recordCnt = '@Model.Select(i => i.RecordCount).FirstOrDefault()';*@
        recordCnt = '@ViewBag.RecordCount';
        $("#lblTotal").text('Total Records : ' + recordCnt);
        PageNo = PageNo - 1;
        PageNo = PageNo < 0 ? 0 : PageNo;
        var hdnCurrentPageNo = parseInt(PageNo) + 1;
        $('#hdnCurrentPageNo').val(hdnCurrentPageNo);
        var opt = { callback: pageselectCallback };
        opt["items_per_page"] = txtPageSize; //$("#txtPageSize").val();
        opt["num_display_entries"] = 5;
        opt["num"] = 1;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = PageNo;
        $("#Pagination").pagination(recordCnt, opt);
    }
    function pageselectCallback(page_index, jq) {
        if (ValidatePageSize()) {
            if (IsCall == 'Y') {
                var ViewType = $('input[name=optLicnsorHB]:radio:checked').val()
                Bind_Grid(ViewType, page_index, 'Y');
            }
            else
                IsCall = 'Y';
        }
    }
    function Show_Restriction_Remark_popup(Counter) {
        var Remark = $("#hdnRemarks_" + Counter).val();
        if (Remark != "") {
            $("#lblRestRemark").text(Remark);
            $('#popRestrictionRemark').modal();
        }
    }
</script>
<style>
    span::after {
        content: "\200E‎";
    }

    label::after {
        content: "\200E‎";
    }

    .active-result::after {
        content: "\200E‎";
    }
</style>
@model IEnumerable<RightsU_Entities.USP_List_Rights_Result>
@using UTOFrameWork.FrameworkClasses
@if (ViewBag.Mode != null && (ViewBag.Mode == "LIST" || ViewBag.Mode == "EDIT"))
{
    int counter = 0;
    <input type="hidden" id="hdnCurrentID" />
    @Html.Hidden("hdnCommandName", "SAVE")
    foreach (var item in Model)
    {
        counter += 1;
        <div class="grid_item">
            @Html.Hidden("Deal_Code", item.Deal_Code)
            @Html.Hidden("hdnSave_Message")
            @Html.Hidden("hdnCurrentID")
            @Html.Hidden("hdnCurrentPageNo")
            @Html.Hidden("hdnRightCode", item.Rights_Code, new { id = counter + "_hdnRightCode" })
            @Html.Hidden("hdnTitleCode", item.Title_Code, new { id = counter + "_hdnTitleCode" })
            @Html.Hidden("hdnPlatformCode", item.Platform_Code, new { id = counter + "_hdnPlatformCode" })
            @Html.Hidden("hdnEpisodeFrom", item.Episode_From, new { id = counter + "_hdnEpisodeFrom" })
            @Html.Hidden("hdnEpisodeTo", item.Episode_To, new { id = counter + "_hdnEpisodeTo" })

            <ul>
                <li class="title" title="Title">
                    <div class="expandable">
                        @*@Html.Label("Title_Name", item.Title_Name)*@
                        <label for="Title_Name">@item.Title_Name</label>
                    </div>
                </li>
                <li class="period">
                    @if (@item.Right_Type == "Y" && @item.Term != null)
                    {
                        var arr = item.Term.Split('.');
                        var str = arr[0] + " years";

                        if (arr[1] != "0")
                        {
                            str += " " + arr[1] + " months";
                        }

                        //@Html.Label("TermY", str, new { @title = "Term" })
                        <label for="TermY" title="Term">@str</label>
                    }
                    else
                    {
                        //@Html.Label("TermY", item.Right_Term, new { @title = "Term" })
                        <label for="TermY" title="Term">@item.Right_Term</label>
                    }

                    @if (item.Rights_Start_Date != null && item.Rights_End_Date != null)
                    {
                        <text> (</text>
                        @Convert.ToDateTime(item.Rights_Start_Date).ToString(GlobalParams.DateFormat_Display).Trim()
                        <text> To </text>
                        @Convert.ToDateTime(item.Rights_End_Date).ToString(GlobalParams.DateFormat_Display).Trim()
                        <text>)</text>
                    }
                </li>
                <li class="yes_no">
                    @*@Html.Label("Tentative", item.Is_Tentative, new { @title = "Tentative" })*@
                    <label for="Tentative" title="Tentative">@item.Is_Tentative</label>

                    <span class="seperator">| </span>

                    @*@Html.Label("Title_Language_Right", item.Title_Language_Right, new { @title = "Title Language" })*@
                    <label for="Title_Language_Right" title="Title Language">@item.Title_Language_Right</label>

                    <span class="seperator">| </span>

                    <a title="Remark" href="#" class="view_link btnRestriction" data-target="#popPlatformRights"
                       data-toggle="modal" onclick="Show_Restriction_Remark_popup(@counter);">
                        @*@Html.Hidden("hdnRemarks_" + @counter, item.Remarks)*@
                        <input id="hdnRemarks_@counter" name="hdnRemarks_@counter" type="hidden" value="@item.Remarks">
                        <img src="~/Images/remarks.png" alt="" style="border: 0px;" />
                    </a>
                </li>
                <li class="action">
                    @if (ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_VIEW && ViewBag.Deal_Mode != GlobalParams.DEAL_MODE_APPROVE)
                    {
                        <a title="Edit" href="#" class="glyphicon glyphicon-pencil" onclick="Edit_Pushback('@counter');"></a>
                        <a title="Delete" href="#" class="glyphicon glyphicon-trash " id="" onclick="return ValidateDelete('@counter');"></a>
                    }
                </li>
            </ul>
            <ul>
                <li class="platform" title="Platform">
                    <div class="expandable">
                        <ul>
                            <li>
                                @Html.Raw(item.Platform_Name.Replace("~", "</li><li>"))
                            </li>
                        </ul>
                    </div>
                </li>
                <li class="region" title="Region">
                    <div class="expandable">
                        @if (item.Country != null && item.Country != "")
                        {
                            //@Html.Label("Territory", item.Country)
                            <label for="Territory">@item.Country</label>
                        }
                        else
                        {
                            //@Html.Label("Territory", item.Territory)
                            <label for="Territory">@item.Territory</label>
                        }
                    </div>
                </li>
                <li title="Subtitling">
                    <div class="expandable">
                        @*@Html.Label("Sub_Titling_Language", @item.Sub_Titling_Language)*@
                        <label for="Sub_Titling_Language">@item.Sub_Titling_Language</label>
                    </div>
                </li>
                <li title="Dubbing">
                    <div class="expandable">
                        @*@Html.Label("Dubbing_Titling_Language", item.Dubbing_Titling_Language)*@
                        <label for="Dubbing_Titling_Language">@item.Dubbing_Titling_Language</label>
                    </div>
                </li>
            </ul>
        </div>
    }
}

<div aria-labelledby="myModalLabel" class="form_wrapper modal fade in" id="popRestrictionRemark" role="dialog" tabindex="-1" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content clearfix">
            <form class="form" id="movie_popup">
                <div class="form_wrapper">
                    <div class="form_fields acq">
                        <div class="modal_block modal_header">
                            <a class="close" data-dismiss="modal" href="#">
                                <span>×</span>
                                <span class="sr-only">Close</span>
                            </a>
                            <h2>Remark</h2>
                        </div>
                        <div class="modal_block">
                            <span id="lblRestRemark"></span>
                        </div>
                        <div class="modal_block_full">
                            <div class="form_links">
                                <ul class="modal_block clearfix">
                                    <li>
                                        <a data-dismiss="modal" class="btn btn-primary btnCancel" href="#">cancel</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>