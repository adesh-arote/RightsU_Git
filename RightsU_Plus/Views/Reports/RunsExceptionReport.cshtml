@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<link href="~/CSS/sumoselect.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" rel="stylesheet" />
<script src="~/JS_Core/jquery.sumoselect.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
@*<style>
    #ddlDateTimeFormat_chosen{
        width:200px!important;
    }
</style>*@
<script>
    var URL_BindTitle = '@Url.Action("BindTitleForRunException", "Reports")';
    var URL_BindRunsExceptionReport = '@Url.Action("BindRunExceptionReport", "Reports")';
    var dealType = "M";

    $(document).ready(function () {
        debugger;
        dealType = "M";
        if (dealType == "M") {
            debugger;
            $("#txtEpFrom").prop("disabled", true);
            $('#txtEpTo').prop('disabled', true);
        }
        if ('RTL' == '@objMessageKey.LayoutDirection') {
            $('.white').css("text-align", "right");
            $('.txtBoxCs').css("text-align", "right");
        }
        addNumeric();
    });

    $(function () {
        $("#rbMovie , #rbProgram").change(function () {
            debugger;
            var checkedPrgram = $('#rbProgram').is(':checked');
            var checkedMovie = $('#rbMovie').is(':checked');
            if (checkedMovie == true) {
                dealType = "M";
                $("#txtEpFrom").prop("disabled", true);
                $('#txtEpTo').prop('disabled', true);
            }
            else {
                dealType = "P";
                $("#txtEpFrom").prop("disabled", false);
                $('#txtEpTo').prop('disabled', false);
            }

            $('#txtEpFrom').val('');
            $('#txtEpTo').val('');
            $('#txtTitle').val('');
            $('#hdnTitleCode').val('0');
        });

        $('#txtfrom').change(function () {
            SetMinDt();
        });

        $('#txtto').change(function () {
            SetMaxDt();
        });
    });

    function addNumeric() {
        debugger;
        $(".episodeRange").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 100,
            min: 1
        });
    }

    function SetMaxDt() {
        setMinMaxDates('txtfrom', '', $('#txtto').val());
    }

    function SetMinDt() {
        setMinMaxDates('txtto', $('#txtfrom').val(), '');
    }

    function Clear() {
        debugger;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        $('#txtfrom').val('');
        $('#txtto').val('');
        $('#txtTitle').val('');
        $('#hdnTitleCode').val('0');
    }

    function btnShow_OnClick() {
        debugger;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        var str = "";
        var returnVal = true;
        var titleList = $('#txtTitle').val();
        //var checkedPrgram = $('#rbProgram').is(':checked');
        //var checkedMovie = $('#rbMovie').is(':checked');
        //var EpisodeFrom = $('#txtEpFrom').val();
        //var EpisodeTo = $('#txtEpTo').val();

        //var dealType = "";
        //if (checkedMovie == true)
        //    dealType = "M";
        //else
        //    dealType = "P";
        if ($('#txtfrom').val() == '' && $('#txtto').val() != '') {
            showAlert('E', '@objMessageKey.FromPeriodcannotbeblank');
            return false;
        }
        if($('#txtfrom').val() != '' && $('#txtto').val() == '')
        {
            showAlert('E', '@objMessageKey.ToPeriodcannotbeblank');
            return false;
        }
        if ($('#hdnTitleCode').val() == '0' && $('#txtfrom').val() == '' && $('#txtto').val() == '') {
            showAlert('E', 'Please Select atleast one search criteria');
            returnVal = false;
        }
        if (!$('.episodeRange').is('[disabled=disabled]')) {
            if ($('#txtEpFrom').val() == '' && $('#txtEpTo').val() != '' || $('#txtEpTo').val() == '' && $('#txtEpFrom').val() != '') {
                showAlert('E', 'Plesae fill episode number fields properly');
                return false;
            }
            if ($('#txtEpFrom').val() > $('#txtEpTo').val()) {
                showAlert('E', 'Episode From number should not be greater than Episode To');
                return false;
            }
        };

       
        if (titleList == 0) {
            titleList = "";
        }
        if (returnVal) {
            $.ajax({
                type: "POST",
                url: URL_BindRunsExceptionReport,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    TitleCodes: titleList,
                    FromDate: $('#txtfrom').val(),
                    ToDate: $('#txtto').val(),
                    TitleType: dealType,
                    //datetimeformat: $('#ddlDateTimeFormat').val(),
                    //dateformat: $('#ddlDateFormat').val(),
                    EpisodeFrom: $('#txtEpFrom').val(),
                    EpisodeTo: $('#txtEpTo').val()
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        $('#divResult').empty();
                        $('#divResult').html(result);                       
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
    }

    function PopulateTitleNameForRunsEx(keyword) {
        debugger;
        if ($('#txtTitle').val().length == "0") {
            $('#hdnTitleCode').val(0);
        }
        var selectedtxt = $('#txtTitle').val()
        var txt = selectedtxt.split('﹐');
        var iscomplete = true;
        if (txt[txt.length - 1].trim() == "")
            iscomplete = false;
        if (iscomplete) {
            $("#txtTitle").autocomplete({
                focus: function () {
                    return false;
                },
                search: function (e, u) {
                    $(this).addClass('loader');
                },
                source: function (request, response) {
                    var param = {
                        dealType: dealType,
                        keyword: $('#txtTitle').val()

                    };
                    $.ajax({
                        url: URL_BindTitle,
                        data: JSON.stringify(param),
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; },
                        success: function (data) {
                            if (data.length == 0) {
                                data[0] = 'Result Not Found';
                                response($.map(data, function (v, i) {
                                    $('#txtTitle').removeClass('loader');
                                    return {
                                        label: '@objMessageKey.ResultNotFound',
                                        val: '0'
                                    }
                                }))
                            }
                            else {
                                response($.map(data, function (v, i) {
                                    $('#txtTitle').removeClass('loader');
                                    return {
                                        label: v.Text,
                                        val: v.Value
                                    }
                                }))
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {

                            alert("Error" + textStatus);
                        }
                    });
                },
                select: function (event, i) {
                    debugger;
                    if (i.item.value != "@objMessageKey.ResultNotFound") {
                        var text = this.value.split(/﹐\s*/);
                        text.pop();
                        text.push(i.item.value);
                        text.push("");
                        this.value = text;
                        this.value = text.join("﹐");
                        var value = $("#hdnTitleCode").val().split(/,\s*/);
                        value.pop();
                        value.push(i.item.val);
                        value.push("");
                        $("#hdnTitleCode")[0].value = value.join(", ");
                        return false;
                    }
                    else {
                        $('#txtTitle').val("");
                        return false;
                    }
                },
                minLength: 3,
                open: function (event, ui) {
                    $(".ui-autocomplete").css("position", "absolute");
                    $(".ui-autocomplete").css("max-height", "200px");
                    $(".ui-autocomplete").css("max-width", "400px");
                    $(".ui-autocomplete").css("overflow-y", "auto");
                    $(".ui-autocomplete").css("overflow-x", "hidden");
                    $(".ui-autocomplete").css("z-index", "2147483647");
                    $(".ui-autocomplete").css("direction", "@objMessageKey.LayoutDirection");
                },

            });
        }
        else
            return false;
    }

</script>

<style>
     #divFilter {
        background: #eee;
        padding: 5px;
        padding-left: 10px;
        padding-right: 10px;
    }
      #ddlTitle_chosen {
        max-width: 60%;
    }
</style>

<div class="main_section">
    <section class="rightsU_container clearfix">
        <div class="container acq main_col">
            <h2 style="direction:@objMessageKey.LayoutDirection">@objMessageKey.RunsExceptionReport</h2>
            <div id="divFilter" style="display:grid;">
                <div class="row">
                    <div class="col-md-3">
                        <div class="col-md-3">
                            <b>@objMessageKey.Type:</b>
                        </div>
                        <div class="col-md-9">
                            <input type="radio" id="rbSchedule" name="Schedule" checked="checked" /> &nbsp; @objMessageKey.Schedule
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="col-md-5">
                            <b>@objMessageKey.TitleType:</b>
                        </div>
                        <div class="col-md-7">
                            <input type="radio" id="rbMovie" name="titleType" checked="checked" /> <text>@objMessageKey.Movie</text>
                            <span style="padding-left:10%;"></span>
                            <input type="radio" id="rbProgram" name="titleType" /> <text>@objMessageKey.Program</text>
                        </div>
                    </div>

                    <div class="col-md-5">
                        <div class="col-md-3">
                            <b>@objMessageKey.Title:</b>
                        </div>
                        <div class="col-md-9">
                            <input type="text" id="txtTitle" class="search" maxlength="100" placeholder="@objMessageKey.Title" onkeyup="PopulateTitleNameForRunsEx(event)" autocomplete="on" style="width:100%;" />
                            <input type="hidden" id="hdnTitleCode" value="0" />
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-3">
                        <div class="col-md-3">
                            <b>@objMessageKey.episode#</b>
                        </div>
                        <div class="col-md-9">
                            <input type="text" id="txtEpFrom" class="episodeRange" placeholder="@objMessageKey.From" style="width:84px" />
                            <input type="text" id="txtEpTo" class="episodeRange" placeholder="@objMessageKey.To" style="width:84px" />
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="col-md-5">
                            <b>@objMessageKey.FromDate:</b>
                        </div>
                        <div class="col-md-5">
                            <input type="text" title="@objMessageKey.FromDate" class="isDatepicker shortDate common" value="" id="txtfrom" style="width:100%;" placeholder="DD/MM/YYYY" autocomplete="off" />
                        </div>
                    </div>

                    <div class="col-md-5">
                        <div class="col-md-3">
                            <b>@objMessageKey.ToDate:</b>
                        </div>
                        <div class="col-md-4">
                            <input type="text" title="@objMessageKey.ToDate" class="isDatepicker shortDate common" value="" id="txtto" style="width:100%;" placeholder="DD/MM/YYYY" autocomplete="off" />
                        </div>
                        <div class="col-md-5" style="text-align: end;">
                            <input type="button" id="btnShow" class="btn btn-primary" value="@objMessageKey.Show" onclick="return btnShow_OnClick()">
                            <input type="button" id="btnClear" class="btn btn-primary" value="@objMessageKey.ClearAll" onclick="Clear()" />
                        </div>
                    </div>
            </div>
        
            <div id="divResult">

            </div>
        </div>
    </section>
</div>

@*<td class="searchborder"></td>*@