@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}

<link href="~/CSS/sumoselect.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" rel="stylesheet" />
<script src="~/JS_Core/jquery.sumoselect.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script>
    var URL_SetMinDt = '@Url.Action("SetMinDt", "Reports")';
    var URL_BindMusicAiringReport = '@Url.Action("BindMusicAiringReport", "Reports")';
    var URL_AutoMusicTrackName = '@Url.Action("AutoMusicTrackName", "Reports")';
    var URL_ValidationDate = '@Url.Action("ValidationDate", "Reports")';
    var contentCode, dateFrom, dateTo, episodeFrom, episodeTo, musicTrackCode, channelcode;
    $(document).ready(function () {
        $('#ddlContent').SumoSelect();
        $('#ddlChannel').SumoSelect();
        $('#txtDateFrom').val('@ViewBag.fromDate');
        $('#txtDateTo').val('@ViewBag.toDate');
    });

    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 13) {
            return false;
        }
        else {
            return true;
        }
    }
    function ValidationDate() {
        debugger
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        var returnVal = true;
        dateFrom = $('#txtDateFrom').val();
        dateTo = $('#txtDateTo').val();
        if (dateFrom == "") {
            $('#txtDateFrom').attr('required', true);
            returnVal = false;
        }
        if (dateTo == "") {
            $('#txtDateTo').attr('required', true);
            returnVal = false;
        }
        if (returnVal) {
            $.ajax({
                type: "POST",
                url: URL_ValidationDate,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    dateFrom: dateFrom,
                    dateTo: dateTo

                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        if (result.Message != "") {
                            showAlert("E", result.Message, "")
                        }
                        else {
                            btnShow_OnClick();
                        }
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
    }
    function AutoMusicTrackName(keyword) {
        debugger;
        var selectedtxt = $('#txtMusicTrack').val()
        var txt = selectedtxt.split('﹐');
        var iscomplete = true;
        if (txt[txt.length - 1].trim() == "")
            iscomplete = false;
        if (iscomplete) {
            $("#txtMusicTrack").autocomplete({
                focus: function () {
                    return false;
                },
                search: function (e, u) {
                    $(this).addClass('loader');
                },
                source: function (request, response) {
                    var param = {
                        keyword: $('#txtMusicTrack').val()
                    };
                    $.ajax({
                        url: URL_AutoMusicTrackName,
                        data: JSON.stringify(param),
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; },
                        success: function (data) {
                            if (data.length == 0) {
                                data[0] = 'Result Not Found';
                                response($.map(data, function (v, i) {
                                    $('#txtMusicTrack').removeClass('loader');
                                    return {
                                        label: '@objMessageKey.ResultNotFound',
                                        val: '0'
                                    }
                                }))
                            }
                            else {
                                response($.map(data, function (v, i) {
                                    $('#txtMusicTrack').removeClass('loader');
                                    return {
                                        label: v.Music_Title_Name,
                                        val: v.Music_Title_Code
                                    }
                                }))
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {

                            alert("Error" + textStatus);
                        }
                    });
                },
                select: function (event, i) {
                    debugger;
                    if (i.item.value != "@objMessageKey.ResultNotFound") {
                        var text = this.value.split(/﹐\s*/);
                        text.pop();
                        text.push(i.item.value);
                        text.push("");
                        this.value = text;
                        this.value = text.join("﹐");
                        var value = $("#hdnMusicCode").val().split(/,\s*/);
                        value.pop();
                        value.push(i.item.val);
                        value.push("");
                        $("#hdnMusicCode")[0].value = value.join(", ");
                        return false;
                    }
                    else
                    {
                        $('#txtMusicTrack').val("");
                        return false;
                    }
                },
                minLength: 3,
                open: function (event, ui) {
                    $(".ui-autocomplete").css("position", "absolute");
                    $(".ui-autocomplete").css("max-height", "200px");
                    $(".ui-autocomplete").css("max-width", "250px");
                    $(".ui-autocomplete").css("overflow-y", "auto");
                    $(".ui-autocomplete").css("overflow-x", "hidden");
                    $(".ui-autocomplete").css("z-index", "2147483647");
                    $(".ui-autocomplete").css("direction", "@objMessageKey.LayoutDirection");
                },

            });
        }
        else
            return false;
    }
    function btnShow_OnClick() {
        debugger;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        var returnVal = true;
        contentCode = $('#ddlContent').val();
        dateFrom = $('#txtDateFrom').val();
        dateTo = $('#txtDateTo').val();
        episodeFrom = $('#txtEpisodeFrom').val();
        episodeTo = $('#txtEpisodeTo').val();
        musicTrackCode = $('#txtMusicTrack').val();
        channelCode = $('#ddlChannel').val();

        if (contentCode == null) {
            contentCode = "";
        }
        else {
            contentCode = $('#ddlContent').val().join(',');
        }
        if (dateFrom == "") {
            $('#txtDateFrom').attr('required', true);
            returnVal = false;
        }
        if (dateTo == "") {
            $('#txtDateTo').attr('required', true);
            returnVal = false;
        }
        if (channelCode == null) {
            $('#divddlChannel').addClass("required");
            returnVal = false;
        }
        else {
            channelCode = $('#ddlChannel').val().join(',');
        }
        if (musicTrackCode == null)
            musicTrackCode = "";
        else {
            musicTrackCode = $('#txtMusicTrack').val();
        }
        if (returnVal) {
            $.ajax({
                type: "POST",
                url: URL_BindMusicAiringReport,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    contentCode: contentCode,
                    dateFrom: dateFrom,
                    dateTo: dateTo,
                    episodeFrom: episodeFrom,
                    episodeTo: episodeTo,
                    musicTrackCode: musicTrackCode,
                    channelCode: channelCode,
                    dateformat: $('#ddlDateFormat').val(),
                    datetimeFormat: $('#ddlDateTimeFormat').val()
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        $('#divResult').empty();
                        $('#divResult').html(result);
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
    }
    function btnClear_OnClick() {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        $("#ddlContent")[0].sumo.unSelectAll();
        //$("#ddlMusicTrack")[0].sumo.unSelectAll();
        $("#ddlChannel")[0].sumo.unSelectAll();
        $('#txtEpisodeFrom').val('');
        $('#txtEpisodeTo').val('');
        $('#txtDateFrom').val('');
        $('#txtDateTo').val('');
        $('#txtMusicTrack').val('');
        $('#hdnMusicCode').val('');
    }
    function ShowHideSearchCriteria(show) {
        if (show == 'S') {
            $('#divFilter').show();
            $('#tdShowImg').hide();
            $('#tdHideImg').show();
            $('#divFilter').width = '100%';
        }
        else if (show == 'H') {
            debugger;
            $('#divFilter').hide();
            $('#tdHideImg').hide();
            $('#tdShowImg').show();
            $('#divFilter').width = '100%';
        }
    }
</script>
<style>
    #divFilter {
        background: #eee;
        padding: 5px;
        padding-left: 10px;
        padding-right: 10px;
    }

    #divResult {
        margin-top: 10px;
    }

    #ddlBusinessUnit_chosen {
        width: 100%;
        max-width: 100%;
    }

    input.isDatepicker {
        width: 167px;
        z-index: auto;
    }
    .SumoSelect {
    width: 167px;
}
    #divddlChannel{
          width: 169px;
    }
    #divddlContent{
        width: 169px;
    }
    #ddlDateTimeFormat_chosen{
       width:163px!important;
    }
</style>
<div class="main_section">
    <section class="rightsU_container clearfix">
        <div class="container acq main_col">
            <div class="title_block dotted_border clearfix">
                <h2 style="direction:@objMessageKey.LayoutDirection">@objMessageKey.MusicAiringReport</h2>
            </div>
            <div id="divFilter">
                <table>
                    <tbody>
                        <tr>
                            <td style="width:10%"><b>@objMessageKey.FromDate: </b></td>
                            <td style="width:10%">
                                <input type="text" class="isDatepicker" id="txtDateFrom" name="Date_From" placeholder="DD/MM/YYYY" width="100"
                                       title="@objMessageKey.FromDate" ondrop="return false" onpaste="return false" onkeypress="return false" onkeydown="return false" />
                            </td>
                            <td style="width:6%"><b>@objMessageKey.ToDate: </b></td>
                            <td style="width:8%">
                                <input type="text" class="isDatepicker" id="txtDateTo" name="Date_To" placeholder="DD/MM/YYYY" width="100"
                                       title="@objMessageKey.ToDate" ondrop="return false" onpaste="return false" onkeypress="return false" onkeydown="return false" />
                            </td>
                            <td style="width:7.5%"><b>@objMessageKey.Content: </b></td>
                            <td style="width:15%">
                                <div id="divddlContent">
                                    @Html.DropDownList("Content", (List<SelectListItem>)ViewBag.ContentList , new { @id = "ddlContent", @Multiple = "Multiple" })
                                </div>
                            </td>
                            <td style="width:10%"><b>@objMessageKey.EpisodeFrom : </b></td>
                            <td style="width:5%">
                                <input type="text" class="smallTextBox" id="txtEpisodeFrom" onkeypress="return isNumber(event);" />
                            </td>
                            <td style="width:3.5%"><b>@objMessageKey.To : </b></td>
                            <td style="width:5%">
                                <input type="text" class="smallTextBox" id="txtEpisodeTo" onkeypress="return isNumber(event);" />
                            </td>
                            <td style="width:4%;vertical-align:bottom;">
                                <input type="button" id="btnShow" class="btn btn-primary" value="@objMessageKey.Show" onclick="ValidationDate()">
                                </td>
                        </tr>
                        <tr>
                            <td style="width:10%"><b>@objMessageKey.MusicTrack: </b></td>
                            <td style="width:16%">
                                <input type="text" placeholder="@objMessageKey.MusicTrack" id="txtMusicTrack" autocomplete="on" style="width:167px" onkeyup="AutoMusicTrackName(event)" />
                                <input type="hidden" id="hdnMusicCode" />
                                @*@Html.DropDownList("Music Track", (List<SelectListItem>)ViewBag.MusicTrackList, new { @id = "ddlMusicTrack", @Multiple = "Multiple" })*@
                            </td>
                            <td style="width:6%"><b>@objMessageKey.Channel: </b></td>
                            <td style="width:15%">
                                <div id="divddlChannel">
                                    @Html.DropDownList("Channel", (List<SelectListItem>)ViewBag.ChannelList, new { @id = "ddlChannel", @Multiple = "Multiple" })
                                </div>
                            </td>
                            <td style="width:8%"><b>@objMessageKey.DateTimeFormat:</b></td>
                            <td style="width:15%">
                                @Html.DropDownList("DateTimeFormat", (List<SelectListItem>)ViewBag.DateTimeFormat, new { @id = "ddlDateTimeFormat", @class = "form_input chosen-select" })
                             </td>
                            <td style="width:8%"><b>@objMessageKey.DateFormat:</b></td>
                            <td style="width:15%" colspan="3">
                                @Html.DropDownList("DateFormat", (List<SelectListItem>)ViewBag.DateFormat, new { @id = "ddlDateFormat", @class = "form_input chosen-select" })
                            </td>
                            <td style="width:4%;vertical-align:bottom;">
                                @*<input type="button" id="btnShow" class="btn btn-primary" value="Show" onclick="ValidationDate()">&nbsp;&nbsp;*@
                                <input type="button" id="btnclearAll" class="btn btn-primary" value="@objMessageKey.ClearAll" onclick="btnClear_OnClick();">
                            </td>
                            @*<td>
                                
                            </td>*@
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="title_block dotted_border clearfix">
            </div>
            <div>
                <table>
                    <tr align="left" id="trImg">
                        <td id='tdShowImg' align='left' style="display: none">
                            <input type="image" title="Expand" alt="Expand Search Criteria" style="cursor:pointer;" src="~/Images/expand.jpg" onclick="return ShowHideSearchCriteria('S');" />
                        </td>
                        <td id='tdHideImg' align="left">
                            <input type="image" title="Collapse" alt="Collapse Search Criteria" style="cursor:pointer;" src="~/Images/collapse.jpg" onclick="return ShowHideSearchCriteria('H');" />
                        </td>
                    </tr>
                </table>
            </div>
            <div id="divResult">

            </div>
        </div>
    </section>
</div>
