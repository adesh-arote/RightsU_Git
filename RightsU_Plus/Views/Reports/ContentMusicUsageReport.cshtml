@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}

<link href="~/CSS/sumoselect.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" rel="stylesheet" />
<script src="~/JS_Core/jquery.sumoselect.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<script>
    var URL_BindContentMusicUsageReport = '@Url.Action("BindContentMusicUsageReport", "Reports")';
    var URL_PopulateTitle = '@Url.Action("PopulateTitleForContentWise", "Reports")';
    $(function () {
        $('#txtfrom').change(function () {
            SetMinDt();
        });
        $('#txtto').change(function () {
            SetMaxDt();
        });
        $('.date-picker').datepicker({
            changeMonth: true,
            changeYear: true,
            //  showButtonPanel: true,
            dateFormat: 'MM yy',
            onClose: function (dateText, inst) {
                debugger;
                $(this).datepicker('setDate', new Date(inst.selectedYear, inst.selectedMonth, 1));
            }
        });
    });
    function SetMaxDt() {
        setMinMaxDates('txtfrom', '', $('#txtto').val());
    }
    function SetMinDt() {
        setMinMaxDates('txtto', $('#txtfrom').val(), '');
    }
    function btnShow_OnClick() {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        var returnVal = true;
        var str = "";
        var titleList = $('#txtTitle').val();

        if (titleList == null || titleList == 0 || titleList == undefined) {
            showAlert('E', '@objMessageKey.PleaseSelectContent');
            return false;
        }
        if ($('#txtfrom').val() == '' && $('#txtto').val() != '') {
            showAlert('E', '@objMessageKey.PleaseSelectAiringFromDate');
            return false;
        }
        if ($('#txtfrom').val() != '' && $('#txtto').val() == '') {
            showAlert('E', '@objMessageKey.PleaseSelectAiringToDate');
            return false;
        }
        if (returnVal) {
            $.ajax({
                type: "POST",
                url: URL_BindContentMusicUsageReport,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    TitleCodes: titleList,
                    FromDate: $('#txtfrom').val(),
                    ToDate: $('#txtto').val(),
                    dateformat: $("#ddlDateFormat").val()
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        $('#divResult').empty();
                        $('#divResult').html(result);
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
    }
    function Clear() {
        $('#txtfrom').val('');
        $('#txtto,#txtTitle').val('');
        $('#hdnTitleCode').val(0);
    }
    function PopulateTitle(keyword) {
        var Type = "";
        if ($('#txtTitle').val().length == "0") {
            $('#hdnTitleCode').val(0);
        }
        var selectedtxt = $('#txtTitle').val()
        var txt = selectedtxt.split('﹐');
        var iscomplete = true;
        if (txt[txt.length - 1].trim() == "")
            iscomplete = false;
        if (iscomplete) {
            $("#txtTitle").autocomplete({
                focus: function () {
                    return false;
                },
                search: function (e, u) {
                    $(this).addClass('loader');
                },
                source: function (request, response) {
                    var param = {
                        keyword: $('#txtTitle').val()

                    };
                    $.ajax({
                        url: URL_PopulateTitle,
                        data: JSON.stringify(param),
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        dataFilter: function (data) { return data; },
                        success: function (data) {
                            if (data.length == 0) {
                                data[0] = 'Result Not Found';
                                response($.map(data, function (v, i) {
                                    $('#txtTitle').removeClass('loader');
                                    return {
                                        label: '@objMessageKey.ResultNotFound',
                                        val: '0'
                                    }
                                }))
                            }
                            else {
                                response($.map(data, function (v, i) {
                                    $('#txtTitle').removeClass('loader');
                                    return {
                                        label: v.Title_Name,
                                        val: v.Title_Code
                                    }
                                }))
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {

                            alert("Error" + textStatus);
                        }
                    });
                },
                select: function (event, i) {
                    debugger;
                    if (i.item.value != "@objMessageKey.ResultNotFound") {
                        var text = this.value.split(/﹐\s*/);
                        text.pop();
                        text.push(i.item.value);
                        text.push("");
                        this.value = text;
                        this.value = text.join("﹐");
                        var value = $("#hdnTitleCode").val().split(/,\s*/);
                        value.pop();
                        value.push(i.item.val);
                        value.push("");
                        $("#hdnTitleCode")[0].value = value.join(", ");
                        return false;
                    }
                    else {
                        $('#txtTitle').val("");
                        return false;
}
                },
                minLength: 3,
                open: function (event, ui) {
                    $(".ui-autocomplete").css("position", "absolute");
                    $(".ui-autocomplete").css("max-height", "200px");
                    $(".ui-autocomplete").css("max-width", "350px");
                    $(".ui-autocomplete").css("overflow-y", "auto");
                    $(".ui-autocomplete").css("overflow-x", "hidden");
                    $(".ui-autocomplete").css("z-index", "2147483647");
                    $(".ui-autocomplete").css("direction", "@objMessageKey.LayoutDirection");
                },

            });
        }
        else
            return false;
    }
    function ShowHideSearchCriteria(show) {
        if (show == 'S') {
            $('#divFilter').show();
            $('#tdShowImg').hide();
            $('#tdHideImg').show();
            $('#divFilter').width = '100%';
        }
        else if (show == 'H') {
            debugger;
            $('#divFilter').hide();
            $('#tdHideImg').hide();
            $('#tdShowImg').show();
            $('#divFilter').width = '100%';
        }
    }
</script>
<style>
      
        .ui-datepicker-calendar {
    display: none;
    }
#ui-datepicker-div{
    position: absolute;
    top: 168px;
    left: 628.547px;
    z-index: 2;
    display: none;
    width: 137px;
}
        #divFilter {
        background: #eee;
        padding: 5px;
        padding-left: 10px;
        padding-right: 10px;
    }
</style>
<div class="main_section">
    <section class="rightsU_container clearfix">
        <div class="container acq main_col">
            <h2 style="direction: @objMessageKey.LayoutDirection">@objMessageKey.ContentwiseMonthlyMusicConsumption</h2>
            <div id="divFilter">
                <table>
                    <tr>
                        <td>
                            <div>
                                <table class="table">
                                    <tr>
                                        <td style="width:5%;">
                                            @objMessageKey.Content:
                                        </td>
                                        <td style="width:30%;">
                                            <input type="text" id="txtTitle" class="search" maxlength="100" style="width:318px" placeholder="@objMessageKey.Title" onkeyup="PopulateTitle(event)" autocomplete="on" />
                                            <input type="hidden" id="hdnTitleCode" value="0" />
                                        </td>
                                        
                                        <td style="width:27%;">
                                          @objMessageKey.AiringDate <input type="text" class="date-picker" title="@objMessageKey.From" value="" id="txtfrom" style="width:30%;" placeholder="DD/MM/YYYY" />
                                            @objMessageKey.To <input type="text" class="date-picker" title="@objMessageKey.To" value="" id="txtto" style="width:30%;" placeholder="DD/MM/YYYY" />
                                        </td>
                                        <td style="width:9%">@objMessageKey.DateFormat:</td>
                                        <td style="width:17%">
                                            @Html.DropDownList("DateFormat", (List<SelectListItem>)ViewBag.DateFormat, new { @id = "ddlDateFormat", @class = "form_input chosen-select" })
                                    </td>
                                        <td>
                                            <input type="button" id="btnShow" class="btn btn-primary" value="@objMessageKey.Show" onclick="return btnShow_OnClick()">
                                            <input type="button" id="btnClear" class="btn btn-primary" value="@objMessageKey.Reset" onclick="return Clear();" />
                                        </td>
                                    </tr>
                                 
                                </table>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
            <div>
                <table>
                    <tr align="left" id="trImg">
                        <td id='tdShowImg' align='left' style="display: none">
                            <input type="image" title="Expand" alt="Expand Search Criteria" style="cursor:pointer;" src="~/Images/expand.jpg" onclick="return ShowHideSearchCriteria('S');" />
                        </td>
                        <td id='tdHideImg' align="left">
                            <input type="image" title="Collapse" alt="Collapse Search Criteria" style="cursor:pointer;" src="~/Images/collapse.jpg" onclick="return ShowHideSearchCriteria('H');" />
                        </td>
                    </tr>
                </table>
            </div>
            <div id="divResult" style="margin-top:10px;">

            </div>
        </div>
    </section>
</div>