@using RightsU_BLL;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }

    LoginEntity objLoginEntity = new LoginEntity();
    if (Session["objLoginEntity"] != null)
    {
        objLoginEntity = (LoginEntity)Session["objLoginEntity"];
    }

    RightsU_Entities.System_Parameter_New AuditReportDaysDiff = new System_Parameter_New_Service(objLoginEntity.ConnectionStringName).SearchFor(s => true).Where(w => w.Parameter_Name == "AuditReportDaysDiff").FirstOrDefault();
    var DaysDiff = AuditReportDaysDiff.Parameter_Value;

}
<link href="~/CSS/sumoselect.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" rel="stylesheet" />
<script src="~/JS_Core/jquery.sumoselect.js?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]"></script>
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

<style>
    #divFilter {
        background: #eee;
        padding: 5px;
        padding-left: 10px;
        padding-right: 10px;
    }

    #divResult {
        margin-top: 10px;
    }

    .SumoSelect {
        width: 220px;
    }

    #ddlMasterList_chosen {
        width: 89% !important;
    }

    #ddlUsers_chosen {
        width: 89% !important;
    }

    #ddlActionTypeList_chosen {
        width: 89% !important;
    }

    input.isDatepicker {
        width: 150px;
        z-index: auto;
    }

    #ddlOrderByList_chosen {
        width: 89% !important;
    }

</style>
<script>

    var URL_BindAuditLog_Search_Controls = '@Url.Action("BindAuditLog_Search_Controls", "Reports")';

    $(document).ready(function () {
        debugger;
        $('#ddlUsers,#ddlActionTypeList').css("display", 'none');
        $('#ddlUsers').SumoSelect();
        $('#ddlActionTypeList').SumoSelect();
        BindAuditLog_Search_Controls();
    });

    // Builds the HTML Table out of myList json data from Ivy restful service.
    function buildHtmlTable(myList) {
        addTable(myList, $("#excelDataTable"));
    }

    function addTable(list, appendObj) {
        var columns = addAllColumnHeaders(list, appendObj);
        for (var i = 0; i < list.length; i++) {
            var row$ = $('<tr/>');
            for (var colIndex = 0; colIndex < columns.length; colIndex++) {
                var cellValue = list[i][columns[colIndex]];

                if (cellValue == null) {
                    cellValue = "";
                }

                if (cellValue.constructor === Array) {
                    $a = $('<td/>');
                    row$.append($a);
                    addTable(cellValue, $a);

                } else if (cellValue.constructor === Object) {

                    var array = $.map(cellValue, function (value, index) {
                        return [value];
                    });

                    $a = $('<td/>');
                    row$.append($a);
                    addObject(array, $a);

                } else {
                    row$.append($('<td style="padding:5px"/>').html(cellValue));
                }
            }
            appendObj.append(row$);
        }
    }

    function addObject(list, appendObj) {
        for (var i = 0; i < list.length; i++) {
            var row$ = $('<tr/>');

            var cellValue = list[i];

            if (cellValue == null) {
                cellValue = "";
            }

            if (cellValue.constructor === Array) {
                $a = $('<td style="padding:5px"/>');
                row$.append($a);
                addTable(cellValue, $a);

            } else if (cellValue.constructor === Object) {

                var array = $.map(cellValue, function (value, index) {
                    return [value];
                });

                $a = $('<td style="padding:5px"/>');
                row$.append($a);
                addObject(array, $a);

            } else {
                row$.append($('<td style="padding:5px"/>').html(cellValue));
            }
            appendObj.append(row$);
        }
    }

    function addAllColumnHeaders(list, appendObj) {
        var columnSet = [];
        var headerTr$ = $('<tr/>');

        for (var i = 0; i < list.length; i++) {
            var rowHash = list[i];
            for (var key in rowHash) {                
                if ($.inArray(key, columnSet) == -1) {    
                    columnSet.push(key);
                    headerTr$.append($('<th style="padding:5px" />').html(key));
                    //if (key == "auditData") {
                    //    columnSet.push(key);
                    //}
                    //else if (key == "paging") {

                    //}
                    //else {      
                    //    columnSet.push(key);
                    //    headerTr$.append($('<th style="padding:5px" />').html(key));
                    //}                    
                }
            }
        }
        appendObj.append(headerTr$);

        return columnSet;
    }

    function BindAuditLog_Search_Controls() {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");

        $.ajax({
                type: "POST",
                url: URL_BindAuditLog_Search_Controls,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {

                        $("#ddlMasterList").empty();
                        $("#ddlUsers").empty();
                        $("#ddlActionTypeList").empty();
                        $("#ddlOrderByList").empty();

                        debugger;

                        $("#ddlMasterList").append($("<option>").val("").text("Please Select"));
                        $(result.lstMasterList).each(function (index, item) {
                            $("#ddlMasterList").append($("<option>").val(this.Value).text(this.Text));
                        });
                        $("#ddlMasterList").trigger("chosen:updated")

                        $(result.lstUsers).each(function (index, item) {
                            $("#ddlUsers").append($("<option>").val(this.Value).text(this.Text));
                        });
                        $("#ddlUsers")[0].sumo.reload();

                        $(result.lstActionType).each(function (index, item) {
                            $("#ddlActionTypeList").append($("<option>").val(this.Value).text(this.Text));
                        });
                        $("#ddlActionTypeList")[0].sumo.reload();

                        $("#ddlOrderByList").append($("<option>").val("").text("Please Select"));
                        $(result.lstOrderByList).each(function (index, item) {
                            $("#ddlOrderByList").append($("<option>").val(this.Value).text(this.Text));
                        });
                        $("#ddlOrderByList").trigger("chosen:updated")
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
    }

    function ClearAll() {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");

        $('#txtLogSearch').val('');

        $("#ddlMasterList").find("option").attr("selected", false);
        $("#ddlMasterList").val('').trigger("chosen:updated");

        $("#ddlUsers").find("option").attr("selected", false);
        $("#ddlUsers").val('')[0].sumo.reload();

        $("#ddlActionTypeList").find("option").attr("selected", false);
        $("#ddlActionTypeList").val('')[0].sumo.reload();

        $('#txtStart').val('');
        $('#txtEnd').val('');

        $("#ddlOrderByList").find("option").attr("selected", false);
        $("#ddlOrderByList").val('').trigger("chosen:updated");

    }

    function ValidateStartDate() {
        debugger;

        if ($("#txtStart").val() == '') {

            showAlert('e', 'Please Select Start Date');
            $("#txtStart").val("");
            return false;
        }
        else {
            var GetStartDt = $("#txtStart").val().split("/");
            var StartDate = new Date(GetStartDt[1] + "/" + GetStartDt[0] + "/" + GetStartDt[2]);
            var formattedStartDt = new Date(StartDate);

            var GetCurrentDt = new Date();
            var CurrentDt = new Date(GetCurrentDt.toISOString().split('T')[0]);

            if (CurrentDt < formattedStartDt) {
                showAlert('e', 'Future Start Date Not Allowed');
                $("#txtStart").val("");
                return false;
            }
        }

    }

    function ValidateEndDate() {
        debugger;

        if ($("#txtStart").val() == '') {

            showAlert('e', 'Please Select Start Date');
            $("#txtStart").val('');
            return false;
        }
        else {
            var GetStartDt = $("#txtStart").val().split("/");
            var StartDate = new Date(GetStartDt[1] + "/" + GetStartDt[0] + "/" + GetStartDt[2]);
            var formattedStartDt = new Date(StartDate);

            var GetEndDt = $("#txtEnd").val().split("/");
            var EndDate = new Date(GetEndDt[1] + "/" + GetEndDt[0] + "/" + GetEndDt[2]);
            var formattedEndDt = new Date(EndDate);

            var GetCurrentDt = new Date();
            var CurrentDt = new Date(GetCurrentDt.toISOString().split('T')[0]);

            if (CurrentDt < formattedStartDt) {
                showAlert('e', 'Future Start Date Not Allowed');
                $("#txtEnd").val('');
                return false;
            }
        }

        if ($("#txtEnd").val() == '') {

            showAlert('e', 'Please Select End Date');
            $("#txtEnd").val('');
            return false;
        }
        else {

            var GetStartDt = $("#txtStart").val().split("/");
            var StartDate = new Date(GetStartDt[1] + "/" + GetStartDt[0] + "/" + GetStartDt[2]);
            var formattedStartDt = new Date(StartDate);

            var GetEndDt = $("#txtEnd").val().split("/");
            var EndDate = new Date(GetEndDt[1] + "/" + GetEndDt[0] + "/" + GetEndDt[2]);
            var formattedEndDt = new Date(EndDate);

            var GetCurrentDt = new Date();
            var CurrentDt = new Date(GetCurrentDt.toISOString().split('T')[0]);

            if (CurrentDt < formattedEndDt) {
                showAlert('e', 'Future End Date Not Allowed');
                $("#txtEnd").val('');
                return false;
            }

            if (formattedStartDt > formattedEndDt) {
                showAlert('e', 'End Date Should Not Less Than Start Date');
                $("#txtEnd").val('');
                return false;
            }

            var days = daysdifference(formattedEndDt, formattedStartDt);
            if (days >= Number(@DaysDiff)) {
                showAlert("E", "Days difference should be bettween 0 to " + @DaysDiff);
                $("#txtEnd").val("");
                return false;
            }
            
        }

    }

    function daysdifference(firstDate, secondDate){
        var startDay = new Date(firstDate);
        var endDay = new Date(secondDate);

        // Determine the time difference between two dates     
        var millisBetween = startDay.getTime() - endDay.getTime();

        // Determine the number of days between two dates  
        var days = millisBetween / (1000 * 3600 * 24);

        // Show the final number of days between dates     
        return Math.round(Math.abs(days));
    }  

    function ValidateSearch() {
        debugger;

        var tmpMasterList = '', txtStart = '', txtEnd = '', tmpOrderByList = '';

        if ($('#ddlMasterList').val())
            tmpMasterList = $('#ddlMasterList').val();

        var txtStart = $('#txtStart').val();

        var txtEnd = $('#txtEnd').val();

        if ($('#ddlOrderByList').val())
            tmpOrderByList = $('#ddlOrderByList').val();

        if (tmpMasterList == '') {
            showAlert('e', 'Please Select Matster Data');
            return false;
        }
        else if (txtStart == '') {
            showAlert('e', 'Please Select Start Date');
            return false;
        }
        else if (txtEnd == '') {
            showAlert('e', 'Please Select End Date');
            return false;
        }
        else {
            AdvanceSearch();
        }
    }

    function AdvanceSearch() {
        debugger;
        var tmpMasterList = '', tmpUsers = '', txtLogSearch = '', txtStart = '', txtEnd = '', tmpActionType = '', tmpOrderByList = '';

        if ($('#ddlMasterList').val())
            tmpMasterList = $('#ddlMasterList').val();

        if ($('#ddlUsers').val())
            tmpUsers = $('#ddlUsers').val().join(',');

        var txtLogSearch = $('#txtLogSearch').val();
        var txtStart = $('#txtStart').val();
        var txtEnd = $('#txtEnd').val();

        if ($('#ddlActionTypeList').val())
            tmpActionType = $('#ddlActionTypeList').val().join(',');

        if ($('#ddlOrderByList').val())
            tmpOrderByList = $('#ddlOrderByList').val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("BindAuditLogDetailsReports", "Reports")',
            traditional: true,
            enctype: 'multipart/form-data',
            async: false,
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                SrchMaster: tmpMasterList,
                SrchUsers: tmpUsers,
                SrchLog: txtLogSearch,
                SrchStartDate: txtStart,
                SrchEndDate: txtEnd,
                SrchActionType: tmpActionType,
                SrchOrderBy: tmpOrderByList
            }),
            success: function (result) {

                if (result == "true") {
                    redirectToLogin();
                }
                else {                    
                    //$('#hdnPageNo').text(1);
                    //$('#hdnPageNo').val(1);
                    //$('#lblRecordCount').text(5);
                    //$("#hdnRecordCount").val(5);
                    //SetPaging()
                    var response = JSON.parse(result);
                    buildHtmlTable(response);                    
                    //$('#lblRecordCount').text(result.Record_Count);
                    //$("#hdnRecordCount").val(result.Record_Count);
                    
                    //$('#divResult').empty();
                    //$('#divResult').html(result);
                }
            },
            error: function (result) {
                alert(result);
            }
        });
    }

</script>
<script>

    function addNumeric() {
        $(".pagingSize").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 99,
            min: 1
        });

        $(".exchangeRate").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: true,
            max: 9999,
            min: 0
        });
    }

    function SetPaging() {
        IsCall = 'N';
        var pageNo = parseInt($('#hdnPageNo').val());
        var recordCount = parseInt($('#hdnRecordCount').val());
        var pagePerBatch = parseInt($('#hdnPagePerBatch').val());
        var recordPerPage = parseInt($('#txtPageSize').val());

        var cnt = pageNo * recordPerPage;
        if (cnt >= recordCount) {
            var v1 = parseInt(recordCount / recordPerPage);
            if ((v1 * recordPerPage) == recordCount)
                pageNo = v1;
            else
                pageNo = v1 + 1;
        }

        if (pageNo == 0)
            pageNo = 1;

        var index = pageNo - 1;
        $('#hdnPageNo').val(pageNo);

        var opt = null;
        opt = { callback: pageselectCallback };
        opt["items_per_page"] = recordPerPage;
        opt["num_display_entries"] = pagePerBatch;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = index;
        $("#Pagination").pagination(recordCount, opt);
    }

    function pageselectCallback(page_index, jq) {
        if (checkCurrentAction()) {
            $('.required').removeClass('required');

            if (!ValidatePageSize())
                return false;

            var pageNo = page_index + 1
            $('#hdnPageNo').val(pageNo);
            if (IsCall == 'Y')
                BindCurrencyList();
            else
                IsCall = 'Y';
        }
    }

    function txtPageSize_OnChange() {
        $("[required='required']").removeAttr("required");
        $('.required').removeClass('required');
        if (!ValidatePageSize())
            return false;

        BindCurrencyList()
        SetPaging();
    }

    function ValidatePageSize() {
        var recordPerPage = $('#txtPageSize').val()
        if ($.trim(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);
            if (pageSize > 0)
                return true;
        }
        $('#txtPageSize').attr('required', true)
        return false
    }

    function pageBinding() {
        BindCurrencyList()
        SetPaging();
    }

</script>


<div class="main_section">
    <section class="rightsU_container clearfix">
        <div class="container acq main_col">
            <div class="title_block dotted_border clearfix">
                <h2>Audit Log Report</h2>
            </div>
            <div id="divFilter">
                <table border="0" style="border-spacing: 5px;border-collapse: separate;padding: 0px;">
                    <tr>
                        <td style="width:10%"><label style="font-weight:bold"> Masters:</label></td>
                        <td style="width:20%">
                            <select id="ddlMasterList" class="form_input chosen-select"></select>
                        </td>
                        <td style="width:10%"><label style="font-weight:bold"> User:</label></td>
                        <td style="width:20%">
                            <select id="ddlUsers" multiple="multiple"></select>
                        </td>
                        <td style="width:10%"><label style="font-weight:bold"> Log Search</label></td>
                        <td style="width:20%">
                            <input type="text" placeholder="Search" class="text" id="txtLogSearch" value='' />
                        </td>
                        <td style="width:10%"><label style="font-weight:bold"> Action Type:</label></td>
                        <td style="width:20%">
                            <select id="ddlActionTypeList" multiple="multiple"></select>
                        </td>
                    </tr>
                    <tr>
                        <td><label style="font-weight:bold">Start Date:</label></td>
                        <td style="width:20%">
                            <input type="text" class="isDatepicker" id="txtStart" name="Start_Date" placeholder="From" width="150px;" autocomplete="off"
                                   title="Start Date" ondrop="return false" onpaste="return false" onkeypress="return false" onkeydown="return false" onchange="ValidateStartDate();" />
                            <input type="hidden" id="hdnStartDate" />
                        </td>
                        <td><label style="font-weight:bold">End Date:</label></td>
                        <td style="width:20%">
                            <input type="text" class="isDatepicker" id="txtEnd" name="End_Date" placeholder="To" width="100" autocomplete="off"
                                   title="End Date" ondrop="return false" onpaste="return false" onkeypress="return false" onkeydown="return false" onchange="ValidateEndDate();" />
                            <input type="hidden" id="hdnEndDate" />
                        </td>
                        <td style="width:10%"><label style="font-weight:bold"> Order By:</label></td>
                        <td style="width:20%">
                            <select id="ddlOrderByList" class="form_input chosen-select"></select>
                        </td>
                        <td colspan="2">
                            <div class="pull-right" style="padding-right: 90px;">
                                <input type="button" id="btnShow" class="btn btn-primary " value="Show" onclick="ValidateSearch()"> &nbsp; &nbsp;
                                <input type="button" id="btnReset" class="btn btn-primary " value="Reset" onclick="ClearAll()">
                            </div>
                        </td>
                    </tr>

                </table>
            </div>
            <div class="title_block dotted_border clearfix">
            </div>

            <div class="paging_area clearfix">
                <span class="pull-left">@objMessageKey.TotalRecords: </span>
                <span class="pull-left" id="lblRecordCount"></span>
                <input type="hidden" id="hdnPageNo" name="hdnPageNo" value="1" />
                <input type="hidden" id="hdnPagePerBatch" name="hdnPagePerBatch" value="5" />
                <input type="hidden" id="hdnRecordCount" name="hdnRecordCount" value="0" />

                <div id="Pagination" class="pagination">
                </div>
                <span class="pull-right">
                    @objMessageKey.PageSize:
                    <input type="text" id="txtPageSize" name="txtPageSize" class="smallTextBox pagingSize" value="10" onchange="txtPageSize_OnChange()" onblur="setDefaultPaging('txtPageSize')">
                </span>
            </div>

            <div id="divResult" style="width: 100% !important; overflow-y: auto;">
                <table id="excelDataTable" border="1"></table>
            </div>
        </div>
    </section>
</div>
