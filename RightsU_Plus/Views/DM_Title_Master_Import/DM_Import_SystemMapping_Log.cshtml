@model List<RightsU_Entities.DM_Master_Log>
@{
    LoginEntity objLoginEntity = new LoginEntity();
    if (Session["objLoginEntity"] != null)
    {
        objLoginEntity = (LoginEntity)Session["objLoginEntity"];
    }

    RightsU_Entities.DM_Title_Resolve_Conflict objDTRC = ViewBag.DM_Title_RC;
    
}

<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings[" Version_No"]" />
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script>
    $(document).ready(function () {
        $("#lblRecordCount").text(@ViewBag.RecordCount);
        $("#hdnPageNo").val(@((ViewBag.PageNo ?? 1)));
        $("#hdnRecordCount").val(@ViewBag.RecordCount);
        $("#txtPageSize").val(@ViewBag.PageSize);
        SetPaging();
    });
</script>

<div class="scale_table_block">
    <table class="table table-bordered table-hover" id="tblSystemMappedMasterLogData">
        <thead>
            <tr>
                <th style="width:25%;">Name </th>
                <th style="width:20%;">Map Data</th>
                @if (ViewBag.TabName == "TA")
                {
                    <th style="width:20%;">Roles</th>
                }
                @if (ViewBag.TabName == "MA")
                {
                    <th style="width:20%;">Album Type</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.Count > 0)
            {
            foreach (var item in Model)
            {
            string Mapped_Name = "", Album_Type = "";
            int? code = item.Master_Code;
            if (ViewBag.TabName == "TA")
            {
            Mapped_Name = new RightsU_BLL.Talent_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Talent_Code == code).Select(s => s.Talent_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "TT")
            {
            Mapped_Name = new RightsU_BLL.Deal_Type_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Deal_Type_Code == code).Select(s => s.Deal_Type_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "TL")
            {
            Mapped_Name = new RightsU_BLL.Language_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Language_Code == code).Select(s => s.Language_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "LB")
            {
            Mapped_Name = new RightsU_BLL.Music_Label_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Music_Label_Code == code).Select(s => s.Music_Label_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "MA")
            {
            Mapped_Name = new RightsU_BLL.Music_Album_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Music_Album_Code == code).Select(s => s.Music_Album_Name).FirstOrDefault();
            Album_Type = new RightsU_BLL.Music_Album_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Music_Album_Code == code).Select(s => s.Album_Type).FirstOrDefault();
            }
            else if (ViewBag.TabName == "GE")
            {
            Mapped_Name = new RightsU_BLL.Genre_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Genres_Code == code).Select(s => s.Genres_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "MT")
            {
            Mapped_Name = new RightsU_BLL.Music_Theme_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Music_Theme_Code == code).Select(s => s.Music_Theme_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "ML")
            {
            Mapped_Name = new RightsU_BLL.Music_Language_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Music_Language_Code == code).Select(s => s.Language_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "PC")
            {
            Mapped_Name = new RightsU_BLL.Extended_Columns_Value_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Columns_Value_Code == code).Select(s => s.Columns_Value).FirstOrDefault();
            }
            else if (ViewBag.TabName == "PG")
            {
            Mapped_Name = new RightsU_BLL.Program_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Program_Code == code).Select(s => s.Program_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "BA")
            {
            Mapped_Name = new RightsU_BLL.Banner_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Banner_Code == code).Select(s => s.Banner_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "LA")
            {
            Mapped_Name = new RightsU_BLL.AL_Lab_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.AL_Lab_Code == code).Select(s => s.AL_Lab_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "VE")
            {
            Mapped_Name = new RightsU_BLL.Version_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Version_Code == code).Select(s => s.Version_Name).FirstOrDefault();
            }
            else if (ViewBag.TabName == "MP")
            {
            Mapped_Name = new RightsU_BLL.Extended_Columns_Value_Service(objLoginEntity.ConnectionStringName).SearchFor(w => w.Columns_Value_Code == code).Select(s => s.Columns_Value).FirstOrDefault();
            }
            <tr>
                <td>
                    <label id="lblName_@item.DM_Master_Log_Code">@item.Name</label>
                    <input type="hidden" id="hdnSystemMappingMasterLogCode_@item.DM_Master_Log_Code" value="@item.DM_Master_Log_Code" />
                </td>

                <td>
                    @if (item.Mapped_Name == null)
                    {
                    <div id="divMapped_@item.DM_Master_Log_Code">
                        <label id="lblMappedName_@item.DM_Master_Log_Code">@Mapped_Name </label>
                        <label id="lblMappedCode_@item.DM_Master_Log_Code" style="display:none;">@code</label>
                        <a title="Edit" id="EditsystemMapped_@item.DM_Master_Log_Code" class="glyphicon glyphicon-pencil" style="cursor:pointer;" onclick="BindGridSystemMapping(@item.DM_Master_Log_Code,'@ViewBag.TabName','@item.Roles')"></a>
                    </div>
                    <div id="divtxtMapped_@item.DM_Master_Log_Code" style="display:none;">

                    </div>

                    }
                    else
                    {
                    <div id="divMapped_@item.DM_Master_Log_Code" style="display:none;">
                        <label id="lblMappedName_@item.DM_Master_Log_Code">@Mapped_Name </label>
                        <label id="lblMappedCode_@item.DM_Master_Log_Code" style="display:none;">@code</label>
                        <a title="Edit" id="EditsystemMapped_@item.DM_Master_Log_Code" class="glyphicon glyphicon-pencil" style="cursor:pointer;" onclick="BindGridSystemMapping(@item.DM_Master_Log_Code,'@ViewBag.TabName','@item.Roles')"></a>
                    </div>
                    <div id="divtxtMapped_@item.DM_Master_Log_Code">
                        <input type="text" id="txtSystemMappedName_@item.DM_Master_Log_Code" name="MappedName" autocomplete="on" width="100" onkeyup="PopulateAutoComplete(@item.DM_Master_Log_Code, '@ViewBag.TabName','@item.Roles')" onblur="PopulateAutoComplete(@item.DM_Master_Log_Code, '@ViewBag.TabName','@item.Roles')" value="@item.Mapped_Name" />
                        <a title="Cancel" class="glyphicon glyphicon-remove-circle" onclick="Cancel(@item.DM_Master_Log_Code)"></a>
                    </div>

                    }
                    <input type="hidden" id="hdnMappedCode_@item.DM_Master_Log_Code" name="MappedCode" value="@item.Mapped_Code" />
                </td>
                @if (ViewBag.TabName == "TA")
                {
                <td align="center">@item.Roles</td>
                }
                @if (ViewBag.TabName == "MA")
                {
                <td align="center">@item.Roles</td>
                }
            </tr>
            }
            }
        </tbody>
    </table>
</div>
<script>

    var URL_PopulateAutoCompleteData = '@Url.Action("PopulateAutoCompleteData", "DM_Title_Master_Import")';
    function BindGridSystemMapping(masterLogcode, tabname, RoleName) {
        $('#divMapped_' + masterLogcode).hide();
        $('#divtxtMapped_' + masterLogcode).show();
      //$('#divtxtMapped_' + masterLogcode).append('<input type="text" id="txtSystemMappedName_' + masterLogcode + '"  name="MappedName" class="txtMapped" onkeyup="PopulateAutoComplete(' + masterLogcode + ',\'' + tabname + '\')" > <a title = "Cancel" class= "glyphicon glyphicon-remove-circle" onclick = "Cancel(' + masterLogcode + ')" ></a >');
        $('#divtxtMapped_' + masterLogcode).append('<input type="text" id="txtSystemMappedName_' + masterLogcode + '"  name="MappedName" class="txtMapped" onkeyup="PopulateAutoComplete(' + masterLogcode + ',\'' + tabname + '\',\'' + RoleName + '\')" > <a title = "Cancel" class= "glyphicon glyphicon-remove-circle" onclick = "Cancel(' + masterLogcode + ')" ></a >');

        initializeTooltip();
            //$('#divMapped_' + masterLogcode).empty();
            //$('#divMapped_' + masterLogcode).append('<input type="text" id="txtSystemMappedName_' + masterLogcode + '"  name="MappedName" class="txtMapped" onkeyup="PopulateAutoComplete(' + masterLogcode + ',\'' + tabname + '\')" > <a title = "Cancel" class= "glyphicon glyphicon-remove-circle" onclick = "Cancel(' + masterLogcode + ')" ></a >');

    }
    function Cancel(masterLogcode) {
        debugger
        $('#divtxtMapped_' + masterLogcode).empty();
        $('#divtxtMapped_' + masterLogcode).hide();
        $('#divMapped_' + masterLogcode).show();

    }
    function PopulateAutoComplete(masterLogCode, tabName, RoleName) {
        var keyword = $("#txtSystemMappedName_" + masterLogCode).val();
        $("#txtSystemMappedName_" + masterLogCode).autocomplete({
            focus: function () {
                return false;
            },
            search: function (e, u) {
                $(this).addClass('loader');
            },
            source: function (request, response) {
                $("#hdnMappedCode_" + masterLogCode).val('');
                var param = {
                    keyword: keyword,
                    tabName: tabName,
                    RoleName: RoleName
                };
                $.ajax({
                    url: URL_PopulateAutoCompleteData,
                    data: JSON.stringify(param),
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataFilter: function (data) { return data; },
                    success: function (data) {
                        if (data.length == 0) {
                            data[0] = 'Result Not Found';
                            response($.map(data, function (v, i) {
                                $("#txtSystemMappedName_" + masterLogCode).removeClass('loader');
                                return {
                                    label: 'Result Not Found',
                                    val: '0'
                                }
                            }))
                        }
                        else {
                            response($.map(data, function (v, i) {
                                $("#txtSystemMappedName_" + masterLogCode).removeClass('loader');
                                return {
                                    label: v.Mapping_Name,
                                    val: v.Mapping_Code
                                }
                            }))
                        }

                        //if (data.length == 0) {
                        //    data[0] = 'Result Not Found~0';
                        //}
                        //response($.map(data, function (v, i) {
                        //    return {
                        //        label: v.Mapping_Name,
                        //        val: v.Mapping_Code
                        //    }
                        //}))
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Error" + textStatus);
                    }
                });
            },
            select: function (event, ui) {
                $("#hdnMappedCode_" + masterLogCode).val(ui.item.val);
                if (ui.item.val == '0') {
                    return false;
                }
            },
            minLength: 2,
            open: function (event, ui) {
                $(".ui-autocomplete").css("position", "absolute");
                $(".ui-autocomplete").css("max-height", "200px");
                $(".ui-autocomplete").css("max-width", "250px");
                $(".ui-autocomplete").css("overflow-y", "auto");
                $(".ui-autocomplete").css("overflow-x", "hidden");
                $(".ui-autocomplete").css("z-index", "2147483647");
            },
        });
    }
</script>
<style>
    .loader {
        background: url('../../Images/ajax-loader.gif');
        background-repeat: no-repeat;
        background-position: right;
    }
</style>