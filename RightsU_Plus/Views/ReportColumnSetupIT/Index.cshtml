
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />

<script>
    var IsCall = 'Y', Command_Name = "", dummyGuid_G, sort_Type = "T";
    var URL_BindReportColumnSetupIT = '@Url.Action("BindReportColumnSetupIT", "ReportColumnSetupIT")';
    var URL_SearchReportColumnSetupIT = '@Url.Action("SearchReportColumnSetupIT", "ReportColumnSetupIT")';
    var URL_ConfigureReportSetupColumn = '@Url.Action("Configuration", "ReportColumnSetupIT")';
    var URL_BindIndex = '@Url.Action("Index", "Attrib_Reports")';

    $(document).ready(function () {
        if (LayoutDirection_G == "RTL") {
            $('#btnUser').css("float", "right");
            $('#txtSort').css("text-align", "left");
            $('#ddlSortType_chosen').css("text-align", "right");
        }
        else {
            $('#btnUser').css("float", "left");
            $('#txtSort').css("text-align", "right");
            $('#ddlSortType_chosen').css("text-align", "left");
        }

        if ("@ViewBag.Message" != "") {
            showAlert("S", "@ViewBag.Message");
            @*@ViewBag.Message = "";*@
        }
        

        addNumeric();
        SearchReportColumn("");
        //BindReportColumnSetup();

        $('#searchCommon').keypress(function (e) {
            if (e.keyCode == 13) {
                btnSearch_OnClick()
                return false;
            }
        });
        $("#ddlSortType").change(function () {
            sort_Type = $('#ddlSortType').val();
            $('#hdnPageNo').val(1);
            var searchtext = $("#searchCommon").val();
            SearchReportColumn(searchtext);
        });
    });

    function SearchReportColumn(searchText) {
        $('#searchCommon').val(searchText);
        debugger;
        $.ajax({
            type: "POST",
            url: URL_SearchReportColumnSetupIT,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                searchText: searchText
            }),
            async: false,
            success: function (result) {
                $('#hdnPageNo').text(1);
                $('#hdnPageNo').val(1);
                $('#lblRecordCount').text(result.Record_Count);
                $("#hdnRecordCount").val(result.Record_Count);
                SetPaging() 
                BindReportColumnSetup();

            }
        });
    }

    function BindReportColumnSetup() {
        var pageNo = $('#hdnPageNo').val();
        var recordPerPage = $('#txtPageSize').val();

        debugger;
        $.ajax({
            type: "POST",
            url: URL_BindReportColumnSetupIT,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                pageNo: pageNo,
                recordPerPage: recordPerPage,
                sortType: sort_Type
            }),

            success: function (result) {
                $('#divBindList').empty();
                $('#divBindList').html(result);

                addNumeric();
            }

        });
    }

    function btnShowAll_OnClick() {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        debugger;

        sort_Type = "T";
        $("#ddlSortType").find("option").attr("selected", false);
        $("#ddlSortType").val('T').trigger("chosen:updated");
        $('#hdnPageNo').val(1);
        $('#searchCommon').val('');

        SearchReportColumn("");
    }

    function btnSearch_OnClick() {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        debugger;
        var searchText = $('#searchCommon').val();

        if (searchText == '') {
            $('#searchCommon').val('');
            $('#searchCommon').attr('required', true)
            return false;
        }
        SearchReportColumn(searchText);
    }

    function addNumeric() {
        $(".pagingSize").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 99,
            min: 1
        });
    }

    function SetPaging() {
        IsCall = 'N';
        var pageNo = parseInt($('#hdnPageNo').val());
        var recordCount = parseInt($('#hdnRecordCount').val());
        var pagePerBatch = parseInt($('#hdnPagePerBatch').val());
        var recordPerPage = parseInt($('#txtPageSize').val());

        var cnt = pageNo * recordPerPage;
        if (cnt >= recordCount) {
            var v1 = parseInt(recordCount / recordPerPage);
            if ((v1 * recordPerPage) == recordCount)
                pageNo = v1;
            else
                pageNo = v1 + 1;
        }

        if (pageNo == 0)
            pageNo = 1;

        var index = pageNo - 1;
        $('#hdnPageNo').val(pageNo);

        var opt = null;
        opt = { callback: pageselectCallback };
        opt["items_per_page"] = recordPerPage;
        opt["num_display_entries"] = pagePerBatch;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = index;
        $("#Pagination").pagination(recordCount, opt);
    }

    function pageselectCallback(page_index, jq) {
        //if (checkCurrentActionBook()) {
        //    $('.required').removeClass('required');

        if (!ValidatePageSize())
            return false;

        var pageNo = page_index + 1
        $('#hdnPageNo').val(pageNo);
        if (IsCall == 'Y')
            BindReportColumnSetup();
        else
            IsCall = 'Y';
    }

    function txtPageSize_OnChange() {
        $("[required='required']").removeAttr("required");
        $('.required').removeClass('required');
        if (!ValidatePageSize())
            return false;

        BindReportColumnSetup();
        SetPaging();
    }

    function ValidatePageSize() {
        var recordPerPage = $('#txtPageSize').val()
        if ($(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);
            if (pageSize > 0)
                return true;
        }
        $('#txtPageSize').attr('required', true)
        return false
    }

    function pageBinding() {
        BindReportColumnSetup();
        SetPaging();
    }

    function ConfigureAttribReportColumn(ColumnCode, DisplayName, config) {
        debugger;
        $.ajax({
            type: "POST",
            url: URL_ConfigureReportSetupColumn,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                ColumnCode: ColumnCode,
                DisplayName: DisplayName,
                config: config
            }),
            success: function (result) {
                //SAME CODE AS EDIT FUNCTION
                window.location.href = URL_BindIndex;
            }
        })
    }

</script>
<style>
    td {
        padding: 5px 0px;
    }

    .form-control {
        display: inline-block !important;
    }

    .paging_area {
        border-bottom: 1px dotted #777;
        height: 36px;
        margin-top: 10px;
    }

    #ddlSortType_chosen {
        max-width: 56%;
        text-align: left;
    }
</style>

<div class="main_section">
    <section class="rightsU_container clearfix">
        <div class="container acq main_col">
            <div class="">
                <div class="title_block dotted_border clearfix">
                    <h2 class="pull-left">
                       Report Column Setup (Entitive)
                    </h2>
                    <div class="right_nav pull-right">
                        <ul>
                            <li id="btnUser">
                                @Html.ActionLink("Create New", "Create", "", new { @class = "btn btn-primary" })
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="search_area" style="background-color: #eee; padding:5px;">
                    <table class="table">
                        <tr>
                            <td style="width:10%;text-align:center;padding-top:8px;">
                                @objMessageKey.SearchText :
                            </td>
                            <td style="width:30%;">
                                <input type="text" name="srchCommon" id="searchCommon" class="search" style="width:100%" placeholder="View Name, Display Name" />
                            </td>
                            <td>
                                <input type="button" id="btnSearch" class="button" value="@objMessageKey.Search" onclick="btnSearch_OnClick()">
                                <input type="button" id="btnShowAll" class="button" value="@objMessageKey.ShowAll" onclick="btnShowAll_OnClick()">
                            </td>
                            <td id="txtSort">
                                @objMessageKey.SortBy:
                                @Html.DropDownList("SortType", (List<SelectListItem>)ViewBag.SortType, new { @id = "ddlSortType", @class = "form_input chosen-select" })
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="grid_area">
                    <div style="border-bottom: 1px dotted #777; display:none;"></div>
                    <div class="paging_area clearfix">
                        <span class="pull-left">TotalRecords: </span>
                        <span class="pull-left" id="lblRecordCount"></span>
                        <input type="hidden" id="hdnPageNo" name="hdnPageNo" value="1" />
                        <input type="hidden" id="hdnPagePerBatch" name="hdnPagePerBatch" value="5" />
                        <input type="hidden" id="hdnRecordCount" name="hdnRecordCount" value="0" />

                        <div id="Pagination" class="pagination">
                        </div>
                        <span class="pull-right">
                            PageSize:
                            <input type="text" id="txtPageSize" name="txtPageSize" class="smallTextBox pagingSize" value="10" onchange="txtPageSize_OnChange()" onblur="setDefaultPaging('txtPageSize')">
                        </span>
                    </div>
                    <div class="tab-content clearfix table-wrapper scale_table_container">
                        <div class="scale_table_block">
                            <input type="hidden" id="hdnAction" value="" />
                            <input type="hidden" id="hdnRecodLockingCode" name="hdnRecodLockingCode" value="0" />
                            <div id="divBindList" class="deal clearfix">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<div aria-labelledby="myModalLabel" class="form_wrapper modal fade big_popup" id="popup" role="dialog" tabindex="-1" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content clearfix">
            <div class="form_fields acq" id="pupupHtml">

            </div>
        </div>
    </div>
</div>
