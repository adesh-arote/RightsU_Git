@model RightsU_Entities.Digital_Tab

@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    if (ViewBag.Title != "View")
    {
        ViewBag.Title = Model != null ? "Edit" : "Create";
    }
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />

<script>

        $(document).ready(function () {
        debugger;
        if ('@objMessageKey.LayoutDirection' == "RTL") {
            $('.lblExchangeRate').css("padding-right", "2%");
        }
        else {
            $('.lblExchangeRate').css("padding-left", "2%");
            }
            addNumeric();
    });

    function ClosePopup() {
        debugger;
        $('#hdnAction').val("");
        $('#popup').modal('hide');
        $('#pupupHtml').empty();
    }

    var Url_Index = '@Url.Action("Index", "Acq_DigitalMaster")';
    var Url_BindDigitalTabAddOrEdit = '@Url.Action("AddOrEditDigitalTab", "Acq_DigitalMaster")';

    function BindDigitalTabAddOrEditList() {
        debugger;
        var DigitalTabCode = $('#Digital_Tab_Code').val();
        var DigitalTabDescription = $('#Digital_Tab_Description').val();
        var OrderNo = $('#Order_No').val();
        var TabType = $('#Tab_Type').val();
        var ModuleCode = $('#Module_Code').val();
        var EditWindowType = $('#EditWindowType').val();
        var ShortName = $('#Short_Name').val();
        var IsShow = $('#Is_Show').val();
        var KeyConfigCode = $('#Key_Config_Code').val();
        if (IsShow == "Yes") {
            IsShow = "Y";
        }
        else if (IsShow = "No"){
            IsShow = "N";
        }
        if (KeyConfigCode == "") {
            KeyConfigCode = 0;
        }

        $.ajax({
            type: "POST",
            url: Url_BindDigitalTabAddOrEdit,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({
                DigitalTabDescription: DigitalTabDescription,
                OrderNo: OrderNo,
                TabType: TabType,
                EditWindowType: EditWindowType,
                ModuleCode: ModuleCode,
                ShortName: ShortName,
                DigitalTabCode: DigitalTabCode,
                IsShow: IsShow,
                KeyConfigCode: KeyConfigCode
            }),
            async: false,
            success: function (result) {
                debugger;
                if (result.Status == "S") {
                    window.location.href = Url_Index;
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

</script>

<div class="modal_block modal_header">
    <span style="font-weight:bold;font-size: 18px">Digital Tab</span>
    <a class="close" onclick="ClosePopup()">
        <span>X</span>
        <span class="sr-only">Close</span>
    </a>
</div>
<div class="modal_block">
    <table class="add_title_popup" style="text-align: left">
        <tr>
            <th class="lblExchangeRate" style="width:20%">
                Short Name
            </th>
            <td>
                @if (ViewBag.Title == "View")
                {
                    @Html.DisplayFor(model => model.Short_Name)
                }
                else
                {
                    @Html.EditorFor(model => model.Short_Name, new { htmlAttributes = new { @class = "form-control input-sm", @id = "Short_Name", @Style = "width:75%;margin-bottom: 5px;margin-top:5px" } })
                }
            </td>
        </tr>
        <tr>
            <th class="lblExchangeRate" style="width:20%">
                Description
            </th>
            <td>
                @if (ViewBag.Title == "View")
                {
                    @Html.DisplayFor(model => model.Digital_Tab_Description)
                }
                else
                {
                    @Html.EditorFor(model => model.Digital_Tab_Description, new { htmlAttributes = new { @class = "form-control input-sm", @id = "Digital_Tab_Description", @Style = "width:75%;margin-bottom: 5px" } })
                }

            </td>
        </tr>
        <tr>
            <th class="lblExchangeRate" style="width:20%">
                Order No
            </th>
            <td>
                @if (ViewBag.Title == "View")
                {
                    @Html.DisplayFor(model => model.Order_No)
                }
                else if (ViewBag.Title == "Edit")
                {
                    <input data-val="true" id="Order_No" name="Order_No" type="text" value="@Model.Order_No" class="form-control input-sm pagingSize" Style="width:75%;margin-bottom: 5px">
                }
                else
                {
                    <input data-val="true" id="Order_No" name="Order_No" type="text" class="form-control input-sm pagingSize" Style="width:75%;margin-bottom: 5px">

                }
            </td>
        </tr>
        <tr>
            <th class="lblExchangeRate" style="width:20%">
                Tab Type
            </th>
            <td>
                @if (ViewBag.Title == "View")
                {
                    @Html.DisplayFor(model => model.Tab_Type)
                }
                else
                {
                    @Html.EditorFor(model => model.Tab_Type, new { htmlAttributes = new { @class = "form-control input-sm", @id = "Tab_Type", @Style = "width:75%;margin-bottom: 5px" } })
                }
            </td>
        </tr>
        <tr>
            <th class="lblExchangeRate" style="width:20%">
                Edit Window Type
            </th>
            <td>
                @if (ViewBag.Title == "View")
                {
                    @Html.DisplayFor(model => model.EditWindowType)
                }
                else
                {
                    @Html.EditorFor(model => model.EditWindowType, new { htmlAttributes = new { @class = "form-control input-sm", @id = "EditWindowType", @Style = "width:75%;margin-bottom: 5px" } })
                }

            </td>
        </tr>
        <tr>
            <th class="lblExchangeRate" style="width:20%">
                Module Code
            </th>
            <td>
                @if (ViewBag.Title == "View")
                {
                    @Html.DisplayFor(model => model.Module_Code)
                }
                else
                {
                    @Html.DropDownListFor(model => model.Module_Code, new List<SelectListItem> {
      new SelectListItem{Text="Acquisition", Value="30" },
      new SelectListItem{Text="Syndication", Value="35"} },"--Please Select--", new { @id = "Module_Code",  @Style = "width:75%;margin-bottom: 5px", @class = "chosen-select input-sm" })
                }
            </td>
        </tr>
        <tr>
            <th class="lblExchangeRate" style="width:20%">
                Key Config Code
            </th>
            <td>
                @if (ViewBag.Title == "View")
                {
                    @Html.DisplayFor(model => model.Key_Config_Code)
                }
                else if (ViewBag.Title == "Edit")
                {
                    <input data-val="true" id="Key_Config_Code" name="Key_Config_Code" type="text" value="@Model.Key_Config_Code" class="form-control input-sm pagingSize" Style="width:75%;margin-bottom: 5px">
                }
                else
                {
                    <input data-val="true" id="Key_Config_Code" name="Key_Config_Code" type="text" class="form-control input-sm pagingSize" Style="width:75%;margin-bottom: 5px">

                }
            </td>
        </tr>
        <tr>
            <th class="lblExchangeRate" style="width:20%">
                Is Show
            </th>
            <td>
                @if (ViewBag.Title == "View")
                {
                    @Html.DisplayFor(model => model.Is_Show)
                }
                else
                {
                    @Html.DropDownListFor(model => model.Is_Show, new List<SelectListItem> {
     new SelectListItem{Text="Yes", Value="Y" },
     new SelectListItem{Text="No", Value="N"} },"--Please Select--", new { @id = "Is_Show", @Style = "width:75%;margin-bottom: 5px", @class = "chosen-select input-sm" })
                }
            </td>
        </tr>
        <tr style="display: none;">
            <th class="pull-left">
                Supplementary Tab Code
            </th>
            <td class="col-md-9">

                @Html.HiddenFor(model => model.Digital_Tab_Code, new { htmlAttributes = new { @class = "form-control", @id = "Digital_Tab_Code", @Style = "width:75%;margin-bottom: 5px" } })
            </td>
        </tr>
    </table>
</div>

<div class="modal_block modal_header">
    @if (ViewBag.Title == "Edit")
    {
        <input type="button" value="Save" class="btn btn-primary" onclick="BindDigitalTabAddOrEditList()" />
        <input type="button" value="Close" Class="btn btn-primary" onclick="ClosePopup()" />
    }
    else if (ViewBag.Title == "View")
    {
        <input type="button" value="Close" class="btn btn-primary" onclick="ClosePopup()" />
    }
</div>



