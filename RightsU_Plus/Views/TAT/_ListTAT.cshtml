@model List<RightsU_Entities.USPTATList_Result>
@using UTOFrameWork.FrameworkClasses
@using System.Configuration;
@{
    Layout = null;
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<div class="top_area">
    <h2 class="pull-left">TAT</h2>
</div>
<div class="paging_area clearfix">
    <span class="pull-left">@objMessageKey.TotalRecords:  @ViewBag.RecordCount</span>
    <div class="pagination"></div>
    <span class="pull-right">
        @objMessageKey.PageSize :
        <input id="PageSize" type="text" class="smallTextBox" onchange="txtPageSize_OnChange()" onkeypress="return isNumber(event);" maxlength="2"
               value="@(Convert.ToInt32(ViewBag.PageSize) == 0 || ViewBag.PageSize == null ? 10 : ViewBag.PageSize)" onblur="setDefaultPaging('PageSize')" />
    </span>

</div>
<table class="table table-bordered table-hover" id="TableMain">
    <thead>
        <tr>
            <th style="width: 20%;">Draft Name</th>
            <th style="width: 20%;">Type</th>
            <th style="width: 20%;">Business Unit</th>
            <th style="width: 20%;">Assigned User</th>
            <th style="width: 10%;">Amendment</th>
            <th style="width: 20%;">Deal Format</th>
            <th style="width: 20%;">Status</th>
            <th style="width: 20%;">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.DraftName</td>
                <td>@item.Type</td>
                <td>@item.BusinessUnitName</td>
                <td>@item.User</td>
                <td>
                    @if (item.IsAmend == "Y")
                    {<span>Yes</span>}
                    else
                    {<span>No</span>}
                </td>
                <td>@item.DealType</td>
                <td>@item.TATSLAStatusName</td>
                <td><a id="Edit_@item.TATCode" class="glyphicon glyphicon-pencil AT_@item.TATCode" onclick="return AssignTAT(@item.TATCode)"></a></td>
            </tr>
        }
    </tbody>
</table>
<script>
    $(document).ready(function () {
        initializeChosen();
        $("#lblRecordCount").text(@ViewBag.RecordCount);
        $("#hdnPageNo").val(@((ViewBag.PageNo ?? 1)));
        $("#hdnRecordCount").val(@ViewBag.RecordCount);
        $("#txtPageSize").val(@ViewBag.PageSize);
        SetPaging();
    });
    var IsCall = 'Y';
    function SetPaging() {
        debugger;
        IsCall = 'N';
        var PageNo, recordCnt;

        if ('@ViewBag.PageNo' != null)
            PageNo = '@ViewBag.PageNo';

        if ('@ViewBag.RecordCount' != null)
            recordCnt = '@ViewBag.RecordCount';

        PageNo = PageNo - 1;

        var opt = { callback: pageselectCallback };
        opt["items_per_page"] = @(Convert.ToInt32(ViewBag.PageSize) == 0 || ViewBag.PageSize == null ? 10 : ViewBag.PageSize);
        opt["num_display_entries"] = 5;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = PageNo;
        $(".pagination").pagination(recordCnt, opt);
    }

    function pageselectCallback(page_index, jq) {
        debugger;
        if (!ValidatePageSize())
            return false;

        if (IsCall == 'Y') {
            $("#hdnPageIndex").val(page_index);
            BindGrid();
        }
        else
            IsCall = 'Y';
    }
    function setPageSize()
    {
        debugger;
        var s = $("#PageSize").val();
        $("#hdnPageSize").val(s);
        $("#hdnPageIndex").val('0');
        BindGrid();
    }

    $("#PageSize").numeric({
        allowMinus: false,
        allowThouSep: false,
        allowDecSep: false,
        max: 99,
        min: 1
    });
    
    function txtPageSize_OnChange() {
        debugger;
        $("[required='required']").removeAttr("required");
        $('.required').removeClass('required');

        if (!ValidatePageSize())
            return false;

        BindGrid();
        SetPaging();
    }
    function ValidatePageSize() {
        debugger;
        var recordPerPage = $('#PageSize').val()
        if ($.trim(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);
            if (pageSize > 0)
                return true;
        }
        $('#PageSize').attr('required', true)
        return false;
    }
    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 13) {
            return false;
        }
        else {
            return true;
        }
    }
</script>