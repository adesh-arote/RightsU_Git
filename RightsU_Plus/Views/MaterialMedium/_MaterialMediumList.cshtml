@model List<RightsU_Entities.Material_Medium>
@{
     MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<table class="table table-bordered table-hover" id="tblMaterial_Medium">
    <thead>
        <tr>
            <th style="width:35%;">@objMessageKey.MaterialMediumName</th>
            <th style="width:30%;">@objMessageKey.Duration</th>
            <th style="width:15%;">@objMessageKey.IsQCRequired</th>
            <th style="width:10%;">@objMessageKey.Status</th>
            <th style="width:10%;">@objMessageKey.Action</th>
        </tr>
    </thead>
    <tbody>
        @if (TempData["Action"] == "AddMaterialMedium")
        {
            <tr>
                <td>
                    @Html.TextBox("MaterialMediumName", "", new { style = "width:90% ", maxlength = 25 })
                </td>
                <td style="text-align:center;">
                    @objMessageKey.Minutes:   @Html.RadioButton("Duration", "MI", new { style = "cursor: pointer;" })
                    @objMessageKey.Meter: @Html.RadioButton("Duration", "ME", new { style = "cursor: pointer;" })
                    @objMessageKey.NA: @Html.RadioButton("Duration", "NA", true, new { style = "cursor: pointer;" })
                    @Html.TextBox("duration", "", new { @class = "Size", style = "width:30% ", maxlength = 10 })
                    <input type="hidden" id="hdnRadioButtonChecked" value="NA" />
                </td>
                <td align="center">
                    @objMessageKey.Yes: @Html.RadioButton("QC", "Y", new { style = "cursor: pointer;" })
                    @objMessageKey.NO: @Html.RadioButton("QC", "N", true, new { style = "cursor: pointer;" })
                    <input type="hidden" id="hdnQCChecked" value="N" />
                </td>
                <td align="center">
                    <span>@objMessageKey.Active</span>
                </td>
                <td align="center">
                    <a title="@objMessageKey.Save" class="glyphicon glyphicon-ok-circle" style="cursor: pointer;" onclick="SaveUpdateMaterialMedium(0)"></a>
                    <a title="@objMessageKey.Cancel" class="glyphicon glyphicon-remove-circle" style="cursor: pointer;" onclick="CancelMaterialMedium()"></a>
                </td>
            </tr>
        }
        @if (Model.Count > 0)
        {
            foreach (var item in Model)
            {
                string strActive = objMessageKey.Active;

                if (item.Is_Active == "N")
                {
                    strActive = objMessageKey.Deactive;
                }
                string strQCRequired = objMessageKey.Yes;

                if (item.Is_Qc_Required == "N")
                {
                    strQCRequired = objMessageKey.NO;
                }
                string strItemType = "";

                if (item.Type == "MI")
                {
                    strItemType = "Mins";
                }
                else if (item.Type == "ME")
                {
                    strItemType = "Meter";
                }
                else
                {
                    strItemType = "";
                }
                if (TempData["Action"] == "EditMaterialMedium" && item.Material_Medium_Code == Convert.ToInt32(TempData["idMaterialMedium"]))
                {
                    <tr>
                        <td>
                            @Html.TextBoxFor(model => item.Material_Medium_Name, new { style = "width:90% ", maxlength = 25, id = "Material_Type_NameEdit" })
                            @Html.HiddenFor(model => item.Material_Medium_Code, new { id = "Material_Medium_CodeEdit", style = "width:90%;" })
                        </td>
                        <td style="text-align:center;">
                            @objMessageKey.Minutes:   @Html.RadioButton("DurationEdit", "MI", item.Type == "MI", new { style = "cursor: pointer;" })
                            @objMessageKey.Meter: @Html.RadioButton("DurationEdit", "ME", item.Type == "ME", new { style = "cursor: pointer;" })
                            @objMessageKey.NA: @Html.RadioButton("DurationEdit", "NA", item.Type == null, new { style = "cursor: pointer;" })

                            @Html.TextBoxFor(model => item.Duration, item.Type == null
                          ? new { style = "width:30%; display:none ", maxlength = 10, @class = "Size", id = "Duration_Edit" }
                       : new { style = "width:30%", maxlength = 10, @class = "Size", id = "Duration_Edit" })
                            <input type="hidden" id="hdnRadioButtonCheckedEdit" value="@item.Type" />
                        </td>
                        <td align="center">
                            @objMessageKey.Yes: @Html.RadioButton("QCEdit", "Y", item.Is_Qc_Required == "Y", new { style = "cursor: pointer;" })
                            @objMessageKey.NO: @Html.RadioButton("QCEdit", "N", item.Is_Qc_Required == "N", new { style = "cursor: pointer;" })
                            <input type="hidden" id="hdnQCCheckedEdit" value="@item.Is_Qc_Required" />
                        </td>
                        <td align="center">
                            <span>@strActive</span>
                        </td>
                        <td align="center">
                            <a title="@objMessageKey.Save" class="glyphicon glyphicon-ok-circle" style="cursor: pointer;" onclick="SaveUpdateMaterialMedium(@item.Material_Medium_Code)"></a>
                            <a title="@objMessageKey.Cancel" class="glyphicon glyphicon-remove-circle" style="cursor: pointer;" onclick="CancelMaterialMedium()"></a>
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>
                            <span>@item.Material_Medium_Name</span>
                        </td>
                        <td>
                            <span>@item.Duration  &nbsp;&nbsp;&nbsp; @strItemType</span>
                        </td>
                        <td align="center">
                            <span>@strQCRequired</span>
                        </td>
                        <td align="center">
                            <span>@strActive</span>
                        </td>
                        <td align="center">
                            @{  bool canDeactive = true;
                              string toolTipMsg = "";
                              if (item.Acq_Deal_Material.Count > 0)
                              {
                                  canDeactive = false;
                                  toolTipMsg = objMessageKey.CannotdeactivatethisMaterialMediumasitisusedinAcquisitionDeal ;
                              }
                              else if (item.Syn_Deal_Material.Count > 0)
                              {
                                  canDeactive = false;
                                  toolTipMsg = objMessageKey.CannotdeactivatethisMaterialMediumasitisusedinSyndicationDeal;
                              }
                            }
                            @if (item.Is_Active == "Y")
                            {
                                if (ViewBag.UserModuleRights.Contains("~" + UTOFrameWork.FrameworkClasses.GlobalParams.RightCodeForEdit + "~"))
                                {
                                    <a title="@objMessageKey.Edit" class="glyphicon glyphicon-pencil" style="cursor: pointer;" onclick="CheckRecordLock(@item.Material_Medium_Code,'EDIT')"></a>
                                }
                                if (ViewBag.UserModuleRights.Contains("~" + UTOFrameWork.FrameworkClasses.GlobalParams.RightCodeForDeactivate + "~"))
                                {
                                    if (canDeactive)
                                    {
                                        <a title="@objMessageKey.Deactivate" class="glyphicon glyphicon-thumbs-down" style="cursor: pointer;" onclick="ActiveDeactiveMaterialMedium(@item.Material_Medium_Code, 'N')"></a>
                                    }
                                    else
                                    {
                                        <a title="@toolTipMsg" class="glyphicon glyphicon-thumbs-down disabled" onclick="return false;"></a>
                                    }
                                }
                            }
                            else
                            {
                                if (ViewBag.UserModuleRights.Contains("~" + UTOFrameWork.FrameworkClasses.GlobalParams.RightCodeForActivate + "~"))
                                {
                                    <a title="@objMessageKey.CannoteditthisMaterialMediumasitisdeactivated" class="glyphicon glyphicon-pencil disabled" onclick="return false;"></a>
                                    <a title="@objMessageKey.Activate" class="glyphicon glyphicon-thumbs-up" style="cursor: pointer;" onclick="ActiveDeactiveMaterialMedium(@item.Material_Medium_Code, 'Y')"></a>
                                }
                            }
                        </td>
                    </tr>
                }
            }
        }
        else
        {
            if (TempData["Action"] != "AddMaterialMedium")
            {
                <tr>
                    <td colspan="5">@objMessageKey.Norecordfound</td>
                </tr>
            }
        }
    </tbody>
</table>
<script>
    $(document).ready(function () {
        $('#duration').hide();
        $('input:radio[name="Duration"]').change(function () {
            if ($(this).val() == 'NA') {
                $('#duration').hide();
            } else {
                $('#duration').show();
            }
            $('#hdnRadioButtonChecked').val($(this).val())
        });
        $('input:radio[name="QC"]').change(function () {
            $('#hdnQCChecked').val($(this).val())
        });
        $('input:radio[name="DurationEdit"]').change(function () {
            if ($(this).val() == 'NA') {
                $('#Duration_Edit').hide();
            } else {
                $('#Duration_Edit').show();
            }
            $('#hdnRadioButtonCheckedEdit').val($(this).val())
        });
        $('input:radio[name="QCEdit"]').change(function () {
            $('#hdnQCCheckedEdit').val($(this).val())
        });
        $("#MaterialMediumName,#searchCommon,#Material_Type_NameEdit").keypress(function (event) {
            var regex = new RegExp("^[a-zA-Z0-9 ]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                event.preventDefault();
                return false;
            }
        });
        function CheckNumeric(e) {
            if (window.event) { if ((e.keyCode < 48 || e.keyCode > 57) & e.keyCode != 8) { event.returnValue = false; return false; } }
        }
        $("#duration,#Duration_Edit").keypress(function () {
            CheckNumeric(event);
        });
        $(".Size").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 9999,
            min: 1
        });
    });
</script>