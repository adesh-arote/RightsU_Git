@model List<RightsU_Entities.USP_Music_Exception_Handling_Result>
@using UTOFrameWork.FrameworkClasses
@using System.Configuration;
@{
    Layout = null;
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<script>
    $(document).ready(function () {
        $('.expandable').expander({
            slicePoint: 25,
            expandPrefix: '',
            expandText: '...read more',
            collapseTimer: 0,
            userCollapseText: '<span>[^]</span>'
        });
        debugger;
        initializeDatepicker();
        $("#txtStart").change(function(){
            debugger
            $("#txtStart1").val($(this).val())
        })
        $("#txtStart1").change(function(){
            debugger
            $("#txtStart").val($(this).val())
        })
        $("#txtEnd").change(function(){
            debugger
            $("#txtEnd1").val($(this).val())
        })
        $("#txtEnd1").change(function(){
            debugger
            $("#txtEnd").val($(this).val())
        })

        if('@ViewBag.IsAired'=='N'){
            $("#txtStart,#txtEnd,#txtStart1,#txtEnd1").val('')
            $('#txtStart,#txtStart1').datepicker("setDate", '@ViewBag.NStart_Date');
            $('#txtEnd,#txtEnd1').datepicker("setDate", '@ViewBag.NEnd_Date');
            @*$("#txtStart,#txtStart1").datepicker("option", "minDate", $.datepicker.parseDate("dd/mm/yy", '@ViewBag.NStart_Date'));
            $("#txtEnd,#txtEnd1").datepicker("option", "minDate", $.datepicker.parseDate("dd/mm/yy", '@ViewBag.NStart_Date'));*@

        }
        else if('@ViewBag.IsAired'=='Y'){
            $("#txtStart,#txtEnd,#txtStart1,#txtEnd1").val('')
            $('#txtStart,#txtStart1').datepicker("setDate", '@ViewBag.AStart_Date');
            $('#txtEnd,#txtEnd1').datepicker("setDate", '@ViewBag.AEnd_Date');

            //var a = new Date();
            //a.setDate(a.getDate()-15);
            $("#txtStart,#txtStart1").datepicker("option", "maxDate" , new Date());
            $("#txtEnd,#txtEnd1").datepicker("option", "maxDate" , new Date());
        }
    })

    function SetPaging() {
        debugger;
        IsCall = 'N';
        var PageNo, recordCnt;

        if ('@ViewBag.PageNo' != null)
            PageNo = '@ViewBag.PageNo';

        if ('@ViewBag.RecordCount' != null)
            recordCnt = '@ViewBag.RecordCount';

        PageNo = PageNo - 1;

        var opt = { callback: pageselectCallback };
        opt["items_per_page"] =@(Convert.ToInt32(ViewBag.PageSize) == 0 || ViewBag.PageSize == null ? 10 : ViewBag.PageSize);
        opt["num_display_entries"] = 5;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = PageNo;
        $(".pagination").pagination(recordCnt, opt);
    }
    function isNumber(evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode != 13 && charCode!=8) {
            return false;
        }
        else {
            if (charCode == 13)
                CallPaging(evt)
            return true;
        }
    }
</script>
<div class="paging_area clearfix">
    <input type="hidden" id="hdnPageIndex" />
    <span class="pull-left">@objMessageKey.TotalRecords:  @ViewBag.RecordCount</span>
    <div class="pagination"></div>   
    <span class="pull-right">
       @objMessageKey.PageSize :
        <input id="PageSize" type="text" class="smallTextBox" required onkeypress="return isNumber(event);" onfocusout="return PageSizeChange()" maxlength="2" value="@(Convert.ToInt32(ViewBag.PageSize) == 0 || ViewBag.PageSize == null ? 10 : ViewBag.PageSize)" />
    </span>
</div>
<div class="scale_table_block">
    @{
        int counter = 0;
        @Html.Hidden("hdnRowNum", new { @id = "hdnRowNum" })
        <table class="table table-bordered table-hover">
            <thead style="font-size: 12px !important;">
                <tr>
                    <th style="width:12%">@objMessageKey.Content</th>
                    <th style="width:8%">@objMessageKey.Eps</th>
                    @*<th style="width:5%">Dur (Min)</th>*@
                    <th style="width:10%">@objMessageKey.AiringDate</th>
                    <th style="width:6%">@objMessageKey.AiringTime</th>
                    <th style="width:7%">@objMessageKey.Channel</th>
                    <th style="width:10%">@objMessageKey.MusicTrack</th>
                    <th style="width:10%">@objMessageKey.Movie/ @objMessageKey.Album </th>
                    <th style="width:7%">@objMessageKey.MusicLabel</th>
                    <th style="width:6%">@objMessageKey.MusicDur (@objMessageKey.mins)</th>
                    <th style="width:11%">@objMessageKey.Exceptions</th>
                    <th style="width:6%">@objMessageKey.Authorize</th>
                    <th style="width:5%">@objMessageKey.Status</th>
                    <th style="width:5%">@objMessageKey.Action</th>
                </tr>
            </thead>
            <tbody style="font-size: 11.5px !important;">


                @foreach (var item in Model)
                {
                    counter += 1;
                    <tr>
                        <td>@item.Content_Name</td>
                        <td>@item.Eps</td>
                        @*<td>@item.Dur</td>*@
                        <td>@item.Airing_Date</td>
                        <td>@item.Airing_Time</td>
                        <td>@item.Channel</td>
                        <td>@item.Music_Track</td>
                        <td>@item.Movie_Album</td>
                        <td>@item.Music_Label</td>
                        <td>@item.Music_Dur</td>
                        <td style="text-align:center">
                            <a style="cursor:pointer;" href="#" data-toggle="modal" onclick=" return exceptionclick(this);">
                                @if (item.Exceptions != null && item.Exceptions != "")
                                {
                                @Html.Raw(item.Exceptions.Trim().Replace("~", "</a>,&nbsp<a style='cursor:pointer;' href='#'  data-toggle='modal' onclick=' return exceptionclick(this);'>"))
                                }
                            </a>
                        </td>
                        <td>@item.Initial_Response</td>
                        <td>
                            @if (@item.Workflow_Status == null || @item.Status == "Open")
                            {
                            <span>Open</span>
                            }
                            else if (@item.Workflow_Status == "W")
                            {
                            <span>Waiting For Authorization</span>
                            }
                            else if (@item.Workflow_Status.TrimEnd().TrimStart() == "A")
                            {
                            <span>Approved</span>
                            }
                            else if (@item.Workflow_Status.TrimEnd().TrimStart() == "R")
                            {
                            <span>Reject</span>
                            }
                        </td>
                        <td>
                            @if ((@item.Workflow_Status == null || @item.Status == "Open" || @item.Workflow_Status.TrimEnd().TrimStart() == "R" || @item.Workflow_Status.TrimEnd().TrimStart() == "O") && item.Button_Visibility.Contains("," + UTOFrameWork.FrameworkClasses.GlobalParams.RightCodeForSendForApproval + ","))
                            {
                            <a alt="" title="" href="#" class="glyphicon glyphicon-send" data-original-title="@objMessageKey.SendForApproval" data-target="#popWaitingAuthorization" data-toggle="modal" onclick="SendForApprovalpopup('@item.Music_Schedule_Transaction_Code','@item.IsZeroWorkflow ');"></a>
                            }
                            else if ((item.Workflow_Status != "A" && item.Workflow_Status != "R") && item.Button_Visibility.Contains("," + UTOFrameWork.FrameworkClasses.GlobalParams.RightCodeForApprove + ","))
                            {
                            <a title="" href="#" class="glyphicon glyphicon-check" data-original-title="@objMessageKey.Approve" data-target="#popWaitingAuthorization" data-toggle="modal" onclick="SendForApprovalpopup('@item.Music_Schedule_Transaction_Code','@item.IsZeroWorkflow ');"></a>
                            }
                            <a alt="" title="" href="#" class="glyphicon glyphicon-eye-open" data-original-title="@objMessageKey.View" data-target="#popAriedView" data-toggle="modal" onclick="ShowAriedViewHistory('@item.Music_Schedule_Transaction_Code','V','@ViewBag.IsAired');"></a>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    }
</div>