@model List<RightsU_Dapper.Entity.Master_Entities.Workflow_Role>
@using System.Web.Script.Serialization;

@{
    List<RightsU_Dapper.Entity.Security_Group> lstSecurityGroup = new List<RightsU_Dapper.Entity.Security_Group>();
    if (ViewData["SecurityGroup"] != "" && ViewData["SecurityGroup"] != null)
    {
        lstSecurityGroup = (List<RightsU_Dapper.Entity.Security_Group>)ViewData["SecurityGroup"];
    }

    List<RightsU_Dapper.Entity.Master_Entities.User> lstUser = new List<RightsU_Dapper.Entity.Master_Entities.User>();
    if (ViewData["User"] != "" && ViewData["User"] != null)
    {
        lstUser = (List<RightsU_Dapper.Entity.Master_Entities.User>)ViewData["User"];
    }

    LoginEntity objLoginEntity = new LoginEntity();
    if (Session["objLoginEntity"] != null)
    {
        objLoginEntity = (LoginEntity)Session["objLoginEntity"];
    }
    //List<RightsU_Entities.Users_Business_Unit> lst_Users_Business_Unit_Service = new List<RightsU_Entities.Users_Business_Unit>();
    //lst_Users_Business_Unit_Service = new RightsU_BLL.Users_Business_Unit_Service(objLoginEntity.ConnectionStringName).SearchFor(z => true).Where(x => x.Users_Code != null).ToList();
    //var query = lst_Users_Business_Unit_Service.Where(x => x.User.Security_Group_Code == SGCode && x.Business_Unit_Code == BUCode).Select(s => s.User.Login_Name).ToArray();
    //string strRoles = "";
    //if (lstUser.Count > 0)
    //{
    //    strRoles = string.Join(", ", lst_Users_Business_Unit_Service.Where(x => x.User.Security_Group_Code == SGCode && x.Business_Unit_Code == BUCode).Select(s => s.User.Login_Name).ToArray());
    //}
    
    
    
    
}
<table class="table table-bordered table-hover" id="tblApprovalWorkflow">
    <thead>
        <tr>
            <th style="width:15%;">Level No.</th>
            <th style="width:25%;">Security Group</th>
            <th style="width:50%;">User(s)</th>
            @if (TempData["View"] != "V")
            {
                <th style="width:25%;">Action</th>
            }
        </tr>
    </thead>
    <tbody>
        @if (TempData["Action"] == "AddWorkFlowSG")
        {
            <tr>
                <td align="center">
                    New No.
                </td>
                <td>
                    @Html.DropDownList("Security_Group_Code", TempData["SecurityGroup"] as SelectList, "--Please Select--", new { @class = "form_input chosen-select" })
                </td>
                <td>
                    <span id="UserAdd"></span>
                </td>
                <td align="center">
                    <a title="Save" class="glyphicon glyphicon-ok-circle" style="cursor: pointer;" onclick="SaveWorkFlowSG()"></a>
                    <a title="Cancel" class="glyphicon glyphicon-remove-circle" style="cursor: pointer;" onclick="CancelWorkFlowSG()"></a>
                </td>
            </tr>
        }

        @{int rowNumber = 1;
          int BUCode = ViewBag.BUCode;}
        @if (Model.Count > 0)
        {
            foreach (var item in Model)
            {
                if (TempData["Action"] == "EditWorkFlowSG" && item.Dummy_Guid.ToString() == Convert.ToString(TempData["idWorkFlowSG"]))
                {
                    <tr>
                        <td align="center">
                            <span>@rowNumber</span>
                            <input type="hidden" id="hdnLevelCode" name="LevelCode" value="@rowNumber" />

                        </td>
                        <td>
                            @Html.DropDownList("Security_Group_Code_Edit", TempData["SecurityGroupEdit"] as SelectList, "--Please Select--", new { @class = "form_input chosen-select" })
                        </td>
                        <td>
                            @{
                    int? GC = item.Group_Code;
                    string strRolesEdit = "";
                    if (GC > 0)
                    {
                        if (lstUser.Count > 0)
                        {

                            List<RightsU_Entities.Users_Business_Unit> lst_Users_Business_Unit_Service = new List<RightsU_Entities.Users_Business_Unit>();
                            lst_Users_Business_Unit_Service = new RightsU_BLL.Users_Business_Unit_Service(objLoginEntity.ConnectionStringName).SearchFor(z => true).Where(x => x.Users_Code != null).ToList();
                            var query = lst_Users_Business_Unit_Service.Where(x => x.User.Security_Group_Code == GC && x.Business_Unit_Code == BUCode).Select(s => s.User.Login_Name).ToArray();
                           // string strRoles = "";
                            if (lstUser.Count > 0)
                            {
                                strRolesEdit = string.Join(", ", lst_Users_Business_Unit_Service.Where(x => x.User.Security_Group_Code == GC && x.Business_Unit_Code == BUCode).Select(s => s.User.Login_Name).ToArray());
                            }
                            
                            
                            
                            //strRolesEdit = string.Join(", ", lstUser.Where(x => x.Security_Group_Code == GC).Select(s => s.Login_Name).ToArray());
                        }
                    }
                   
                            }
                            <span id="UserEdit">@strRolesEdit </span>
                        </td>
                        <td align="center">
                            <a title="Save" class="glyphicon glyphicon-ok-circle" style="cursor: pointer;" onclick="UpdateWorkFlowSG('@item.Dummy_Guid')"></a>
                            <a title="Cancel" class="glyphicon glyphicon-remove-circle" style="cursor: pointer;" onclick="CancelWorkFlowSG()"></a>
                        </td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td align="center">
                            <span>@rowNumber</span>
                        </td>
                        @{
                    int? SGCode = 0;
                    int? GC = item.Group_Code;
                    foreach (var objSG in lstSecurityGroup)
                    {
                        SGCode = objSG.Security_Group_Code;
                        if (GC == SGCode)
                        {
                            string strRoles = "";
                            if (lstUser.Count > 0)
                            {

                                List<RightsU_Entities.Users_Business_Unit> lst_Users_Business_Unit_Service = new List<RightsU_Entities.Users_Business_Unit>();
                                lst_Users_Business_Unit_Service = new RightsU_BLL.Users_Business_Unit_Service(objLoginEntity.ConnectionStringName).SearchFor(z => true).Where(x => x.Users_Code != null).ToList();
                                var query = lst_Users_Business_Unit_Service.Where(x => x.User.Security_Group_Code == GC && x.Business_Unit_Code == BUCode).Select(s => s.User.Login_Name).ToArray();
                                // string strRoles = "";
                                if (lstUser.Count > 0)
                                {
                                    strRoles = string.Join(", ", lst_Users_Business_Unit_Service.Where(x => x.User.Security_Group_Code == GC && x.Business_Unit_Code == BUCode).Select(s => s.User.Login_Name).ToArray());
                                }
                                
                               // strRoles = string.Join(", ", lstUser.Where(x => x.Security_Group_Code == SGCode).Select(s => s.Login_Name).ToArray());
                            }
                            <td>
                                <span>@objSG.Security_Group_Name</span>
                            </td>
                            <td>
                                <span>@strRoles</span>
                            </td>
                            break;
                        }
                    }
                        }
                        @if (TempData["View"] != "V")
                        {
                            <td align="center">
                                <a title="Edit" class="glyphicon glyphicon-pencil" style="cursor: pointer;" onclick="AddEditWorkflowSG('@item.Dummy_Guid','EDIT')"></a>
                                <a title="Delete" class="glyphicon glyphicon-trash" style="cursor: pointer;" onclick="DeleteWorkFlowSG('@item.Dummy_Guid', false)"></a>
                            </td>
                        }
                    </tr>
                }
                rowNumber++;
            }
        }
        else
        {
            if (TempData["Action"] != "AddWorkFlowSG")
            {
                <tr>
                    <td colspan="6">No record found</td>
                </tr>
            }

        }
    </tbody>
</table>
<script>
    var URL_SearchUser = '@Url.Action("SearchUser", "ApprovalWorkflow")';
    var Count = @Model.Count;
    $(document).ready(function () {
        debugger;

        if (Count > 0) { 
            $("#Business_Unit_Code").prop("disabled", true);
            $("#Business_Unit_Code").trigger("chosen:updated")
        }
        else {
            $("#Business_Unit_Code").prop("disabled", false);
            $("#Business_Unit_Code").trigger("chosen:updated")
        }

        $("#Security_Group_Code,#Security_Group_Code_Edit").change(function () {
            debugger;
            var SGCode = this.value;
            var BUCode =   $("#Business_Unit_Code").val();
            if (SGCode > 0) {
                SearchUser(SGCode,BUCode)
            }
            else {
                if (SGCode== 0 ) {
                    $('#UserAdd').text("");
                    $('#UserEdit').text("");
               }
            }
        });   
        function SearchUser(SGCode,BUCode) {
            debugger
            $.ajax({
                type: "POST",
                url: URL_SearchUser,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    SGCode: SGCode,
                    BUCode: BUCode
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        $('#UserAdd').text(result.UserList);
                        $('#UserEdit').text(result.UserList);
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                }
            });
        }
    });
</script>