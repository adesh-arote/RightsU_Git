@using UTOFrameWork.FrameworkClasses
@{
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }     
}
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />

<script>
    var sort_Type_G = "T", current_Sort_Type = current_Sort_Type, Module_Code_G =@ViewBag.code, SysLanguageCode_G = '@ViewBag.LangCode';
    var URL_BindChannelList = '@Url.Action("BindChannelList", "Channel")';
    var URL_SearchChannel = '@Url.Action("SearchChannel", "Channel")';
    // var URL_RedirectAddChannel = '@Url.Action("RedirectAddChannel", "Channel")';
    var URL_BindVendorDropdown = '@Url.Action("BindVendorDropdown", "Channel")';
    var URL_ActiveDeactiveChannel = '@Url.Action("ActiveDeactiveChannel", "Channel")';

    var URL_CheckRecordLock = '@Url.Action("CheckRecordLock", "Channel")';
    var URL_Refresh_Lock = '@Url.Action("Refresh_Lock", "Global")';
    var URL_Release_Lock = '@Url.Action("Release_Lock", "Global")';

    $(document).ready(function () {
        if(LayoutDirection_G == "RTL")
        {
            $('#btnUser').css("float","right");
            $('#txtSort').css("text-align", "left");
            $('#ddlSortType_chosen').css("text-align", "right");
        }
        else
        {
            $('#btnUser').css("float","left");
            $('#txtSort').css("text-align","right");
            $('#ddlSortType_chosen').css("text-align", "left");
        }
        initializeTooltip();
        initializeChosen();
        if (current_Sort_Type != undefined) {
            $('#ddlSortType').val(current_Sort_Type).trigger("chosen:updated");
        }
        addNumeric();
        $('#searchCommon').keypress(function (e) {
            if (e.keyCode == 13) {
                btnSearch_OnClick()
                return false;
            }
        });
        if ($('#hdnSearch').val() != '') {
            var searchtext = $('#hdnSearch').val();
            SearchChannel(searchtext);
            $('#searchCommon').val(searchtext);
        }
        else {
            SearchChannel('');
        }
        $("#ddlSortType").change(function () {
            $('#hdnPageNo').val(1);
            sort_Type_G = $('#ddlSortType').val();
            current_Sort_Type = $('#ddlSortType').val();
            SearchChannel($('#searchCommon').val());
        });
       // $("#ancFileName").attr('href', '../Help/Masters/Layout.html?Channel');

    });

    function addNumeric() {
        debugger;
        $(".pagingSize").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 99,
            min: 1
        });
    }

    function SetPaging() {
        IsCall = 'N';
        var pageNo = parseInt($('#hdnPageNo').val());
        var recordCount = parseInt($('#hdnRecordCount').val());
        var pagePerBatch = parseInt($('#hdnPagePerBatch').val());
        var recordPerPage = parseInt($('#txtPageSize').val());

        var cnt = pageNo * recordPerPage;
        if (cnt >= recordCount) {
            var v1 = parseInt(recordCount / recordPerPage);
            if ((v1 * recordPerPage) == recordCount)
                pageNo = v1;
            else
                pageNo = v1 + 1;
        }

        if (pageNo == 0)
            pageNo = 1;

        var index = pageNo - 1;
        $('#hdnPageNo').val(pageNo);

        var opt = null;
        opt = { callback: pageselectCallback };
        opt["items_per_page"] = recordPerPage;
        opt["num_display_entries"] = pagePerBatch;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = index;
        $("#Pagination").pagination(recordCount, opt);
    }
    function pageselectCallback(page_index, jq) {
        $('.required').removeClass('required');

        if (!ValidatePageSize())
            return false;

        var pageNo = page_index + 1
        $('#hdnPageNo').val(pageNo);
        if (IsCall == 'Y')
            BindChannelList();
        else
            IsCall = 'Y';
    }
    function txtPageSize_OnChange() {
        debugger;
        $("[required='required']").removeAttr("required");
        $('.required').removeClass('required');
        if (!ValidatePageSize())
            return false;

        BindChannelList()
        SetPaging();
    }
    function ValidatePageSize() {
        var recordPerPage = $('#txtPageSize').val()
        if ($.trim(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);
            if (pageSize > 0)
                return true;
        }
        $('#txtPageSize').attr('required', true)
        return false
    }
    function pageBinding() {
        BindChannelList()
        SetPaging();
    }
    function btnSearch_OnClick() {
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");

        if (!ValidatePageSize())
            return false;

        var searchText = $.trim($('#searchCommon').val());

        if (searchText == '') {
            $('#searchCommon').attr('required', true)
            return false;
        }
        SearchChannel(searchText);
    }
    function btnShowAll_OnClick() {
        if (!ValidatePageSize())
            return false;

        $('#hdnPageNo').val(1);
        $('#searchCommon').attr('required', false)
        $('#searchCommon').val('');

        sort_Type_G = "T", current_Sort_Type = "T";
        $("#ddlSortType").find("option").attr("selected", false);
        $("#ddlSortType").val('T').trigger("chosen:updated");

        SearchChannel("");
    }
    function BindChannelList() {
        debugger;
        var sort_Type = "";
        var pageNo = $('#hdnPageNo').val();
        var recordPerPage = $('#txtPageSize').val();
        if (current_Sort_Type == undefined)
            sort_Type = sort_Type_G;
        else
            sort_Type = current_Sort_Type;
        $.ajax({
            type: "POST",
            url: URL_BindChannelList,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                pageNo: pageNo,
                recordPerPage: recordPerPage,
                sortType : sort_Type
            }),
            success: function (result) {

                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#divChannel').empty();
                    $('#divChannel').html(result);
                    initializeTooltip();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }

    function SearchChannel(searchText) {
        debugger;
        showLoading();
        $.ajax({
            type: "POST",
            url: URL_SearchChannel,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                searchText: searchText
            }),
            async: false,
            success: function (result) {

                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#hdnPageNo').text(1);
                    $('#lblRecordCount').text(result.Record_Count);
                    $("#hdnRecordCount").val(result.Record_Count);
                    SetPaging()
                    BindChannelList();
                    initializeTooltip();
                    hideLoading();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
                hideLoading();
            }
        });
    }
    function BindVendorDropdown(other) {
        $.ajax({
            type: "POST",
            url: URL_BindVendorDropdown,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                other: other
            }),
            async: false,
            success: function (result) {

                if (result == "true") {
                    redirectToLogin();
                }
                else {

                    $("#ddlVendor").empty();
                    $.each(result.CountryList, function () {
                        $("#ddlVendor").append($("<option />").val(this.Value).text(this.Text));
                    });
                    $("#ddlVendor").trigger("chosen:updated");

                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }
    function CancelRightRule() {
        BindChannelList();
    }
    function handleOk() {
    }
    function handleCancel() {
    }
    //function AddRule() {
    //    debugger;
    //    showLoading();
    //    $.ajax({
    //        type: "POST",
    //        url: URL_RedirectAddChannel,
    //        traditional: true,
    //        enctype: 'multipart/form-data',
    //        contentType: "application/json; charset=utf-8",
    //        data: JSON.stringify({
    //        }),
    //        async: false,
    //        success: function (result) {
    //            debugger;
    //            if (result == "true") {
    //                redirectToLogin();
    //            }
    //            else {

    //            }
    //        },
    //        error: function (result) {
    //            alert('Error: ' + result.responseText);
    //            hideLoading();
    //        }
    //    });
    //}
    function ActiveDeactiveChannel(Channel_Code, doActive) {
        debugger;
        $.ajax({
            type: "POST",
            url: URL_ActiveDeactiveChannel,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                Channel_Code: Channel_Code,
                doActive: doActive
            }),
            async: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    if (result.Status == "S") {
                        showAlert("S", result.Message);
                        BindChannelList();

                    }
                    else {
                        showAlert("E", result.Message, "");
                    }
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
                hideLoading();
            }
        });
    }
    function checkCurrentAction() {
        debugger;
        var action = $.trim($('#hdnAction').val());
        if (action == "ADD") {
            showAlert("I", "@objMessageKey.CompleteAddOperationFirst")
            return false;
        }
        else if (action == "EDIT") {
            showAlert("I", "@objMessageKey.CompleteEditOperationFirst")
            return false;
        }
        return true;
    }
    function ExportToExcel()
    {
        var type = "";
        var Module_Name = "Channel";
        type = $('#ddlSortType').val();
        var StrSearchCriteria = $.trim($('#searchCommon').val());
        window.location.href = '@Url.Action("ExportToExcel", "Global")?Module_Code='+Module_Code_G + '&SysLanguageCode=' + SysLanguageCode_G + '&Module_Name='+Module_Name+ '&sortColumnOrder='+type + '&StrSearchCriteria=' + StrSearchCriteria;
    }
</script>
<style>
     #ddlSortType_chosen {
        max-width: 46%;
        text-align:left;
    }
</style>
<div class="">
    <div class="title_block dotted_border clearfix">
        <h2 class="pull-left">
            @objMessageKey.ChannelList
            <span></span>
        </h2>

        <div class="right_nav pull-right">
            <ul>
                <li id="btnUser">
                    <input type="submit" value="@objMessageKey.Add" id="btnAdd" class="btn btn-primary" onclick="BindPartialView('ADD', 0);">
                </li>
                <li>
                    @if (ViewBag.UserModuleRights.Contains("~" + GlobalParams.RightCodeForExportToExcel.ToString() + "~"))
                    {   
                        <a title="@objMessageKey.SaveToExcel" class="glyphicon glyphicon-floppy-save" style="cursor:pointer; text-decoration:underline; " onclick="ExportToExcel()">
                        </a>
                    }
                </li>
            </ul>
        </div>

        <div class="right_nav pull-right">
        </div>
    </div>
    <div class="search_area" style="background-color: #eee; padding:5px;">
        <table class="table">
            <tr>
                <td style="width:10%;text-align:right;padding-top:8px;">
                   @objMessageKey.ChannelName:
                </td>
                <td style="width:22%;">
                    <input type="text" name="srchCommon" id="searchCommon" class="search text" maxlength="50" style="width:100%" placeholder="@objMessageKey.ChannelName" />
                </td>
                <td>
                    <input type="button" id="btnSearch" class="button" value="@objMessageKey.Search" onclick="btnSearch_OnClick()">
                    <input type="button" id="btnShowAll" class="button" value="@objMessageKey.ShowAll" onclick="btnShowAll_OnClick()">
                </td>
                <td style="width:42%;" id="txtSort">
                    @objMessageKey.SortBy :
                    @Html.DropDownList("SortType", (List<SelectListItem>)ViewBag.SortType, new { @id = "ddlSortType", @class = "form_input chosen-select" })
                </td>
            </tr>
        </table>
    </div>
    <div class="grid_area">
        <div style="border-bottom: 1px dotted #777; display:none;"></div>
        <div class="paging_area clearfix">
            <span class="pull-left">@objMessageKey.TotalRecords: </span>
            <span class="pull-left" id="lblRecordCount" style="font-weight:bold"></span>
            <input type="hidden" id="hdnPageNo" name="hdnPageNo" value="1" />
            <input type="hidden" id="hdnPagePerBatch" name="hdnPagePerBatch" value="5" />
            <input type="hidden" id="hdnRecordCount" name="hdnRecordCount" value="0" />

            <div id="Pagination" class="pagination">
            </div>
            <span class="pull-right">
                <b>@objMessageKey.PageSize:</b>
                <input type="text" id="txtPageSize" name="txtPageSize" class="smallTextBox pagingSize" value="10" onchange="txtPageSize_OnChange()" onblur="setDefaultPaging('txtPageSize')">
            </span>
        </div>
        <div class="tab-content clearfix table-wrapper scale_table_container">
            <div class="scale_table_block">
                <input type="hidden" id="hdnRightRuleCode" value="0" />
                <div id="divChannel" class="deal clearfix">

                </div>

            </div>
        </div>
    </div>
</div>
