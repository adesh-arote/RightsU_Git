@using UTOFrameWork.FrameworkClasses
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    MessageKey objMessageKey = new MessageKey();
    if (Session["objMessageKey"] != null)
    {
        objMessageKey = (MessageKey)Session["objMessageKey"];
    }
}
<link type="text/css" rel="stylesheet" href="~/css/chosen.min.css?v=@System.Configuration.ConfigurationManager.AppSettings["Version_No"]" />

<script>
    var IsCall = 'Y', Command_Name = "", sort_Type = "T" , Module_Code_G = @ViewBag.Code, SysLanguageCode_G = '@ViewBag.LangCode';
    var URL_BindMusic_LabelList = '@Url.Action("BindMusic_LabelList", "Music_Label")';
    var URL_SearchMusic_Label = '@Url.Action("SearchMusic_Label", "Music_Label")';
    var URL_ActiveDeactiveMusic_Label = '@Url.Action("ActiveDeactiveMusic_Label", "Music_Label")';
    var URL_SaveUpdateMusic_LabelList = '@Url.Action("SaveUpdateMusic_LabelList", "Music_Label")';
    var URL_AddEditMusic_LabelList = '@Url.Action("AddEditMusic_LabelList", "Music_Label")';
    var URL_CheckRecordLock = '@Url.Action("CheckRecordLock", "Music_Label")';
    var URL_Refresh_Lock = '@Url.Action("Refresh_Lock", "Global")';
    var URL_Release_Lock = '@Url.Action("Release_Lock", "Global")';
    var URL_Reload_Current_Page = '@Url.Action("Index", "Music_Label")';

    $(document).ready(function () {
        if(LayoutDirection_G == "RTL")
        {
            $('#txtLabel').css("text-align", "left");
            $('.paging_area').css("direction","rtl");
        }
        else{
            $('#txtLabel').css("text-align", "right");
            $('.paging_area').css("direction","ltr");
        }
        addNumeric();
        SearchMusic_Label("");
        $('#searchCommon').keypress(function (e) {
            debugger;
            if (e.keyCode == 13) {
                btnSearch_OnClick()
                return false;
            }
        });
        $("#ddlSortType").change(function () {
            if (!checkCurrentAction()) {
                $('#ddlSortType').val(sort_Type).trigger("chosen:updated")
                return false;
            }
            sort_Type = $('#ddlSortType').val();
            $('#hdnPageNo').val(1);
            var searchtext= $("#searchCommon").val();
            SearchMusic_Label(searchtext);
        });
       // $("#ancFileName").attr('href', '../Help/Masters/Layout.html?MusicLabel');
    });
    function addNumeric() {
        $(".pagingSize").numeric({
            allowMinus: false,
            allowThouSep: false,
            allowDecSep: false,
            max: 99,
            min: 1
        });
    }
    function SetPaging() {
        IsCall = 'N';
        var pageNo = parseInt($('#hdnPageNo').val());
        var recordCount = parseInt($('#hdnRecordCount').val());
        var pagePerBatch = parseInt($('#hdnPagePerBatch').val());
        var recordPerPage = parseInt($('#txtPageSize').val());
        var cnt = pageNo * recordPerPage;
        if (cnt >= recordCount) {
            var v1 = parseInt(recordCount / recordPerPage);
            if ((v1 * recordPerPage) == recordCount)
                pageNo = v1;
            else
                pageNo = v1 + 1;
        }
        if (pageNo == 0)
            pageNo = 1;

        var index = pageNo - 1;
        $('#hdnPageNo').val(pageNo);
        var opt = null;
        opt = { callback: pageselectCallback };
        opt["items_per_page"] = recordPerPage;
        opt["num_display_entries"] = pagePerBatch;
        opt["num"] = 10;
        opt["prev_text"] = "<<";
        opt["next_text"] = ">>";
        opt["current_page"] = index;
        $("#Pagination").pagination(recordCount, opt);
    }
    function pageselectCallback(page_index, jq) {
        if (!checkCurrentAction())
            return false;
        $('.required').removeClass('required');

        if (!ValidatePageSize())
            return false;

        var pageNo = page_index + 1
        $('#hdnPageNo').val(pageNo);
        if (IsCall == 'Y')
            BindMusic_LabelList();
        else
            IsCall = 'Y';
    }
    function txtPageSize_OnChange() {
        $("[required='required']").removeAttr("required");
        $('.required').removeClass('required');
        if (!checkCurrentAction())
            return false;

        if (!ValidatePageSize())
            return false;

        BindMusic_LabelList()
        SetPaging();
    }
    function ValidatePageSize() {
        var recordPerPage = $('#txtPageSize').val()
        if ($.trim(recordPerPage) != '') {
            var pageSize = parseInt(recordPerPage);
            if (pageSize > 0)
                return true;
        }
        $('#txtPageSize').attr('required', true)
        return false
    }
    function pageBinding() {
        BindMusic_LabelList();
        SetPaging();
    }
    function btnSearch_OnClick() {
        //if (!checkCurrentAction())
        //    return false;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        if (!ValidatePageSize())
            return false;
        var searchText = $.trim($('#searchCommon').val());
        if (searchText == '') {
            $('#searchCommon').attr('required', true)
            return false;
        }
        SearchMusic_Label(searchText);
    }
    function btnShowAll_OnClick() {
        //if (!checkCurrentAction())
        //    return false;
        if (!ValidatePageSize())
            return false;
        sort_Type= "T";
        $("#ddlSortType").find("option").attr("selected", false);
        $("#ddlSortType").val('T').trigger("chosen:updated");
        $('#hdnPageNo').val(1);
        $('#searchCommon').attr('required', false)
        $('#searchCommon').val('');
        SearchMusic_Label("");
    }
    function checkCurrentAction() {
        debugger;
        var action = $.trim($('#hdnAction').val());
        if (action == "ADD") {
            showAlert("I", "@objMessageKey.CompleteAddOperationFirst")
            return false;
        }
        else if (action == "EDIT") {
            showAlert("I", "@objMessageKey.CompleteEditOperationFirst")
            return false;
        }
        return true;
    }
    function BindMusic_LabelList() {
        var pageNo = $('#hdnPageNo').val();
        var recordPerPage = $('#txtPageSize').val();
        if (recordPerPage == "") {
            recordPerPage = 10;
            $('#txtPageSize').val("10");
        }
        $.ajax({
            type: "POST",
            url: URL_BindMusic_LabelList,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            dataType: "html",
            data: JSON.stringify({
                pageNo: pageNo,
                recordPerPage: recordPerPage,
                sortType : sort_Type
            }),
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#divMusic_LabelList').empty();
                    $('#divMusic_LabelList').html(result);
                    initializeTooltip();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
            }
        });
    }
    function SearchMusic_Label(searchText) {
        showLoading();
        $.ajax({
            type: "POST",
            url: URL_SearchMusic_Label,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                searchText: searchText
            }),
            async: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    $('#hdnPageNo').text(1);
                    $('#hdnPageNo').val(1);
                    $('#lblRecordCount').text(result.Record_Count);
                    $("#hdnRecordCount").val(result.Record_Count);
                    SetPaging()
                    BindMusic_LabelList();
                    hideLoading();
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
                hideLoading();
            }
        });
    }
    function ActiveDeactiveMusic_Label(Music_LabelCode, doActive) {
        if (checkCurrentAction()) {

            $.ajax({
                type: "POST",
                url: URL_ActiveDeactiveMusic_Label,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    Music_LabelCode: Music_LabelCode,
                    doActive: doActive
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        if (result.Status == "S") {
                            showAlert("S", result.Message);
                            if ($("#searchCommon").val() != "") {
                                SearchMusic_Label($("#searchCommon").val())
                            }
                            else {
                                BindMusic_LabelList();
                            }
                            $('#hdnAction').val("");

                        }
                        else {
                            showAlert("E", result.Message);
                        }
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                    hideLoading();
                }
            });
        }
    }
    function AddEditMusic_LabelList(Music_LabelCode, commandName) {
        debugger;
        $('.required').removeClass('required');
        $("[required='required']").removeAttr("required");
        debugger;
        if (checkCurrentAction()) {
            $('#hdnAction').val(commandName)
            $.ajax({
                type: "POST",
                url: URL_AddEditMusic_LabelList,
                traditional: true,
                enctype: 'multipart/form-data',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({
                    Music_LabelCode: Music_LabelCode,
                    commandName: commandName
                }),
                async: false,
                success: function (result) {
                    if (result == "true") {
                        redirectToLogin();
                    }
                    else {
                        if (result.Status == "S") {
                            BindMusic_LabelList();
                        }
                    }
                },
                error: function (result) {
                    alert('Error: ' + result.responseText);
                    hideLoading();
                }
            });
        }
    }
    function SaveUpdateMusic_Label(Music_LabelCode) {
        debugger;
        var formData = new FormData();
        if (Music_LabelCode == 0) {
            if (!Validate_Save()) {
                return false;
            }
            var Music_LabelCode = Music_LabelCode;
            var Record_Code= $('#hdnRecodLockingCode').val();
            var Music_Label_Name = $("#Music_LabelName").val();
            formData.append("Music_LabelCode", Music_LabelCode);
            formData.append("Music_Label_Name", Music_Label_Name);
            formData.append("Record_Code", Record_Code);
        }
        else {
            if (!Validate_Update()) {
                return false;
            }
            var Music_LabelCode = Music_LabelCode;
            var Record_Code= $('#hdnRecodLockingCode').val();
            var Music_Label_Name = $("#Music_Label_NameEdit").val();
            formData.append("Music_LabelCode", Music_LabelCode);
            formData.append("Music_Label_Name", Music_Label_Name);
            formData.append("Record_Code", Record_Code);
        }

        $.ajax({
            type: "POST",
            url: URL_SaveUpdateMusic_LabelList,
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    if (result.Status == "S") {
                        $('#lblRecordCount').text(result.RecordCount);
                        showAlert("S", result.Message);
                        $('#hdnAction').val("")
                        if ($("#searchCommon").val() != "") {
                            SearchMusic_Label($("#searchCommon").val())
                        }
                        else {
                            BindMusic_LabelList();
                        }



                        //BindMusic_LabelList();
                    }
                    else {
                        showAlert("E", result.Message);
                    }
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
                hideLoading();
            }
        });
    }
    function CancelMusic_Label() {
        var recordLockingCode = parseInt($('#hdnRecodLockingCode').val())
        if (recordLockingCode > 0)
            ReleaseRecordLock(recordLockingCode, URL_Release_Lock);
        BindMusic_LabelList();
        $('#hdnAction').val("")
    }
    function Validate_Save() {
        var returnVal = true;
        if ($.trim($('#Music_LabelName').val()) == "") {
            $('#Music_LabelName').val('')
            $('#Music_LabelName').attr('required', true)
            returnVal = false;
        }
        return returnVal;
    }
    function Validate_Update() {
        debugger;
        var returnVal = true;

        if ($.trim($('#Music_Label_NameEdit').val()) == "") {
            $('#Music_Label_NameEdit').val('')
            $('#Music_Label_NameEdit').attr('required', true)
            returnVal = false;
        }
        return returnVal;
    }
    function CheckRecordLock(Music_LabelCode,commandName){
        $.ajax({
            type: "POST",
            url: URL_CheckRecordLock,
            traditional: true,
            enctype: 'multipart/form-data',
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({
                Music_LabelCode: Music_LabelCode,
                commandName:commandName
            }),
            async: false,
            success: function (result) {
                if (result == "true") {
                    redirectToLogin();
                }
                else {
                    if (result.Is_Locked == "Y") {
                        AddEditMusic_LabelList(Music_LabelCode,commandName)
                        $('#hdnRecodLockingCode').val(result.Record_Locking_Code);
                        Call_RefreshRecordReleaseTime(result.Record_Locking_Code, URL_Refresh_Lock);
                    }
                    else
                        showAlert("E", result.Message);
                }
            },
            error: function (result) {
                alert('Error: ' + result.responseText);
                hideLoading();
            }
        });
    }

    function ExportToExcel() {

        debugger;
        var type = "";
        var Module_Name = "Music Label";
        type = $('#ddlSortType').val();
        var StrSearchCriteria = $.trim($('#searchCommon').val());
        window.location.href = '@Url.Action("ExportToExcel", "Global")?Module_Code=' + Module_Code_G + '&SysLanguageCode=' + SysLanguageCode_G + '&Module_Name=' + Module_Name + '&sortColumnOrder=' + type+ '&StrSearchCriteria=' + StrSearchCriteria;

    }
</script>
<style>
    #ddlSortType_chosen {
        max-width: 48%;
        text-align: left;
    }
</style>
<div class="main_section">
    <section class="rightsU_container clearfix">
        <div class="container acq main_col">
            <div class="">
                <div class="title_block dotted_border clearfix">
                    <h2 class="pull-left">
                        @objMessageKey.MusicLabelList
                        <span></span>
                    </h2>
                    <div class="right_nav pull-right">
                        <ul>
                            <li>
                                @if (ViewBag.UserModuleRights.Contains("~" + UTOFrameWork.FrameworkClasses.GlobalParams.RightCodeForAdd + "~"))
                                {
                                    <input type="submit" value="@objMessageKey.Add"  onclick="AddEditMusic_LabelList(0,'ADD')" id="btnAdd" class="btn btn-primary">
                                }
                            </li>
                            <li>
                                @if (ViewBag.UserModuleRights.Contains("~" + GlobalParams.RightCodeForExportToExcel.ToString() + "~"))
                                {
                                    <a title="@objMessageKey.SaveToExcel" class="glyphicon glyphicon-floppy-save" style="cursor:pointer; text-decoration:underline; " onclick="ExportToExcel()">
                                    </a>
                                }
                            </li>
                        </ul>
                    </div>
                    <div class="right_nav pull-right">
                    </div>
                </div>
                <div class="search_area" style="background-color:#eee">
                    <table class="table">
                        <tr>
                            <td style="width:15%;line-height: 26px;">
                                @objMessageKey.MusicLabelName :
                            </td>
                            <td style="width:30%;">
                                <input type="text" name="srchCommon" id="searchCommon" class="search" style="width:100%" placeholder="@objMessageKey.MusicLabelName" />
                            </td>
                            <td>
                                <input type="button" id="btnSearch" class="button" value="@objMessageKey.Search" onclick="btnSearch_OnClick()">
                                <input type="button" id="btnShowAll" class="button" value="@objMessageKey.ShowAll" onclick="btnShowAll_OnClick()">
                            </td>
                            <td id="txtLabel">
                                @objMessageKey.SortBy :
                                @Html.DropDownList("SortType", (List<SelectListItem>)ViewBag.SortType, new { @id = "ddlSortType", @class = "form_input chosen-select" })
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="grid_area">
                    <div style="border-bottom: 1px dotted #777; display:none;"></div>
                    <div class="paging_area clearfix">
                        <span class="pull-left">@objMessageKey.TotalRecords: </span>
                        <span class="pull-left" id="lblRecordCount"></span>
                        <input type="hidden" id="hdnPageNo" name="hdnPageNo" value="1" />
                        <input type="hidden" id="hdnPagePerBatch" name="hdnPagePerBatch" value="5" />
                        <input type="hidden" id="hdnRecordCount" name="hdnRecordCount" value="0" />

                        <div id="Pagination" class="pagination">
                        </div>
                        <span class="pull-right">
                            @objMessageKey.PageSize:
                            <input type="text" id="txtPageSize" name="txtPageSize" class="smallTextBox pagingSize" value="10"
                                   onchange="txtPageSize_OnChange()" onfocus="checkCurrentAction()" onblur="setDefaultPaging('txtPageSize')">
                        </span>
                    </div>
                    <div class="tab-content clearfix table-wrapper scale_table_container">
                        <div class="scale_table_block">
                            <input type="hidden" id="hdnAction" value="" />
                            <input type="hidden" id="hdnMusic_LabelCode" value="0" />
                            <input type="hidden" id="hdnRecodLockingCode" name="hdnRecodLockingCode" value="0" />
                            <div id="divMusic_LabelList" class="deal clearfix">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
